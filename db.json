{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-fluid/source/img/avatar.png","path":"img/avatar.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/fluid.png","path":"img/fluid.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/default.png","path":"img/default.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/loading.gif","path":"img/loading.gif","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/police_beian.png","path":"img/police_beian.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/css/gitalk.css","path":"css/gitalk.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/css/highlight-dark.styl","path":"css/highlight-dark.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/css/highlight.styl","path":"css/highlight.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/boot.js","path":"js/boot.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/color-schema.js","path":"js/color-schema.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/events.js","path":"js/events.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/img-lazyload.js","path":"js/img-lazyload.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/leancloud.js","path":"js/leancloud.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/plugins.js","path":"js/plugins.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/xml/local-search.xml","path":"xml/local-search.xml","modified":0,"renderable":1},{"_id":"source/img/abount.png","path":"img/abount.png","modified":0,"renderable":0},{"_id":"source/img/favicon.ico","path":"img/favicon.ico","modified":0,"renderable":0},{"_id":"source/img/favicon.png","path":"img/favicon.png","modified":0,"renderable":0},{"_id":"source/img/fluid_hexo.png","path":"img/fluid_hexo.png","modified":0,"renderable":0},{"_id":"source/img/logo.png","path":"img/logo.png","modified":0,"renderable":0},{"_id":"source/img/logo.svg","path":"img/logo.svg","modified":0,"renderable":0},{"_id":"source/img/touxiang.jpeg","path":"img/touxiang.jpeg","modified":0,"renderable":0},{"_id":"source/img/wechat.jpeg","path":"img/wechat.jpeg","modified":0,"renderable":0},{"_id":"source/img/bg/dusk.jpg","path":"img/bg/dusk.jpg","modified":0,"renderable":0},{"_id":"source/img/bg/morning.jpg","path":"img/bg/morning.jpg","modified":0,"renderable":0},{"_id":"source/img/bg/summer.jpg","path":"img/bg/summer.jpg","modified":0,"renderable":0},{"_id":"source/img/bg/tag.jpg","path":"img/bg/tag.jpg","modified":0,"renderable":0}],"Cache":[{"_id":"source/about/index.md","hash":"6327555265b8ae97da40cebb5400b3918875624c","modified":1697694005787},{"_id":"source/img/abount.png","hash":"f43ea32aa494f2bf98b8c9bb61e1e37a555d643e","modified":1684991531053},{"_id":"source/img/fluid_hexo.png","hash":"054ecd8187743517ff5105abee9c3827d1415759","modified":1684991531102},{"_id":"source/img/favicon.png","hash":"0946928a8c91635d57dc38a5906f419ea4b34e6e","modified":1684991531102},{"_id":"source/img/logo.png","hash":"8edc532b4d0d4e5b9be45bbd8ff5a718f5da8952","modified":1684991531104},{"_id":"source/img/logo.svg","hash":"82d1d17897cb2bfeec12244a8e300aef4042e7dd","modified":1684991531104},{"_id":"source/_posts/writing-standard/number.md","hash":"c0837afc51e2a00fab7f82bed9900c7a29a5d49f","modified":1684991531050},{"_id":"source/_posts/writing-standard/marks.md","hash":"773d6969c2b34a9b9651fd6e55e127b9e288a78f","modified":1697692578971},{"_id":"source/_posts/writing-standard/reference.md","hash":"eef4c38694e6c775b5dff3ec3bc7952fd9dea270","modified":1684991531051},{"_id":"source/_posts/writing-standard/paragraph.md","hash":"f3c767bd8a3808b0e924085237fcea779dc072c5","modified":1684991531051},{"_id":"source/_posts/writing-standard/text.md","hash":"f4f207db20fd0dcb91a059e16f8bec10e2ed21bb","modified":1697692578972},{"_id":"source/_posts/writing-standard/title.md","hash":"d87fcb2b7a0e38df7ea39254caef966662ae6b9b","modified":1697692578973},{"_id":"source/_posts/writing-standard/structure.md","hash":"fd90e0c600df95536e14e28a9d70979dae344bfd","modified":1684991531051},{"_id":"source/img/favicon.ico","hash":"9ef43518691b46a5b17fcd00fd238ce25bf42179","modified":1684991531101},{"_id":"source/img/touxiang.jpeg","hash":"3129a65b314d97fbb8a65f42163e40c6dc072598","modified":1684991531106},{"_id":"source/img/wechat.jpeg","hash":"7709e63249c0b0ffe1567d58bdb3d1843a9c091c","modified":1697208745922},{"_id":"source/img/bg/summer.jpg","hash":"c4d967b04da594f6b3c1e66c8f144e148bc38127","modified":1684991531089},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_tag/tag.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1684991903094},{"_id":"node_modules/hexo-theme-fluid/package.json","hash":"41983970c0977b3c626c3f1e3c714cf78ac6a04e","modified":1697692670313},{"_id":"node_modules/hexo-theme-fluid/LICENSE","hash":"26f9356fd6e84b5a88df6d9014378f41b65ba209","modified":1684991901550},{"_id":"node_modules/hexo-theme-fluid/languages/en.yml","hash":"cb11b39f44ea069652c9647179606b6cecc98d50","modified":1684991903102},{"_id":"node_modules/hexo-theme-fluid/README.md","hash":"49f681a203eecfa7127ac22edc13bd3b49693d0a","modified":1697692670313},{"_id":"node_modules/hexo-theme-fluid/languages/de.yml","hash":"0e7d455d9e004ff15d8924b7a0c35cea25ee5b1d","modified":1684991903101},{"_id":"node_modules/hexo-theme-fluid/_config.yml","hash":"cdde6c6d6a1bdf9fb965313e21d92cf6213582b6","modified":1697692670313},{"_id":"node_modules/hexo-theme-fluid/languages/es.yml","hash":"7112594259c88c04714be152af7fd377687dad40","modified":1684991903103},{"_id":"node_modules/hexo-theme-fluid/languages/ja.yml","hash":"3dd6d20f8d26585a7c154a8e59fe8d5d902f4c6a","modified":1684991903104},{"_id":"node_modules/hexo-theme-fluid/languages/eo.yml","hash":"a556251cc50a5680578c03f1efbf252b1f4ab860","modified":1684991903102},{"_id":"node_modules/hexo-theme-fluid/languages/ru.yml","hash":"7dc78f22696649a4c68dc65a9b52d9a992fa82a0","modified":1684991903105},{"_id":"node_modules/hexo-theme-fluid/languages/zh-CN.yml","hash":"f96a22f989897ecddc69d5867a206e1cf6b8f610","modified":1684991903106},{"_id":"node_modules/hexo-theme-fluid/layout/404.ejs","hash":"b84d575c7b7f778b4cb64e89ad3d0aed4a896820","modified":1684991901557},{"_id":"node_modules/hexo-theme-fluid/layout/about.ejs","hash":"163bee643e6a38912d3ae70923c83c48d57222e7","modified":1684991901557},{"_id":"node_modules/hexo-theme-fluid/languages/zh-HK.yml","hash":"80ed400a7adaa92ea54fc7f5d534c9af795bed00","modified":1684991903107},{"_id":"node_modules/hexo-theme-fluid/layout/categories.ejs","hash":"13859726c27b6c79b5876ec174176d0f9c1ee164","modified":1684991901564},{"_id":"node_modules/hexo-theme-fluid/layout/archive.ejs","hash":"7c1f44005849791feae4abaa10fae4cb983d3277","modified":1684991901561},{"_id":"node_modules/hexo-theme-fluid/languages/zh-TW.yml","hash":"596d031dff3826ae8e4ffc8931fff28977b73247","modified":1684991903107},{"_id":"node_modules/hexo-theme-fluid/layout/category.ejs","hash":"f099161b738a16a32253f42085b5444f902018ed","modified":1684991901566},{"_id":"node_modules/hexo-theme-fluid/layout/index.ejs","hash":"9b4c154462ce78de4c9ea7dd15dce4ca8e8c1cf8","modified":1697692670313},{"_id":"node_modules/hexo-theme-fluid/layout/layout.ejs","hash":"7e0023474128fbe4d68c467704c41f1712432415","modified":1684991901571},{"_id":"node_modules/hexo-theme-fluid/layout/links.ejs","hash":"1cac32ec4579aaf7b9fa39d317497331d4c5e1dd","modified":1684991901571},{"_id":"node_modules/hexo-theme-fluid/layout/page.ejs","hash":"ed5007a3feb8f14d3d2843271bfb298eb0c56219","modified":1684991901577},{"_id":"node_modules/hexo-theme-fluid/layout/post.ejs","hash":"75ab6958d929e92566ca580d0b8bd0eeae10649a","modified":1697692670313},{"_id":"node_modules/hexo-theme-fluid/layout/tag.ejs","hash":"9d686364c4d16a1a9219471623af452035c5b966","modified":1684991901580},{"_id":"node_modules/hexo-theme-fluid/layout/tags.ejs","hash":"1d06af34b6cf1d8a20d2eb565e309326ceba309f","modified":1684991901580},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/archive-list.ejs","hash":"7520fbf91f762207c2ab06b2c293235cd5b23905","modified":1684991901561},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/category-chains.ejs","hash":"18309584aab83bc4deb20723ebad832149dd2e24","modified":1684991901565},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/category-list.ejs","hash":"f8d2f1907450e61968e6d54443e9be8138196a77","modified":1684991901566},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments.ejs","hash":"d707c47b2638c94e489bc43d4cfd098b7c58447f","modified":1684991901567},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/css.ejs","hash":"85f6e051550907681ab4ed2e268ac8f6e9ebf931","modified":1684991901568},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/footer.ejs","hash":"10ccfb8eef4e16182183c9a3e175c90d5b6397d3","modified":1684991901569},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/head.ejs","hash":"7b7b1d098726e86687a15fe3d520d178577ffcae","modified":1684991901570},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/markdown-plugins.ejs","hash":"fc4bdf7de0cf1a66d0e5e4fba1b31d6f7ed49468","modified":1684991901571},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/header.ejs","hash":"0d5e397d30051e5fbabe7b47cfd1f1e6a5820af1","modified":1684991901570},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/paginator.ejs","hash":"0f38a2c238169edcb63fc46c23bfc529ff3859b7","modified":1684991901577},{"_id":"node_modules/hexo-theme-fluid/scripts/filters/default-injects.js","hash":"b2013ae8e189cd07ebc8a2ff48a78e153345210f","modified":1684991901596},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/scripts.ejs","hash":"da5810785105e5075861593c7ac22c7aa9665a72","modified":1684991901579},{"_id":"node_modules/hexo-theme-fluid/scripts/filters/post-filter.js","hash":"0047666f996c54017e06668b5242ed8a311ebce0","modified":1697692670313},{"_id":"node_modules/hexo-theme-fluid/scripts/filters/locals.js","hash":"58d0fec976f6b1d35e7ea03edc45414088acf05c","modified":1684991901610},{"_id":"node_modules/hexo-theme-fluid/scripts/events/index.js","hash":"79de5a379b28cad759a49048351c7f6b8915bd7d","modified":1684991901606},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/search.ejs","hash":"70e1c929e084ca8a2648cedabf29b372511ea2b8","modified":1684991901579},{"_id":"node_modules/hexo-theme-fluid/scripts/generators/local-search.js","hash":"9ac5ddad06e9b0e6015ce531430018182a4bc0fa","modified":1697692670313},{"_id":"node_modules/hexo-theme-fluid/scripts/generators/pages.js","hash":"d3e75f53c59674d171309e50702954671f31f1a4","modified":1697692670313},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/date.js","hash":"9bda6382f61b40a20c24af466fe10c8366ebb74c","modified":1684991901595},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/import.js","hash":"ca53e8dbf7d44cfd372cfa79ac60f35a7d5b0076","modified":1684991901604},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/engine.js","hash":"d3a231d106795ce99cb0bc77eb65f9ae44515933","modified":1684991901598},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/export-config.js","hash":"8e67b522c47aa250860e3fe2c733f1f958a506c0","modified":1697692670313},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/injects.js","hash":"1ad2ae6b11bd8806ee7dd6eb7140d8b54a95d613","modified":1684991901606},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/scope.js","hash":"d41d9d658fcb54964b388598e996747aadb85b0f","modified":1684991901614},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/page.js","hash":"4607607445233b3029ef20ed5e91de0da0a7f9c5","modified":1684991901611},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/url.js","hash":"2a6a8288176d0e0f6ec008056bf2745a86e8943e","modified":1684991901615},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/utils.js","hash":"226f99b465ff513de075a8e78b321d6cb62592ca","modified":1684991901617},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/wordcount.js","hash":"4543b8954c5c2ca91191cc0d53cf071b3f26faaa","modified":1684991901619},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/compare-versions.js","hash":"dbbc928c914fc2bd242cd66aa0c45971aec13a5d","modified":1684991901593},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/object.js","hash":"33b57e4decdc5e75c518859f168c8ba80b2c665b","modified":1684991901611},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/resolve.js","hash":"8c4a8b62aa8608f12f1e9046231dff04859dc3e9","modified":1684991901612},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/url-join.js","hash":"718aab5e7b2059a06b093ca738de420d9afa44ba","modified":1684991901614},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/button.js","hash":"3eb43a8cdea0a64576ad6b31b4df6c2bf5698d4c","modified":1684991901591},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/checkbox.js","hash":"4938610c3543a921a341bc074626d511cb1a4b45","modified":1684991901592},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/group-image.js","hash":"4aeebb797026f1df25646a5d69f7fde79b1bcd26","modified":1684991901602},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/mermaid.js","hash":"75160561e1ef3603b6d2ad2938464ab1cb77fd38","modified":1684991901611},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/label.js","hash":"f05a6d32cca79535b22907dc03edb9d3fa2d8176","modified":1684991901606},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/note.js","hash":"e3b456a079e5dc0032473b516c865b20f83d2c26","modified":1697692670313},{"_id":"node_modules/hexo-theme-fluid/source/img/avatar.png","hash":"fe739a158cc128f70f780eb5fa96f388b81d478f","modified":1684991901620},{"_id":"node_modules/hexo-theme-fluid/source/img/fluid.png","hash":"64b215db2cb3af98fe639e94537cb5209f959c78","modified":1684991902890},{"_id":"node_modules/hexo-theme-fluid/source/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":1684991901587},{"_id":"node_modules/hexo-theme-fluid/source/css/gitalk.css","hash":"a57b3cc8e04a0a4a27aefa07facf5b5e7bca0e76","modified":1684991901555},{"_id":"node_modules/hexo-theme-fluid/source/img/police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":1684991902890},{"_id":"node_modules/hexo-theme-fluid/source/css/highlight-dark.styl","hash":"45695ef75c31a4aa57324dd408b7e2327a337018","modified":1684991903080},{"_id":"node_modules/hexo-theme-fluid/source/css/highlight.styl","hash":"a9efc52a646a9e585439c768557e3e3c9e3326dc","modified":1684991903080},{"_id":"node_modules/hexo-theme-fluid/source/js/boot.js","hash":"38bd26c6b7acdafda86dda3560e6a3ca488d3c76","modified":1684991901590},{"_id":"node_modules/hexo-theme-fluid/source/css/main.styl","hash":"855ae5fe229c51afa57f7645f6997a27a705d7e4","modified":1684991903084},{"_id":"node_modules/hexo-theme-fluid/source/js/events.js","hash":"89e3561488a618ed0caeb9edf18e441978e29c25","modified":1684991901599},{"_id":"node_modules/hexo-theme-fluid/source/js/color-schema.js","hash":"76a198f8721352ebeaf5b2ef2f4db00612da4796","modified":1684991901592},{"_id":"node_modules/hexo-theme-fluid/source/js/img-lazyload.js","hash":"cbdeca434ec4da51f488c821d51b4d23c73294af","modified":1684991901604},{"_id":"node_modules/hexo-theme-fluid/source/js/leancloud.js","hash":"eff77c7a5c399fcaefda48884980571e15243fc9","modified":1684991901609},{"_id":"node_modules/hexo-theme-fluid/source/js/local-search.js","hash":"b9945f76f8682f3ec32edfb285b26eb559f7b7e8","modified":1697692670313},{"_id":"node_modules/hexo-theme-fluid/source/xml/local-search.xml","hash":"8c96ba6a064705602ce28d096fd7dd9069630a55","modified":1684991903097},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/changyan.ejs","hash":"c9b2d68ed3d375f1953e7007307d2a3f75ed6249","modified":1684991901567},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/disqus.ejs","hash":"aab4a4d24c55231a37db308ae94414319cecdd9b","modified":1684991901569},{"_id":"node_modules/hexo-theme-fluid/source/js/plugins.js","hash":"c34916291e392a774ff3e85c55badb83e8661297","modified":1684991901612},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/giscus.ejs","hash":"95f8b866b158eff9352c381c243b332a155a5110","modified":1684991901570},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/cusdis.ejs","hash":"5f9dc012be27040bbe874d0c093c0d53958cc987","modified":1684991901568},{"_id":"node_modules/hexo-theme-fluid/source/js/utils.js","hash":"b82e7c289a66dfd36064470fd41c0e96fc598b43","modified":1697692670313},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/livere.ejs","hash":"2264758fed57542a7389c7aa9f00f1aefa17eb87","modified":1684991901571},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/remark42.ejs","hash":"d4e9532feeb02aed61bd15eda536b5b631454dac","modified":1684991901579},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/gitalk.ejs","hash":"843bc141a4545eb20d1c92fb63c85d459b4271ec","modified":1684991901570},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/twikoo.ejs","hash":"d84bcb5ccd78470a60c067fc914ac0ac67ac8777","modified":1697692670313},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/utterances.ejs","hash":"c7ccf7f28308334a6da6f5425b141a24b5eca0e2","modified":1684991901583},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/valine.ejs","hash":"19ba937553dddd317f827d682661a1066a7b1f30","modified":1684991901584},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/footer/beian.ejs","hash":"4fb9b5dd3f3e41a586d6af44e5069afe7c81fff2","modified":1684991901562},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/waline.ejs","hash":"12727da7cf3ac83443270f550be4d1c06135b52b","modified":1684991901584},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/footer/statistics.ejs","hash":"454d8dd4c39f9494ebeb03ca0746f5bc122af76a","modified":1684991901580},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/header/banner.ejs","hash":"e07757b59e7b89eea213d0e595cb5932f812fd32","modified":1684991901562},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/analytics.ejs","hash":"4f68c80bd1395e2f6d11e373116e54de11cb62e8","modified":1697692670313},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/anchorjs.ejs","hash":"40181442d3a2b8734783a0ad7caf2d2522e3f2ab","modified":1684991901560},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/header/navigation.ejs","hash":"870db75e4e403a840c4463dfeed2c9114846e7cc","modified":1684991901576},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/code-widget.ejs","hash":"3a505cba37942badf62a56bbb8b605b72af330aa","modified":1684991901567},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/encrypt.ejs","hash":"0fff24cf5bf99fbe5c56c292e2eac4a89bf29db4","modified":1697692670313},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/fancybox.ejs","hash":"9d1ea2a46b8c8ad8c168594d578f40764818ef13","modified":1684991901569},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/highlight.ejs","hash":"7529dd215b09d3557804333942377b9e20fa554e","modified":1684991901571},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/mermaid.ejs","hash":"03ac02762f801970d1c4e73d6ec8d4c503780e50","modified":1697692670313},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/math.ejs","hash":"dcbf9a381ee76f2f1f75fcbc22c50a502ec85023","modified":1684991901572},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/category-bar.ejs","hash":"8772bce97ed297e7a88523f4e939ed6436c22f87","modified":1684991901565},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/typed.ejs","hash":"f345374885cd6a334f09a11f59c443b5d577c06c","modified":1697692670313},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/copyright.ejs","hash":"529f3069742b3d338c769ba2d836e7f3c342a09d","modified":1697692670313},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/nprogress.ejs","hash":"4c2d39ce816b8a6dcd6b53113c8695f8bd650a23","modified":1684991901577},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/meta-top.ejs","hash":"ce6e9f578f4faa45840abddf8f46af3f4b69c177","modified":1684991901573},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/sidebar-left.ejs","hash":"9992c99b3eb728ad195970e1b84d665f2c8691c4","modified":1684991901579},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/sidebar-right.ejs","hash":"d5fcc9b60e02f869a29a8c17a16a6028ecc1e6d8","modified":1684991901580},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/meta-bottom.ejs","hash":"375974ec017696e294dc12469fb0ae257800dc2d","modified":1697692670313},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/footnote.js","hash":"b2f61b91fffb17d11ad56811f07d52d23f012741","modified":1697692670313},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/hello.js","hash":"44c5eb97b98813a07c659d6afedd17fad63b1821","modified":1684991901602},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/compatible-configs.js","hash":"ef474d1fa5bbafc52619ced0f9dc7eaf2affb363","modified":1684991901594},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/highlight.js","hash":"8d3ae1ec6660fbb0e563bc08c2f8deefde1f3bf6","modified":1697692670313},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/lazyload.js","hash":"9ba0d4bc224e22af8a5a48d6ff13e5a0fcfee2a4","modified":1684991901607},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/merge-configs.js","hash":"7c944c43b2ece5dd84859bd9d1fe955d13427387","modified":1684991901611},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/injects.js","hash":"5ae4b07204683e54b5a1b74e931702bbce2ac23e","modified":1684991901606},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/toc.ejs","hash":"635a89060fbf72eeda066fc4bd0a97462f069417","modified":1684991901581},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_about/about.styl","hash":"97fe42516ea531fdad771489b68aa8b2a7f6ae46","modified":1684991902892},{"_id":"node_modules/hexo-theme-fluid/source/css/_mixins/base.styl","hash":"542e306ee9494e8a78e44d6d7d409605d94caeb3","modified":1684991903070},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/pages.styl","hash":"b8e887bc7fb3b765a1f8ec9448eff8603a41984f","modified":1684991903092},{"_id":"node_modules/hexo-theme-fluid/source/css/_functions/base.styl","hash":"2e46f3f4e2c9fe34c1ff1c598738fc7349ae8188","modified":1684991903069},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_archive/archive.styl","hash":"c475e6681546d30350eaed11f23081ecae80c375","modified":1684991903067},{"_id":"node_modules/hexo-theme-fluid/source/css/_variables/base.styl","hash":"4ed5f0ae105ef4c7dd92eaf652ceda176c38e502","modified":1684991903073},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_category/category-bar.styl","hash":"cc6df43fef6bb3efecbfdd8b9e467424a1dea581","modified":1684991903076},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_category/category-chain.styl","hash":"0cdf7ef50dfd0669d3b257821384ff31cd81b7c9","modified":1684991903076},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_category/category-list.styl","hash":"7edfe1b571ecca7d08f5f4dbcf76f4ffdcfbf0b5","modified":1684991903076},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/base.styl","hash":"643284c567665f96915f0b64e59934dda315f74d","modified":1684991903072},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/color-schema.styl","hash":"44990cf0cbf778d38c9beb1d4925021f9da70df4","modified":1697692670313},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/inline.styl","hash":"411a3fa3f924a87e00ff04d18b5c83283b049a4d","modified":1684991903082},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/comment.styl","hash":"780f3788e7357bcd3f3262d781cb91bb53976a93","modified":1684991903079},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/keyframes.styl","hash":"94065ea50f5bef7566d184f2422f6ac20866ba22","modified":1684991903082},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_links/links.styl","hash":"5c7f2044e3f1da05a3229537c06bd879836f8d6e","modified":1684991903084},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/markdown.styl","hash":"1e3d3a82721e7c10bcfcecec6d81cf2979039452","modified":1684991903084},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/highlight.styl","hash":"4df764d298fe556e501db4afc2b05686fe6ebcfb","modified":1684991903080},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/post-tag.styl","hash":"27f70062415ccf66a9b6f4952db124fc1471fda5","modified":1684991903093},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/post-page.styl","hash":"ecf3488566b374d564ae985c61e08562ba908023","modified":1697692670313},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_index/index.styl","hash":"0acbd71633bcc7191672ea4e1b2277bea350d73b","modified":1684991903081},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_tag/tags.styl","hash":"65bfc01c76abc927fa1a23bf2422892b0d566c3f","modified":1684991903095},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/copyright.styl","hash":"26f71a9cd60d96bb0cb5bbdf58150b8e524d9707","modified":1684991903079},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/banner.styl","hash":"7a0bd629bc234fc75e3cc8e3715ffada92f09e73","modified":1684991903067},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/anchorjs.styl","hash":"e0cebda4a6f499aff75e71417d88caa7ceb13b94","modified":1684991902893},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/code-widget.styl","hash":"b66ab013f0f37d724a149b85b3c7432afcf460ad","modified":1684991903077},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/board.styl","hash":"4397037fc3f0033dbe546c33cd9dbdabd8cb1632","modified":1684991903073},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/modal.styl","hash":"adf6c1e5c8e1fb41c77ce6e2258001df61245aa2","modified":1684991903085},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/footer.styl","hash":"2caaca71dd1ff63d583099ed817677dd267b457e","modified":1684991903079},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/header.styl","hash":"c4459248c66ea1326feed021179b847ae91d465f","modified":1684991903079},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/footnote.styl","hash":"ae9289cc89649af2042907f8a003303b987f3404","modified":1684991903079},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/noscript.styl","hash":"0cf2f2bb44f456150d428016675d5876a9d2e2aa","modified":1684991903085},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/pagination.styl","hash":"8bb1b68e5f3552cb48c2ffa31edbc53646a8fb4c","modified":1684991903092},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/ngrogress.styl","hash":"5d225357b4a58d46118e6616377168336ed44cb2","modified":1684991903085},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/qrcode.styl","hash":"78704a94c0436097abfb0e0a57abeb3429c749b7","modified":1684991903093},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/scroll-btn.styl","hash":"f0e429a27fa8a7658fcbddbb4d4dbe4afa12499a","modified":1684991903093},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/search.styl","hash":"10f7e91a91e681fb9fe46f9df7707b9ef78707c8","modified":1684991903094},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/toc.styl","hash":"9e7452aa2372153f25d7a4675c9d36d281a65d24","modified":1684991903095},{"_id":"node_modules/hexo-theme-fluid/source/img/default.png","hash":"167a12978d80371cf578c8a2e45c24a2eb25b6fb","modified":1684991902890},{"_id":"source/img/bg/tag.jpg","hash":"515e5b47f13a2ee538f9f9dae1546a5fa68a6497","modified":1684991531100},{"_id":"source/img/bg/morning.jpg","hash":"3de3a977b7f29a4d6fb900e2aba98bc2cb552ea8","modified":1684991531082},{"_id":"source/img/bg/dusk.jpg","hash":"e1553b853f676aca287f047c341a6dbcfc72c735","modified":1684991531070},{"_id":"public/local-search.xml","hash":"ee76fc1b279948736a9f513697b23686115c2f5d","modified":1684992990809},{"_id":"public/about/index.html","hash":"7408a98e5d388c55fe23b98fa1caf011f40fa758","modified":1684992990809},{"_id":"public/categories/写作标准/index.html","hash":"4b32255650555025ba60dac13049edc6b451bea6","modified":1684992990809},{"_id":"public/archives/index.html","hash":"f135960c587362b05a52768cf8415c50f6e0ac23","modified":1684992990809},{"_id":"public/archives/2023/index.html","hash":"814e1715c214b6afa75f384aa2ad0102c003f7b3","modified":1684992990809},{"_id":"public/archives/2023/02/index.html","hash":"85bf609c99fcf5117b77a2dc8baf61cf867b8f6f","modified":1684992990809},{"_id":"public/tags/写作/index.html","hash":"9928ceee4a27ae6b847d80c19bccff54a04c7340","modified":1684992990809},{"_id":"public/tags/标点符号/index.html","hash":"1316f873a0e3cd39b96d7734e9ce3c6dc3945927","modified":1684992990809},{"_id":"public/tags/规范/index.html","hash":"31f8888083db6646a801c195f7eafe8111a84751","modified":1684992990809},{"_id":"public/tags/数值/index.html","hash":"7894e60db5e4b0409efd9e77b8f19df0254e6590","modified":1684992990809},{"_id":"public/tags/参考链接/index.html","hash":"a89cd86f2c0ffa577138c13ae11c7af72c4f1f79","modified":1684992990809},{"_id":"public/tags/段落/index.html","hash":"6634d490ed8a8db05e8cb77436d6062e5decdd0e","modified":1684992990809},{"_id":"public/tags/文档/index.html","hash":"281b87b23abfabea9d8ab14ee4882048f1a0e06a","modified":1684992990809},{"_id":"public/tags/文本/index.html","hash":"2b2d62c373c2c4ab41291294e224987ecbdca22c","modified":1684992990809},{"_id":"public/tags/标题/index.html","hash":"6353a044c482ba9de19078e0a1c174a0d3ae755c","modified":1684992990809},{"_id":"public/404.html","hash":"ae6d698403bbcc1b84a737a21f03bc5b36d9d784","modified":1684992990809},{"_id":"public/tags/index.html","hash":"868b01073ca015366fcdee70fe42041ac7b2f72c","modified":1684992990809},{"_id":"public/categories/index.html","hash":"82c14c64db9c0f4bad0a41c5c47951c318f33703","modified":1684992990809},{"_id":"public/links/index.html","hash":"e23dd6a4db159d786be8b6660c22d07bbe7a068a","modified":1684992990809},{"_id":"public/2023/02/23/writing-standard/marks/index.html","hash":"2fd6dbbb090f04f444f90982889520300b82c40a","modified":1684992990809},{"_id":"public/2023/02/23/writing-standard/structure/index.html","hash":"98a74280411101063600064cd77feb1eb8e55224","modified":1684992990809},{"_id":"public/2023/02/23/writing-standard/reference/index.html","hash":"6eaf1d543b3c488528185c6b57bab2f150eb843d","modified":1684992990809},{"_id":"public/2023/02/23/writing-standard/number/index.html","hash":"c6b9de395e78747b255994d0ec125d0504aec4c2","modified":1684992990809},{"_id":"public/2023/02/23/writing-standard/text/index.html","hash":"ada627dfd8e59972097eaba9b86aae0d8a9cf0d0","modified":1684992990809},{"_id":"public/2023/02/23/writing-standard/paragraph/index.html","hash":"0a8a169771fff808af43f601dc864e8990294cf3","modified":1684992990809},{"_id":"public/2023/02/23/writing-standard/title/index.html","hash":"9ab2b2e01af1ffe9ad8f97058499e02c7ff69048","modified":1684992990809},{"_id":"public/index.html","hash":"d0a2db474b332ea07d72fbf89c8f03bac48afb0d","modified":1684992990809},{"_id":"public/img/avatar.png","hash":"fe739a158cc128f70f780eb5fa96f388b81d478f","modified":1684992990809},{"_id":"public/img/police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":1684992990809},{"_id":"public/img/fluid.png","hash":"64b215db2cb3af98fe639e94537cb5209f959c78","modified":1684992990809},{"_id":"public/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":1684992990809},{"_id":"public/img/abount.png","hash":"f43ea32aa494f2bf98b8c9bb61e1e37a555d643e","modified":1684992990809},{"_id":"public/xml/local-search.xml","hash":"8c96ba6a064705602ce28d096fd7dd9069630a55","modified":1684992990809},{"_id":"public/img/favicon.png","hash":"0946928a8c91635d57dc38a5906f419ea4b34e6e","modified":1684992990809},{"_id":"public/img/fluid_hexo.png","hash":"054ecd8187743517ff5105abee9c3827d1415759","modified":1684992990809},{"_id":"public/img/logo.svg","hash":"82d1d17897cb2bfeec12244a8e300aef4042e7dd","modified":1684992990809},{"_id":"public/img/logo.png","hash":"8edc532b4d0d4e5b9be45bbd8ff5a718f5da8952","modified":1684992990809},{"_id":"public/img/favicon.ico","hash":"9ef43518691b46a5b17fcd00fd238ce25bf42179","modified":1684992990809},{"_id":"public/img/touxiang.jpeg","hash":"3129a65b314d97fbb8a65f42163e40c6dc072598","modified":1684992990809},{"_id":"public/css/highlight-dark.css","hash":"1d79539d204f0cfcc5dd50368d1e5c1feeda1b71","modified":1684992990809},{"_id":"public/css/highlight.css","hash":"e19bc7c245e78c471e647e61c55100ba906e8f7b","modified":1684992990809},{"_id":"public/js/color-schema.js","hash":"76a198f8721352ebeaf5b2ef2f4db00612da4796","modified":1684992990809},{"_id":"public/js/events.js","hash":"89e3561488a618ed0caeb9edf18e441978e29c25","modified":1684992990809},{"_id":"public/js/boot.js","hash":"38bd26c6b7acdafda86dda3560e6a3ca488d3c76","modified":1684992990809},{"_id":"public/js/leancloud.js","hash":"eff77c7a5c399fcaefda48884980571e15243fc9","modified":1684992990809},{"_id":"public/js/img-lazyload.js","hash":"cbdeca434ec4da51f488c821d51b4d23c73294af","modified":1684992990809},{"_id":"public/js/local-search.js","hash":"cebcda5991b6a9ab9307c69542389ce9013f04f7","modified":1684992990809},{"_id":"public/js/utils.js","hash":"45cc86f099db0a2c36ad49711ce66c2d598a2ab1","modified":1684992990809},{"_id":"public/js/plugins.js","hash":"c34916291e392a774ff3e85c55badb83e8661297","modified":1684992990809},{"_id":"public/css/gitalk.css","hash":"a57b3cc8e04a0a4a27aefa07facf5b5e7bca0e76","modified":1684992990809},{"_id":"public/css/main.css","hash":"b58d457d47433a403aa0a146509536bef3b61e98","modified":1684992990809},{"_id":"public/img/wechat.jpeg","hash":"0c8e89bd228ed74381a843d3b7fd27f0685d111d","modified":1684992990809},{"_id":"public/img/default.png","hash":"167a12978d80371cf578c8a2e45c24a2eb25b6fb","modified":1684992990809},{"_id":"public/img/bg/summer.jpg","hash":"c4d967b04da594f6b3c1e66c8f144e148bc38127","modified":1684992990809},{"_id":"public/img/bg/tag.jpg","hash":"515e5b47f13a2ee538f9f9dae1546a5fa68a6497","modified":1684992990809},{"_id":"public/img/bg/morning.jpg","hash":"3de3a977b7f29a4d6fb900e2aba98bc2cb552ea8","modified":1684992990809},{"_id":"public/img/bg/dusk.jpg","hash":"e1553b853f676aca287f047c341a6dbcfc72c735","modified":1684992990809},{"_id":"node_modules/hexo-theme-fluid/layout/.DS_Store","hash":"e2295dbe42d85b294e6f3aeefaf3623bd31759ed","modified":1697692670313},{"_id":"node_modules/hexo-theme-fluid/source/.DS_Store","hash":"e11e97632e6d13d5b9dccadcc514268f3c039508","modified":1697692670313},{"_id":"node_modules/hexo-theme-fluid/scripts/.DS_Store","hash":"daec53fd4601c37ca272321ba2eb594d9b0a43ac","modified":1697692670313},{"_id":"node_modules/hexo-theme-fluid/scripts/generators/index-generator.js","hash":"9159fc22fa84a7b605dd15fe4104f01fe9c71147","modified":1697692670313},{"_id":"node_modules/hexo-theme-fluid/scripts/events/.DS_Store","hash":"80308812974d7cb7e001cd8f64ff9fced30ff139","modified":1697692670313},{"_id":"node_modules/hexo-theme-fluid/source/img/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1697692670313},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1697692670313},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/discuss.ejs","hash":"98d065b58ce06b7d18bff3c974e96fa0f34ae03a","modified":1697692670313},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/print.styl","hash":"166afbc596ea4b552bad7290ec372d25ec34db7b","modified":1697692670313},{"_id":"source/_posts/gopl/start.md","hash":"b54c8466ac53ccdf52ad5abc37aea3a79ba31841","modified":1697695428813},{"_id":"source/_posts/gopl/chapter01.md","hash":"b83ae3b7b8becf89256e740c5e2c8981522c7c9f","modified":1697727458482},{"_id":"source/_posts/notes/effective_read.md","hash":"d3a69729320ee0f3809450ef37c4b94a44f5e68b","modified":1697765638181}],"Category":[{"name":"写作标准","_id":"cli2pbl1n00011sn14mdq3g4y"},{"name":"Go 语言圣经","_id":"clnxapgrx0001j8va1456fvft"},{"name":"读书笔记","_id":"clnxxtxts00019bvaf17v5vcp"}],"Data":[],"Page":[{"title":"关于我","layout":"about","date":"2023-02-23T01:48:40.000Z","_content":"\n\n\n```Go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    fmt.Println(\"韩卓贤……\")\n}\n```\n","source":"about/index.md","raw":"---\ntitle: 关于我\nlayout: about\ndate: 2023-02-23 09:48:40\n---\n\n\n\n```Go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    fmt.Println(\"韩卓贤……\")\n}\n```\n","updated":"2023-10-19T05:40:05.787Z","path":"about/index.html","_id":"cli2pbl1s00091sn18ju2gwme","comments":1,"content":"<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Go\"><span class=\"hljs-keyword\">package</span> main<br><br><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&quot;fmt&quot;</span><br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span></span> &#123;<br>    fmt.Println(<span class=\"hljs-string\">&quot;韩卓贤……&quot;</span>)<br>&#125;<br></code></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Go\"><span class=\"hljs-keyword\">package</span> main<br><br><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&quot;fmt&quot;</span><br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span></span> &#123;<br>    fmt.Println(<span class=\"hljs-string\">&quot;韩卓贤……&quot;</span>)<br>&#125;<br></code></pre></td></tr></table></figure>\n"}],"Post":[{"title":"标点符号规范","date":"2023-02-23T14:12:32.000Z","_content":"\n## 原则\n\n（1）中文语句的标点符号，均应该采取全角符号，这样可以与全角文字保持视觉的一致。\n\n（2）如果整句为英文，则该句使用英文/半角标点。\n\n（3）句号、问号、叹号、逗号、顿号、分号和冒号不得出现在一行之首。\n\n（4）点号（句号、逗号、顿号、分号、冒号）不得出现在标题的末尾，而标号（引号、括号、破折号、省略号、书名号、着重号、间隔号、叹号、问号）可以。\n\n## 句号\n\n（1）中文语句的结尾处应该用全角句号（`。`）。\n\n（2）句子末尾用括号加注时，句号应在括号之外。\n\n```Plain Text\n错误：关于文件的输出，请参照第 1.3 节（见第 26 页。）\n\n正确：关于文件的输出，请参照第 1.3 节（见第 26 页）。\n```\n\n## 逗号\n\n（1）逗号（`，`）表示句子内部的一般性停顿。\n\n（2）注意避免“一逗到底”，即整个段落除了结尾，全部停顿都使用逗号。\n\n## 顿号\n\n（1）句子内部的并列词，应该用全角顿号(`、`) 分隔，而不用逗号，即使并列词是英语也是如此。\n\n```Plain Text\n错误：我最欣赏的科技公司有 Google, Facebook, 腾讯, 阿里和百度等。\n\n正确：我最欣赏的科技公司有 Google、Facebook、腾讯、阿里和百度等。\n```\n\n（2）英文句子中，并列词语之间使用半角逗号（`,`）分隔。\n\n```Plain Text\n例句：Microsoft Office includes Word, Excel, PowerPoint, Outlook and other components.\n```\n\n（3）中文句子内部的并列词，最后一个尽量使用（`和`）来连接，使句子读起来更加连贯，下面两个句子都可以，第二个更优。\n\n```Plain Text\n正确：我最欣赏的科技公司有 Google、Facebook、腾讯、阿里，以及百度等。\n\n正确：我最欣赏的科技公司有 Google、Facebook、腾讯、阿里和百度等。\n```\n\n## 分号\n\n（1）分号（`；`）表示复句内部并列分句之间的停顿。\n\n## 引号\n\n（1）引用时，应该使用全角双引号（`“ ”`），注意前后双引号不同。\n\n```Plain Text\n例句：许多人都认为客户服务的核心是“友好”和“专业”。\n```\n\n（2）引号里面还要用引号时，外面一层用双引号，里面一层用单引号（`‘ ’`），注意前后单引号不同。\n\n```Plain Text\n例句：鲍勃解释道：“我要放音乐，可萨利说，‘不行！’。”\n```\n\n## 括号\n\n（1）补充说明时，使用全角圆括号（`（）`），括号前后不加空格。\n\n```Plain Text\n例句：请确认所有的连接（电缆和接插件）均安装牢固。\n```\n\n（2）几种括号的中英文名称。\n\n|       |            英文             |  中文  |\n| ----- | :-------------------------: | :----: |\n| `{ }` |  braces 或 curly brackets   | 大括号 |\n| `[ ]` | square brackets 或 brackets | 方括号 |\n| `< >` |       angled brackets       | 尖括号 |\n| `( )` |         parentheses         | 圆括号 |\n\n## 冒号\n\n（1）全角冒号（`：`）常用在需要解释的词语后边，引出解释和说明。\n\n```Plain Text\n例句：请确认以下几项内容：时间、地点、活动名称和来宾数量。\n```\n\n（2）表示时间时，应使用半角冒号（`:`）。\n\n```Plain Text\n例句：早上 8:00\n```\n\n## 省略号\n\n（1）省略号（`⋯⋯`）表示语句未完、或者语气的不连续。\n\n（2）省略号占两个汉字空间、包含六个省略点，不要使用`。。。`或`...`等非标准形式。\n\n（3）省略号不应与“等”这个词一起使用。\n\n```Plain Text\n错误：我们为会餐准备了香蕉、苹果、梨…等各色水果。\n\n正确：我们为会餐准备了各色水果，有香蕉、苹果、梨⋯⋯\n\n正确：我们为会餐准备了香蕉、苹果、梨等各色水果。\n```\n\n## 感叹号\n\n（1）应该使用平静的语气叙述，尽量避免使用感叹号（`！`）。\n\n（2）不得多个感叹号连用，比如`！！`和`!!!`。\n\n## 破折号\n\n（1）破折号`————`一般用于进一步解释。\n\n（2）破折号应占两个汉字的位置。如果破折号本身只占一个汉字的位置，那么前后应该留出一个半角空格。\n\n```Plain Text\n例句：直觉————尽管它并不总是可靠的————告诉我，这事可能出了些问题。\n\n例句：直觉 —— 尽管它并不总是可靠的 —— 告诉我，这事可能出了些问题。\n```\n\n## 连接号\n\n（1）连接号用于连接两个类似的词。\n\n（2）以下场合应该使用直线连接号（`-`），占一个半角字符的位置。\n\n- 两个名词的复合\n- 图表编号\n\n```Plain Text\n例句：氧化-还原反应\n\n例句：图 1-1\n```\n\n（3）数值范围（例如日期、时间或数字）应该使用波浪连接号（`～`）或一字号（`—`），占一个全角字符的位置。\n\n```Plain Text\n例句：2009 年～2011 年\n```\n\n注意，波浪连接号前后两个值都建议加上单位。\n\n（4）波浪连接号也可以用汉字“至”代替。\n\n```Plain Text\n例句：周围温度：-20 °C 至 -10 °C\n```\n\n## 参考链接\n\n- [中文技术文档的写作规范](https://github.com/ruanyf/document-style-guide)，by 阮一峰\n","source":"_posts/writing-standard/marks.md","raw":"---\ntitle: 标点符号规范\ndate: 2023-02-23 22:12:32\ncategories:\n- 写作标准\ntags:\n- 写作\n- 标点符号\n- 规范\n---\n\n## 原则\n\n（1）中文语句的标点符号，均应该采取全角符号，这样可以与全角文字保持视觉的一致。\n\n（2）如果整句为英文，则该句使用英文/半角标点。\n\n（3）句号、问号、叹号、逗号、顿号、分号和冒号不得出现在一行之首。\n\n（4）点号（句号、逗号、顿号、分号、冒号）不得出现在标题的末尾，而标号（引号、括号、破折号、省略号、书名号、着重号、间隔号、叹号、问号）可以。\n\n## 句号\n\n（1）中文语句的结尾处应该用全角句号（`。`）。\n\n（2）句子末尾用括号加注时，句号应在括号之外。\n\n```Plain Text\n错误：关于文件的输出，请参照第 1.3 节（见第 26 页。）\n\n正确：关于文件的输出，请参照第 1.3 节（见第 26 页）。\n```\n\n## 逗号\n\n（1）逗号（`，`）表示句子内部的一般性停顿。\n\n（2）注意避免“一逗到底”，即整个段落除了结尾，全部停顿都使用逗号。\n\n## 顿号\n\n（1）句子内部的并列词，应该用全角顿号(`、`) 分隔，而不用逗号，即使并列词是英语也是如此。\n\n```Plain Text\n错误：我最欣赏的科技公司有 Google, Facebook, 腾讯, 阿里和百度等。\n\n正确：我最欣赏的科技公司有 Google、Facebook、腾讯、阿里和百度等。\n```\n\n（2）英文句子中，并列词语之间使用半角逗号（`,`）分隔。\n\n```Plain Text\n例句：Microsoft Office includes Word, Excel, PowerPoint, Outlook and other components.\n```\n\n（3）中文句子内部的并列词，最后一个尽量使用（`和`）来连接，使句子读起来更加连贯，下面两个句子都可以，第二个更优。\n\n```Plain Text\n正确：我最欣赏的科技公司有 Google、Facebook、腾讯、阿里，以及百度等。\n\n正确：我最欣赏的科技公司有 Google、Facebook、腾讯、阿里和百度等。\n```\n\n## 分号\n\n（1）分号（`；`）表示复句内部并列分句之间的停顿。\n\n## 引号\n\n（1）引用时，应该使用全角双引号（`“ ”`），注意前后双引号不同。\n\n```Plain Text\n例句：许多人都认为客户服务的核心是“友好”和“专业”。\n```\n\n（2）引号里面还要用引号时，外面一层用双引号，里面一层用单引号（`‘ ’`），注意前后单引号不同。\n\n```Plain Text\n例句：鲍勃解释道：“我要放音乐，可萨利说，‘不行！’。”\n```\n\n## 括号\n\n（1）补充说明时，使用全角圆括号（`（）`），括号前后不加空格。\n\n```Plain Text\n例句：请确认所有的连接（电缆和接插件）均安装牢固。\n```\n\n（2）几种括号的中英文名称。\n\n|       |            英文             |  中文  |\n| ----- | :-------------------------: | :----: |\n| `{ }` |  braces 或 curly brackets   | 大括号 |\n| `[ ]` | square brackets 或 brackets | 方括号 |\n| `< >` |       angled brackets       | 尖括号 |\n| `( )` |         parentheses         | 圆括号 |\n\n## 冒号\n\n（1）全角冒号（`：`）常用在需要解释的词语后边，引出解释和说明。\n\n```Plain Text\n例句：请确认以下几项内容：时间、地点、活动名称和来宾数量。\n```\n\n（2）表示时间时，应使用半角冒号（`:`）。\n\n```Plain Text\n例句：早上 8:00\n```\n\n## 省略号\n\n（1）省略号（`⋯⋯`）表示语句未完、或者语气的不连续。\n\n（2）省略号占两个汉字空间、包含六个省略点，不要使用`。。。`或`...`等非标准形式。\n\n（3）省略号不应与“等”这个词一起使用。\n\n```Plain Text\n错误：我们为会餐准备了香蕉、苹果、梨…等各色水果。\n\n正确：我们为会餐准备了各色水果，有香蕉、苹果、梨⋯⋯\n\n正确：我们为会餐准备了香蕉、苹果、梨等各色水果。\n```\n\n## 感叹号\n\n（1）应该使用平静的语气叙述，尽量避免使用感叹号（`！`）。\n\n（2）不得多个感叹号连用，比如`！！`和`!!!`。\n\n## 破折号\n\n（1）破折号`————`一般用于进一步解释。\n\n（2）破折号应占两个汉字的位置。如果破折号本身只占一个汉字的位置，那么前后应该留出一个半角空格。\n\n```Plain Text\n例句：直觉————尽管它并不总是可靠的————告诉我，这事可能出了些问题。\n\n例句：直觉 —— 尽管它并不总是可靠的 —— 告诉我，这事可能出了些问题。\n```\n\n## 连接号\n\n（1）连接号用于连接两个类似的词。\n\n（2）以下场合应该使用直线连接号（`-`），占一个半角字符的位置。\n\n- 两个名词的复合\n- 图表编号\n\n```Plain Text\n例句：氧化-还原反应\n\n例句：图 1-1\n```\n\n（3）数值范围（例如日期、时间或数字）应该使用波浪连接号（`～`）或一字号（`—`），占一个全角字符的位置。\n\n```Plain Text\n例句：2009 年～2011 年\n```\n\n注意，波浪连接号前后两个值都建议加上单位。\n\n（4）波浪连接号也可以用汉字“至”代替。\n\n```Plain Text\n例句：周围温度：-20 °C 至 -10 °C\n```\n\n## 参考链接\n\n- [中文技术文档的写作规范](https://github.com/ruanyf/document-style-guide)，by 阮一峰\n","slug":"writing-standard/marks","published":1,"updated":"2023-10-19T05:16:18.971Z","_id":"cli2pbl1h00001sn17u7xflj4","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"原则\"><a href=\"#原则\" class=\"headerlink\" title=\"原则\"></a>原则</h2><p>（1）中文语句的标点符号，均应该采取全角符号，这样可以与全角文字保持视觉的一致。</p>\n<p>（2）如果整句为英文，则该句使用英文&#x2F;半角标点。</p>\n<p>（3）句号、问号、叹号、逗号、顿号、分号和冒号不得出现在一行之首。</p>\n<p>（4）点号（句号、逗号、顿号、分号、冒号）不得出现在标题的末尾，而标号（引号、括号、破折号、省略号、书名号、着重号、间隔号、叹号、问号）可以。</p>\n<h2 id=\"句号\"><a href=\"#句号\" class=\"headerlink\" title=\"句号\"></a>句号</h2><p>（1）中文语句的结尾处应该用全角句号（<code>。</code>）。</p>\n<p>（2）句子末尾用括号加注时，句号应在括号之外。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">错误：关于文件的输出，请参照第 1.3 节（见第 26 页。）<br><br>正确：关于文件的输出，请参照第 1.3 节（见第 26 页）。<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"逗号\"><a href=\"#逗号\" class=\"headerlink\" title=\"逗号\"></a>逗号</h2><p>（1）逗号（<code>，</code>）表示句子内部的一般性停顿。</p>\n<p>（2）注意避免“一逗到底”，即整个段落除了结尾，全部停顿都使用逗号。</p>\n<h2 id=\"顿号\"><a href=\"#顿号\" class=\"headerlink\" title=\"顿号\"></a>顿号</h2><p>（1）句子内部的并列词，应该用全角顿号(<code>、</code>) 分隔，而不用逗号，即使并列词是英语也是如此。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">错误：我最欣赏的科技公司有 Google, Facebook, 腾讯, 阿里和百度等。<br><br>正确：我最欣赏的科技公司有 Google、Facebook、腾讯、阿里和百度等。<br></code></pre></td></tr></table></figure>\n\n<p>（2）英文句子中，并列词语之间使用半角逗号（<code>,</code>）分隔。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">例句：Microsoft Office includes Word, Excel, PowerPoint, Outlook and other components.<br></code></pre></td></tr></table></figure>\n\n<p>（3）中文句子内部的并列词，最后一个尽量使用（<code>和</code>）来连接，使句子读起来更加连贯，下面两个句子都可以，第二个更优。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">正确：我最欣赏的科技公司有 Google、Facebook、腾讯、阿里，以及百度等。<br><br>正确：我最欣赏的科技公司有 Google、Facebook、腾讯、阿里和百度等。<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"分号\"><a href=\"#分号\" class=\"headerlink\" title=\"分号\"></a>分号</h2><p>（1）分号（<code>；</code>）表示复句内部并列分句之间的停顿。</p>\n<h2 id=\"引号\"><a href=\"#引号\" class=\"headerlink\" title=\"引号\"></a>引号</h2><p>（1）引用时，应该使用全角双引号（<code>“ ”</code>），注意前后双引号不同。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">例句：许多人都认为客户服务的核心是“友好”和“专业”。<br></code></pre></td></tr></table></figure>\n\n<p>（2）引号里面还要用引号时，外面一层用双引号，里面一层用单引号（<code>‘ ’</code>），注意前后单引号不同。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">例句：鲍勃解释道：“我要放音乐，可萨利说，‘不行！’。”<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"括号\"><a href=\"#括号\" class=\"headerlink\" title=\"括号\"></a>括号</h2><p>（1）补充说明时，使用全角圆括号（<code>（）</code>），括号前后不加空格。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">例句：请确认所有的连接（电缆和接插件）均安装牢固。<br></code></pre></td></tr></table></figure>\n\n<p>（2）几种括号的中英文名称。</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th align=\"center\">英文</th>\n<th align=\"center\">中文</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>&#123; &#125;</code></td>\n<td align=\"center\">braces 或 curly brackets</td>\n<td align=\"center\">大括号</td>\n</tr>\n<tr>\n<td><code>[ ]</code></td>\n<td align=\"center\">square brackets 或 brackets</td>\n<td align=\"center\">方括号</td>\n</tr>\n<tr>\n<td><code>&lt; &gt;</code></td>\n<td align=\"center\">angled brackets</td>\n<td align=\"center\">尖括号</td>\n</tr>\n<tr>\n<td><code>( )</code></td>\n<td align=\"center\">parentheses</td>\n<td align=\"center\">圆括号</td>\n</tr>\n</tbody></table>\n<h2 id=\"冒号\"><a href=\"#冒号\" class=\"headerlink\" title=\"冒号\"></a>冒号</h2><p>（1）全角冒号（<code>：</code>）常用在需要解释的词语后边，引出解释和说明。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">例句：请确认以下几项内容：时间、地点、活动名称和来宾数量。<br></code></pre></td></tr></table></figure>\n\n<p>（2）表示时间时，应使用半角冒号（<code>:</code>）。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">例句：早上 8:00<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"省略号\"><a href=\"#省略号\" class=\"headerlink\" title=\"省略号\"></a>省略号</h2><p>（1）省略号（<code>⋯⋯</code>）表示语句未完、或者语气的不连续。</p>\n<p>（2）省略号占两个汉字空间、包含六个省略点，不要使用<code>。。。</code>或<code>...</code>等非标准形式。</p>\n<p>（3）省略号不应与“等”这个词一起使用。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">错误：我们为会餐准备了香蕉、苹果、梨…等各色水果。<br><br>正确：我们为会餐准备了各色水果，有香蕉、苹果、梨⋯⋯<br><br>正确：我们为会餐准备了香蕉、苹果、梨等各色水果。<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"感叹号\"><a href=\"#感叹号\" class=\"headerlink\" title=\"感叹号\"></a>感叹号</h2><p>（1）应该使用平静的语气叙述，尽量避免使用感叹号（<code>！</code>）。</p>\n<p>（2）不得多个感叹号连用，比如<code>！！</code>和<code>!!!</code>。</p>\n<h2 id=\"破折号\"><a href=\"#破折号\" class=\"headerlink\" title=\"破折号\"></a>破折号</h2><p>（1）破折号<code>————</code>一般用于进一步解释。</p>\n<p>（2）破折号应占两个汉字的位置。如果破折号本身只占一个汉字的位置，那么前后应该留出一个半角空格。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">例句：直觉————尽管它并不总是可靠的————告诉我，这事可能出了些问题。<br><br>例句：直觉 —— 尽管它并不总是可靠的 —— 告诉我，这事可能出了些问题。<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"连接号\"><a href=\"#连接号\" class=\"headerlink\" title=\"连接号\"></a>连接号</h2><p>（1）连接号用于连接两个类似的词。</p>\n<p>（2）以下场合应该使用直线连接号（<code>-</code>），占一个半角字符的位置。</p>\n<ul>\n<li>两个名词的复合</li>\n<li>图表编号</li>\n</ul>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">例句：氧化-还原反应<br><br>例句：图 1-1<br></code></pre></td></tr></table></figure>\n\n<p>（3）数值范围（例如日期、时间或数字）应该使用波浪连接号（<code>～</code>）或一字号（<code>—</code>），占一个全角字符的位置。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">例句：2009 年～2011 年<br></code></pre></td></tr></table></figure>\n\n<p>注意，波浪连接号前后两个值都建议加上单位。</p>\n<p>（4）波浪连接号也可以用汉字“至”代替。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">例句：周围温度：-20 °C 至 -10 °C<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><ul>\n<li><a href=\"https://github.com/ruanyf/document-style-guide\">中文技术文档的写作规范</a>，by 阮一峰</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"原则\"><a href=\"#原则\" class=\"headerlink\" title=\"原则\"></a>原则</h2><p>（1）中文语句的标点符号，均应该采取全角符号，这样可以与全角文字保持视觉的一致。</p>\n<p>（2）如果整句为英文，则该句使用英文&#x2F;半角标点。</p>\n<p>（3）句号、问号、叹号、逗号、顿号、分号和冒号不得出现在一行之首。</p>\n<p>（4）点号（句号、逗号、顿号、分号、冒号）不得出现在标题的末尾，而标号（引号、括号、破折号、省略号、书名号、着重号、间隔号、叹号、问号）可以。</p>\n<h2 id=\"句号\"><a href=\"#句号\" class=\"headerlink\" title=\"句号\"></a>句号</h2><p>（1）中文语句的结尾处应该用全角句号（<code>。</code>）。</p>\n<p>（2）句子末尾用括号加注时，句号应在括号之外。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">错误：关于文件的输出，请参照第 1.3 节（见第 26 页。）<br><br>正确：关于文件的输出，请参照第 1.3 节（见第 26 页）。<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"逗号\"><a href=\"#逗号\" class=\"headerlink\" title=\"逗号\"></a>逗号</h2><p>（1）逗号（<code>，</code>）表示句子内部的一般性停顿。</p>\n<p>（2）注意避免“一逗到底”，即整个段落除了结尾，全部停顿都使用逗号。</p>\n<h2 id=\"顿号\"><a href=\"#顿号\" class=\"headerlink\" title=\"顿号\"></a>顿号</h2><p>（1）句子内部的并列词，应该用全角顿号(<code>、</code>) 分隔，而不用逗号，即使并列词是英语也是如此。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">错误：我最欣赏的科技公司有 Google, Facebook, 腾讯, 阿里和百度等。<br><br>正确：我最欣赏的科技公司有 Google、Facebook、腾讯、阿里和百度等。<br></code></pre></td></tr></table></figure>\n\n<p>（2）英文句子中，并列词语之间使用半角逗号（<code>,</code>）分隔。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">例句：Microsoft Office includes Word, Excel, PowerPoint, Outlook and other components.<br></code></pre></td></tr></table></figure>\n\n<p>（3）中文句子内部的并列词，最后一个尽量使用（<code>和</code>）来连接，使句子读起来更加连贯，下面两个句子都可以，第二个更优。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">正确：我最欣赏的科技公司有 Google、Facebook、腾讯、阿里，以及百度等。<br><br>正确：我最欣赏的科技公司有 Google、Facebook、腾讯、阿里和百度等。<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"分号\"><a href=\"#分号\" class=\"headerlink\" title=\"分号\"></a>分号</h2><p>（1）分号（<code>；</code>）表示复句内部并列分句之间的停顿。</p>\n<h2 id=\"引号\"><a href=\"#引号\" class=\"headerlink\" title=\"引号\"></a>引号</h2><p>（1）引用时，应该使用全角双引号（<code>“ ”</code>），注意前后双引号不同。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">例句：许多人都认为客户服务的核心是“友好”和“专业”。<br></code></pre></td></tr></table></figure>\n\n<p>（2）引号里面还要用引号时，外面一层用双引号，里面一层用单引号（<code>‘ ’</code>），注意前后单引号不同。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">例句：鲍勃解释道：“我要放音乐，可萨利说，‘不行！’。”<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"括号\"><a href=\"#括号\" class=\"headerlink\" title=\"括号\"></a>括号</h2><p>（1）补充说明时，使用全角圆括号（<code>（）</code>），括号前后不加空格。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">例句：请确认所有的连接（电缆和接插件）均安装牢固。<br></code></pre></td></tr></table></figure>\n\n<p>（2）几种括号的中英文名称。</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th align=\"center\">英文</th>\n<th align=\"center\">中文</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>&#123; &#125;</code></td>\n<td align=\"center\">braces 或 curly brackets</td>\n<td align=\"center\">大括号</td>\n</tr>\n<tr>\n<td><code>[ ]</code></td>\n<td align=\"center\">square brackets 或 brackets</td>\n<td align=\"center\">方括号</td>\n</tr>\n<tr>\n<td><code>&lt; &gt;</code></td>\n<td align=\"center\">angled brackets</td>\n<td align=\"center\">尖括号</td>\n</tr>\n<tr>\n<td><code>( )</code></td>\n<td align=\"center\">parentheses</td>\n<td align=\"center\">圆括号</td>\n</tr>\n</tbody></table>\n<h2 id=\"冒号\"><a href=\"#冒号\" class=\"headerlink\" title=\"冒号\"></a>冒号</h2><p>（1）全角冒号（<code>：</code>）常用在需要解释的词语后边，引出解释和说明。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">例句：请确认以下几项内容：时间、地点、活动名称和来宾数量。<br></code></pre></td></tr></table></figure>\n\n<p>（2）表示时间时，应使用半角冒号（<code>:</code>）。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">例句：早上 8:00<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"省略号\"><a href=\"#省略号\" class=\"headerlink\" title=\"省略号\"></a>省略号</h2><p>（1）省略号（<code>⋯⋯</code>）表示语句未完、或者语气的不连续。</p>\n<p>（2）省略号占两个汉字空间、包含六个省略点，不要使用<code>。。。</code>或<code>...</code>等非标准形式。</p>\n<p>（3）省略号不应与“等”这个词一起使用。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">错误：我们为会餐准备了香蕉、苹果、梨…等各色水果。<br><br>正确：我们为会餐准备了各色水果，有香蕉、苹果、梨⋯⋯<br><br>正确：我们为会餐准备了香蕉、苹果、梨等各色水果。<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"感叹号\"><a href=\"#感叹号\" class=\"headerlink\" title=\"感叹号\"></a>感叹号</h2><p>（1）应该使用平静的语气叙述，尽量避免使用感叹号（<code>！</code>）。</p>\n<p>（2）不得多个感叹号连用，比如<code>！！</code>和<code>!!!</code>。</p>\n<h2 id=\"破折号\"><a href=\"#破折号\" class=\"headerlink\" title=\"破折号\"></a>破折号</h2><p>（1）破折号<code>————</code>一般用于进一步解释。</p>\n<p>（2）破折号应占两个汉字的位置。如果破折号本身只占一个汉字的位置，那么前后应该留出一个半角空格。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">例句：直觉————尽管它并不总是可靠的————告诉我，这事可能出了些问题。<br><br>例句：直觉 —— 尽管它并不总是可靠的 —— 告诉我，这事可能出了些问题。<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"连接号\"><a href=\"#连接号\" class=\"headerlink\" title=\"连接号\"></a>连接号</h2><p>（1）连接号用于连接两个类似的词。</p>\n<p>（2）以下场合应该使用直线连接号（<code>-</code>），占一个半角字符的位置。</p>\n<ul>\n<li>两个名词的复合</li>\n<li>图表编号</li>\n</ul>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">例句：氧化-还原反应<br><br>例句：图 1-1<br></code></pre></td></tr></table></figure>\n\n<p>（3）数值范围（例如日期、时间或数字）应该使用波浪连接号（<code>～</code>）或一字号（<code>—</code>），占一个全角字符的位置。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">例句：2009 年～2011 年<br></code></pre></td></tr></table></figure>\n\n<p>注意，波浪连接号前后两个值都建议加上单位。</p>\n<p>（4）波浪连接号也可以用汉字“至”代替。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">例句：周围温度：-20 °C 至 -10 °C<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><ul>\n<li><a href=\"https://github.com/ruanyf/document-style-guide\">中文技术文档的写作规范</a>，by 阮一峰</li>\n</ul>\n"},{"title":"数值规范","date":"2023-02-23T13:35:44.000Z","_content":"\n\n## 半角数字\n\n阿拉伯数字一律使用半角形式，不得使用全角形式。\n\n```Plain Text\n错误：这件商品的价格是１０００元。\n\n正确：这件商品的价格是 1000 元。\n```\n\n## 千分号\n\n数值为千位以上，应添加千分号（半角逗号）。\n\n```Plain Text\nXXX 公司的实收资本为 ￥1,258,000 人民币。\n```\n\n对于 4 位的数值，千分号是选用的，比如`1000`和`1,000`都可以接受。对于 4 位以上的数值，应添加千分号。\n\n## 货币\n\n货币应为阿拉伯数字，并在数字前写出货币符号，或在数字后写出货币中文名称。\n\n```Plain Text\n$1,000\n1,000 美元\n```\n\n英文的货币名称，建议参考国际标准 [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)。\n\n## 数值范围\n\n表示数值范围时，用波浪线（`～`）或一字线（`—`）连接。参见《标点符号》一节的“连接号”部分。\n\n带有单位或百分号时，两个数字建议都要加上单位或百分号。\n\n```Plain Text\n132 kg～234 kg\n\n67%～89%\n```\n\n## 变化程度的表示法\n\n数字的增加要使用“增加了”、“增加到”。“了”表示增量，“到”表示定量。\n\n```Plain Text\n增加到过去的两倍\n（过去为一，现在为二）\n\n增加了两倍\n（过去为一，现在为三）\n```\n\n数字的减少要使用“降低了”、“降低到”。“了”表示增量，“到”表示定量。\n\n```Plain Text\n降低到百分之八十\n（定额是一百，现在是八十）\n\n降低了百分之八十\n（原来是一百，现在是二十）\n```\n\n不能用“降低 N 倍”或“减少 N 倍”的表示法，要用“降低百分之几”或“减少百分之几”。因为减少（或降低）一倍表示数值原来为一百，现在等于零。\n\n## 参考链接\n\n- [中文技术文档的写作规范](https://github.com/ruanyf/document-style-guide)，by 阮一峰\n","source":"_posts/writing-standard/number.md","raw":"---\ntitle: 数值规范\ndate: 2023-02-23 21:35:44\ncategories:\n- 写作标准\ntags:\n- 写作\n- 数值\n- 规范\n---\n\n\n## 半角数字\n\n阿拉伯数字一律使用半角形式，不得使用全角形式。\n\n```Plain Text\n错误：这件商品的价格是１０００元。\n\n正确：这件商品的价格是 1000 元。\n```\n\n## 千分号\n\n数值为千位以上，应添加千分号（半角逗号）。\n\n```Plain Text\nXXX 公司的实收资本为 ￥1,258,000 人民币。\n```\n\n对于 4 位的数值，千分号是选用的，比如`1000`和`1,000`都可以接受。对于 4 位以上的数值，应添加千分号。\n\n## 货币\n\n货币应为阿拉伯数字，并在数字前写出货币符号，或在数字后写出货币中文名称。\n\n```Plain Text\n$1,000\n1,000 美元\n```\n\n英文的货币名称，建议参考国际标准 [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)。\n\n## 数值范围\n\n表示数值范围时，用波浪线（`～`）或一字线（`—`）连接。参见《标点符号》一节的“连接号”部分。\n\n带有单位或百分号时，两个数字建议都要加上单位或百分号。\n\n```Plain Text\n132 kg～234 kg\n\n67%～89%\n```\n\n## 变化程度的表示法\n\n数字的增加要使用“增加了”、“增加到”。“了”表示增量，“到”表示定量。\n\n```Plain Text\n增加到过去的两倍\n（过去为一，现在为二）\n\n增加了两倍\n（过去为一，现在为三）\n```\n\n数字的减少要使用“降低了”、“降低到”。“了”表示增量，“到”表示定量。\n\n```Plain Text\n降低到百分之八十\n（定额是一百，现在是八十）\n\n降低了百分之八十\n（原来是一百，现在是二十）\n```\n\n不能用“降低 N 倍”或“减少 N 倍”的表示法，要用“降低百分之几”或“减少百分之几”。因为减少（或降低）一倍表示数值原来为一百，现在等于零。\n\n## 参考链接\n\n- [中文技术文档的写作规范](https://github.com/ruanyf/document-style-guide)，by 阮一峰\n","slug":"writing-standard/number","published":1,"updated":"2023-05-25T05:12:11.050Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cli2pbl1t000a1sn18fad1q8x","content":"<h2 id=\"半角数字\"><a href=\"#半角数字\" class=\"headerlink\" title=\"半角数字\"></a>半角数字</h2><p>阿拉伯数字一律使用半角形式，不得使用全角形式。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">错误：这件商品的价格是１０００元。<br><br>正确：这件商品的价格是 1000 元。<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"千分号\"><a href=\"#千分号\" class=\"headerlink\" title=\"千分号\"></a>千分号</h2><p>数值为千位以上，应添加千分号（半角逗号）。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">XXX 公司的实收资本为 ￥1,258,000 人民币。<br></code></pre></td></tr></table></figure>\n\n<p>对于 4 位的数值，千分号是选用的，比如<code>1000</code>和<code>1,000</code>都可以接受。对于 4 位以上的数值，应添加千分号。</p>\n<h2 id=\"货币\"><a href=\"#货币\" class=\"headerlink\" title=\"货币\"></a>货币</h2><p>货币应为阿拉伯数字，并在数字前写出货币符号，或在数字后写出货币中文名称。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">$1,000<br>1,000 美元<br></code></pre></td></tr></table></figure>\n\n<p>英文的货币名称，建议参考国际标准 <a href=\"https://en.wikipedia.org/wiki/ISO_4217\">ISO 4217</a>。</p>\n<h2 id=\"数值范围\"><a href=\"#数值范围\" class=\"headerlink\" title=\"数值范围\"></a>数值范围</h2><p>表示数值范围时，用波浪线（<code>～</code>）或一字线（<code>—</code>）连接。参见《标点符号》一节的“连接号”部分。</p>\n<p>带有单位或百分号时，两个数字建议都要加上单位或百分号。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">132 kg～234 kg<br><br>67%～89%<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"变化程度的表示法\"><a href=\"#变化程度的表示法\" class=\"headerlink\" title=\"变化程度的表示法\"></a>变化程度的表示法</h2><p>数字的增加要使用“增加了”、“增加到”。“了”表示增量，“到”表示定量。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">增加到过去的两倍<br>（过去为一，现在为二）<br><br>增加了两倍<br>（过去为一，现在为三）<br></code></pre></td></tr></table></figure>\n\n<p>数字的减少要使用“降低了”、“降低到”。“了”表示增量，“到”表示定量。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">降低到百分之八十<br>（定额是一百，现在是八十）<br><br>降低了百分之八十<br>（原来是一百，现在是二十）<br></code></pre></td></tr></table></figure>\n\n<p>不能用“降低 N 倍”或“减少 N 倍”的表示法，要用“降低百分之几”或“减少百分之几”。因为减少（或降低）一倍表示数值原来为一百，现在等于零。</p>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><ul>\n<li><a href=\"https://github.com/ruanyf/document-style-guide\">中文技术文档的写作规范</a>，by 阮一峰</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"半角数字\"><a href=\"#半角数字\" class=\"headerlink\" title=\"半角数字\"></a>半角数字</h2><p>阿拉伯数字一律使用半角形式，不得使用全角形式。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">错误：这件商品的价格是１０００元。<br><br>正确：这件商品的价格是 1000 元。<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"千分号\"><a href=\"#千分号\" class=\"headerlink\" title=\"千分号\"></a>千分号</h2><p>数值为千位以上，应添加千分号（半角逗号）。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">XXX 公司的实收资本为 ￥1,258,000 人民币。<br></code></pre></td></tr></table></figure>\n\n<p>对于 4 位的数值，千分号是选用的，比如<code>1000</code>和<code>1,000</code>都可以接受。对于 4 位以上的数值，应添加千分号。</p>\n<h2 id=\"货币\"><a href=\"#货币\" class=\"headerlink\" title=\"货币\"></a>货币</h2><p>货币应为阿拉伯数字，并在数字前写出货币符号，或在数字后写出货币中文名称。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">$1,000<br>1,000 美元<br></code></pre></td></tr></table></figure>\n\n<p>英文的货币名称，建议参考国际标准 <a href=\"https://en.wikipedia.org/wiki/ISO_4217\">ISO 4217</a>。</p>\n<h2 id=\"数值范围\"><a href=\"#数值范围\" class=\"headerlink\" title=\"数值范围\"></a>数值范围</h2><p>表示数值范围时，用波浪线（<code>～</code>）或一字线（<code>—</code>）连接。参见《标点符号》一节的“连接号”部分。</p>\n<p>带有单位或百分号时，两个数字建议都要加上单位或百分号。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">132 kg～234 kg<br><br>67%～89%<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"变化程度的表示法\"><a href=\"#变化程度的表示法\" class=\"headerlink\" title=\"变化程度的表示法\"></a>变化程度的表示法</h2><p>数字的增加要使用“增加了”、“增加到”。“了”表示增量，“到”表示定量。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">增加到过去的两倍<br>（过去为一，现在为二）<br><br>增加了两倍<br>（过去为一，现在为三）<br></code></pre></td></tr></table></figure>\n\n<p>数字的减少要使用“降低了”、“降低到”。“了”表示增量，“到”表示定量。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">降低到百分之八十<br>（定额是一百，现在是八十）<br><br>降低了百分之八十<br>（原来是一百，现在是二十）<br></code></pre></td></tr></table></figure>\n\n<p>不能用“降低 N 倍”或“减少 N 倍”的表示法，要用“降低百分之几”或“减少百分之几”。因为减少（或降低）一倍表示数值原来为一百，现在等于零。</p>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><ul>\n<li><a href=\"https://github.com/ruanyf/document-style-guide\">中文技术文档的写作规范</a>，by 阮一峰</li>\n</ul>\n"},{"title":"参考链接规范","date":"2023-02-23T14:08:14.000Z","_content":"\n- [产品手册中文写作规范](https://www.taodocs.com/p-51273.html), by 华为\n- [写作规范和格式规范](http://guide.daocloud.io/dcs/%E5%86%99%E4%BD%9C%E8%A7%84%E8%8C%83%E5%92%8C%E6%A0%BC%E5%BC%8F%E8%A7%84%E8%8C%83-9153803.html), by DaoCloud\n- [技术写作技巧在日汉翻译中的应用](http://www.hitachi-tc.co.jp/company/thesis/thesis.pdf), by 刘方\n- [简体中文规范指南](https://www.lengoo.de/documents/styleguides/lengoo_styleguide_ZH.pdf), by lengoo\n- [文档风格指南](https://open.leancloud.cn/copywriting-style-guide.html), by LeanCloud\n- [豌豆荚文案风格指南](https://docs.google.com/document/d/1R8lMCPf6zCD5KEA8ekZ5knK77iw9J-vJ6vEopPemqZM/edit), by 豌豆荚\n- [中文文案排版指北](https://github.com/sparanoid/chinese-copywriting-guidelines), by sparanoid\n- [中文排版需求](http://w3c.github.io/clreq/), by W3C\n- [为什么文件名要小写？](http://www.ruanyifeng.com/blog/2017/02/filename-should-be-lowercase.html), by 阮一峰\n- [Google Developer Documentation Style Guide](https://developers.google.com/style/), by Google\n- [出版物上数字用法的规定（国家标准GBT15835－2011）](http://www.moe.gov.cn/ewebeditor/uploadfile/2015/01/13/20150113091154536.pdf)\n- [GB 3100-1993 国际单位制及其应用](https://zh.wikisource.org/zh-hans/GB_3100-1993_%E5%9B%BD%E9%99%85%E5%8D%95%E4%BD%8D%E5%88%B6%E5%8F%8A%E5%85%B6%E5%BA%94%E7%94%A8)","source":"_posts/writing-standard/reference.md","raw":"---\ntitle: 参考链接规范\ndate: 2023-02-23 22:08:14\ncategories:\n- 写作标准\ntags:\n- 写作\n- 参考链接\n- 规范\n---\n\n- [产品手册中文写作规范](https://www.taodocs.com/p-51273.html), by 华为\n- [写作规范和格式规范](http://guide.daocloud.io/dcs/%E5%86%99%E4%BD%9C%E8%A7%84%E8%8C%83%E5%92%8C%E6%A0%BC%E5%BC%8F%E8%A7%84%E8%8C%83-9153803.html), by DaoCloud\n- [技术写作技巧在日汉翻译中的应用](http://www.hitachi-tc.co.jp/company/thesis/thesis.pdf), by 刘方\n- [简体中文规范指南](https://www.lengoo.de/documents/styleguides/lengoo_styleguide_ZH.pdf), by lengoo\n- [文档风格指南](https://open.leancloud.cn/copywriting-style-guide.html), by LeanCloud\n- [豌豆荚文案风格指南](https://docs.google.com/document/d/1R8lMCPf6zCD5KEA8ekZ5knK77iw9J-vJ6vEopPemqZM/edit), by 豌豆荚\n- [中文文案排版指北](https://github.com/sparanoid/chinese-copywriting-guidelines), by sparanoid\n- [中文排版需求](http://w3c.github.io/clreq/), by W3C\n- [为什么文件名要小写？](http://www.ruanyifeng.com/blog/2017/02/filename-should-be-lowercase.html), by 阮一峰\n- [Google Developer Documentation Style Guide](https://developers.google.com/style/), by Google\n- [出版物上数字用法的规定（国家标准GBT15835－2011）](http://www.moe.gov.cn/ewebeditor/uploadfile/2015/01/13/20150113091154536.pdf)\n- [GB 3100-1993 国际单位制及其应用](https://zh.wikisource.org/zh-hans/GB_3100-1993_%E5%9B%BD%E9%99%85%E5%8D%95%E4%BD%8D%E5%88%B6%E5%8F%8A%E5%85%B6%E5%BA%94%E7%94%A8)","slug":"writing-standard/reference","published":1,"updated":"2023-05-25T05:12:11.051Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cli2pbl1u000b1sn1h1dsbqm7","content":"<ul>\n<li><a href=\"https://www.taodocs.com/p-51273.html\">产品手册中文写作规范</a>, by 华为</li>\n<li><a href=\"http://guide.daocloud.io/dcs/%E5%86%99%E4%BD%9C%E8%A7%84%E8%8C%83%E5%92%8C%E6%A0%BC%E5%BC%8F%E8%A7%84%E8%8C%83-9153803.html\">写作规范和格式规范</a>, by DaoCloud</li>\n<li><a href=\"http://www.hitachi-tc.co.jp/company/thesis/thesis.pdf\">技术写作技巧在日汉翻译中的应用</a>, by 刘方</li>\n<li><a href=\"https://www.lengoo.de/documents/styleguides/lengoo_styleguide_ZH.pdf\">简体中文规范指南</a>, by lengoo</li>\n<li><a href=\"https://open.leancloud.cn/copywriting-style-guide.html\">文档风格指南</a>, by LeanCloud</li>\n<li><a href=\"https://docs.google.com/document/d/1R8lMCPf6zCD5KEA8ekZ5knK77iw9J-vJ6vEopPemqZM/edit\">豌豆荚文案风格指南</a>, by 豌豆荚</li>\n<li><a href=\"https://github.com/sparanoid/chinese-copywriting-guidelines\">中文文案排版指北</a>, by sparanoid</li>\n<li><a href=\"http://w3c.github.io/clreq/\">中文排版需求</a>, by W3C</li>\n<li><a href=\"http://www.ruanyifeng.com/blog/2017/02/filename-should-be-lowercase.html\">为什么文件名要小写？</a>, by 阮一峰</li>\n<li><a href=\"https://developers.google.com/style/\">Google Developer Documentation Style Guide</a>, by Google</li>\n<li><a href=\"http://www.moe.gov.cn/ewebeditor/uploadfile/2015/01/13/20150113091154536.pdf\">出版物上数字用法的规定（国家标准GBT15835－2011）</a></li>\n<li><a href=\"https://zh.wikisource.org/zh-hans/GB_3100-1993_%E5%9B%BD%E9%99%85%E5%8D%95%E4%BD%8D%E5%88%B6%E5%8F%8A%E5%85%B6%E5%BA%94%E7%94%A8\">GB 3100-1993 国际单位制及其应用</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li><a href=\"https://www.taodocs.com/p-51273.html\">产品手册中文写作规范</a>, by 华为</li>\n<li><a href=\"http://guide.daocloud.io/dcs/%E5%86%99%E4%BD%9C%E8%A7%84%E8%8C%83%E5%92%8C%E6%A0%BC%E5%BC%8F%E8%A7%84%E8%8C%83-9153803.html\">写作规范和格式规范</a>, by DaoCloud</li>\n<li><a href=\"http://www.hitachi-tc.co.jp/company/thesis/thesis.pdf\">技术写作技巧在日汉翻译中的应用</a>, by 刘方</li>\n<li><a href=\"https://www.lengoo.de/documents/styleguides/lengoo_styleguide_ZH.pdf\">简体中文规范指南</a>, by lengoo</li>\n<li><a href=\"https://open.leancloud.cn/copywriting-style-guide.html\">文档风格指南</a>, by LeanCloud</li>\n<li><a href=\"https://docs.google.com/document/d/1R8lMCPf6zCD5KEA8ekZ5knK77iw9J-vJ6vEopPemqZM/edit\">豌豆荚文案风格指南</a>, by 豌豆荚</li>\n<li><a href=\"https://github.com/sparanoid/chinese-copywriting-guidelines\">中文文案排版指北</a>, by sparanoid</li>\n<li><a href=\"http://w3c.github.io/clreq/\">中文排版需求</a>, by W3C</li>\n<li><a href=\"http://www.ruanyifeng.com/blog/2017/02/filename-should-be-lowercase.html\">为什么文件名要小写？</a>, by 阮一峰</li>\n<li><a href=\"https://developers.google.com/style/\">Google Developer Documentation Style Guide</a>, by Google</li>\n<li><a href=\"http://www.moe.gov.cn/ewebeditor/uploadfile/2015/01/13/20150113091154536.pdf\">出版物上数字用法的规定（国家标准GBT15835－2011）</a></li>\n<li><a href=\"https://zh.wikisource.org/zh-hans/GB_3100-1993_%E5%9B%BD%E9%99%85%E5%8D%95%E4%BD%8D%E5%88%B6%E5%8F%8A%E5%85%B6%E5%BA%94%E7%94%A8\">GB 3100-1993 国际单位制及其应用</a></li>\n</ul>\n"},{"title":"段落规范","date":"2023-02-23T10:56:35.000Z","_content":"\n## 原则\n\n- 一个段落只能有一个主题，或一个中心句子。\n- 段落的中心句子放在段首，对全段内容进行概述。后面陈述的句子为中心句子服务。\n- 一个段落的长度不能超过七行，最佳段落长度小于等于四行。\n- 段落的句子语气要使用陈述和肯定语气，避免使用感叹语气。\n- 段落之间使用一个空行隔开。\n- 段落开头不要留出空白字符。\n\n## 引用\n\n引用第三方内容时，应注明出处。\n\n```Plain Text\nOne man’s constant is another man’s variable. — Alan Perlis\n```\n\n如果是全篇转载，请在全文开头显著位置注明作者和出处，并链接至原文。\n\n```Plain Text\n本文转载自 WikiQuote\n```\n\n使用外部图片时，必须在图片下方或文末标明来源。\n\n```Plain Text\n本文部分图片来自 Wikipedia\n```\n\n## 参考链接\n\n- [中文技术文档的写作规范](https://github.com/ruanyf/document-style-guide)，by 阮一峰\n","source":"_posts/writing-standard/paragraph.md","raw":"---\ntitle: 段落规范\ndate: 2023-02-23 18:56:35\ncategories:\n- 写作标准\ntags:\n- 写作\n- 段落\n- 规范\n---\n\n## 原则\n\n- 一个段落只能有一个主题，或一个中心句子。\n- 段落的中心句子放在段首，对全段内容进行概述。后面陈述的句子为中心句子服务。\n- 一个段落的长度不能超过七行，最佳段落长度小于等于四行。\n- 段落的句子语气要使用陈述和肯定语气，避免使用感叹语气。\n- 段落之间使用一个空行隔开。\n- 段落开头不要留出空白字符。\n\n## 引用\n\n引用第三方内容时，应注明出处。\n\n```Plain Text\nOne man’s constant is another man’s variable. — Alan Perlis\n```\n\n如果是全篇转载，请在全文开头显著位置注明作者和出处，并链接至原文。\n\n```Plain Text\n本文转载自 WikiQuote\n```\n\n使用外部图片时，必须在图片下方或文末标明来源。\n\n```Plain Text\n本文部分图片来自 Wikipedia\n```\n\n## 参考链接\n\n- [中文技术文档的写作规范](https://github.com/ruanyf/document-style-guide)，by 阮一峰\n","slug":"writing-standard/paragraph","published":1,"updated":"2023-10-14T14:11:00.089Z","_id":"cli2pbl1v000d1sn1363hf3ll","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"原则\"><a href=\"#原则\" class=\"headerlink\" title=\"原则\"></a>原则</h2><ul>\n<li>一个段落只能有一个主题，或一个中心句子。</li>\n<li>段落的中心句子放在段首，对全段内容进行概述。后面陈述的句子为中心句子服务。</li>\n<li>一个段落的长度不能超过七行，最佳段落长度小于等于四行。</li>\n<li>段落的句子语气要使用陈述和肯定语气，避免使用感叹语气。</li>\n<li>段落之间使用一个空行隔开。</li>\n<li>段落开头不要留出空白字符。</li>\n</ul>\n<h2 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h2><p>引用第三方内容时，应注明出处。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">One man’s constant is another man’s variable. — Alan Perlis<br></code></pre></td></tr></table></figure>\n\n<p>如果是全篇转载，请在全文开头显著位置注明作者和出处，并链接至原文。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">本文转载自 WikiQuote<br></code></pre></td></tr></table></figure>\n\n<p>使用外部图片时，必须在图片下方或文末标明来源。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">本文部分图片来自 Wikipedia<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><ul>\n<li><a href=\"https://github.com/ruanyf/document-style-guide\">中文技术文档的写作规范</a>，by 阮一峰</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"原则\"><a href=\"#原则\" class=\"headerlink\" title=\"原则\"></a>原则</h2><ul>\n<li>一个段落只能有一个主题，或一个中心句子。</li>\n<li>段落的中心句子放在段首，对全段内容进行概述。后面陈述的句子为中心句子服务。</li>\n<li>一个段落的长度不能超过七行，最佳段落长度小于等于四行。</li>\n<li>段落的句子语气要使用陈述和肯定语气，避免使用感叹语气。</li>\n<li>段落之间使用一个空行隔开。</li>\n<li>段落开头不要留出空白字符。</li>\n</ul>\n<h2 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h2><p>引用第三方内容时，应注明出处。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">One man’s constant is another man’s variable. — Alan Perlis<br></code></pre></td></tr></table></figure>\n\n<p>如果是全篇转载，请在全文开头显著位置注明作者和出处，并链接至原文。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">本文转载自 WikiQuote<br></code></pre></td></tr></table></figure>\n\n<p>使用外部图片时，必须在图片下方或文末标明来源。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">本文部分图片来自 Wikipedia<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><ul>\n<li><a href=\"https://github.com/ruanyf/document-style-guide\">中文技术文档的写作规范</a>，by 阮一峰</li>\n</ul>\n"},{"title":"文档规范","date":"2023-02-23T14:10:05.000Z","_content":"\n\n## 结构\n\n软件手册是一部完整的书，建议采用下面的结构。\n\n- **简介**（Introduction）：[必备] [文件] 提供对产品和文档本身的总体的、扼要的说明\n- **快速上手**（Getting Started）：[可选] [文件] 如何最快速地使用产品\n- **入门篇**（Basics）：[必备] [目录] 又称“使用篇”，提供初级的使用教程\n  - **环境准备**（Prerequisite）：[必备] [文件] 软件使用需要满足的前置条件\n  - **安装**（Installation）：[可选] [文件] 软件的安装方法\n  - **设置**（Configuration）：[必备] [文件] 软件的设置\n- **进阶篇**（Advanced)：[可选] [目录] 又称“开发篇”，提供中高级的开发教程\n- **API**（Reference）：[可选] [目录|文件] 软件 API 的逐一介绍\n- **FAQ**：[可选] [文件] 常见问题解答\n- **附录**（Appendix）：[可选] [目录] 不属于教程本身、但对阅读教程有帮助的内容\n  - **Glossary**：[可选] [文件] 名词解释\n  - **Recipes**：[可选] [文件] 最佳实践\n  - **Troubleshooting**：[可选] [文件] 故障处理\n  - **ChangeLog**：[可选] [文件] 版本说明\n  - **Feedback**：[可选] [文件] 反馈方式\n\n下面是两个真实范例，可参考。\n\n- [Redux 手册](https://redux.js.org/introduction/getting-started)\n- [Atom 手册](http://flight-manual.atom.io/)\n\n## 文件名\n\n文档的文件名不得含有空格。\n\n文件名必须使用半角字符，不得使用全角字符。这也意味着，中文不能用于文件名。\n\n```Plain Text\n错误：名词解释.md\n\n正确：glossary.md\n```\n\n文件名建议只使用小写字母，不使用大写字母。\n\n```Plain Text\n错误：TroubleShooting.md\n\n正确：troubleshooting.md\n```\n\n为了醒目，某些说明文件的文件名，可以使用大写字母，比如`README`、`LICENSE`。\n\n文件名包含多个单词时，单词之间建议使用半角的连词线（`-`）分隔。\n\n```Plain Text\n不佳：advanced_usage.md\n\n正确：advanced-usage.md\n```\n\n## 参考链接\n\n- [中文技术文档的写作规范](https://github.com/ruanyf/document-style-guide)，by 阮一峰\n","source":"_posts/writing-standard/structure.md","raw":"---\ntitle: 文档规范\ndate: 2023-02-23 22:10:05\ncategories:\n- 写作标准\ntags:\n- 写作\n- 文档\n- 规范\n---\n\n\n## 结构\n\n软件手册是一部完整的书，建议采用下面的结构。\n\n- **简介**（Introduction）：[必备] [文件] 提供对产品和文档本身的总体的、扼要的说明\n- **快速上手**（Getting Started）：[可选] [文件] 如何最快速地使用产品\n- **入门篇**（Basics）：[必备] [目录] 又称“使用篇”，提供初级的使用教程\n  - **环境准备**（Prerequisite）：[必备] [文件] 软件使用需要满足的前置条件\n  - **安装**（Installation）：[可选] [文件] 软件的安装方法\n  - **设置**（Configuration）：[必备] [文件] 软件的设置\n- **进阶篇**（Advanced)：[可选] [目录] 又称“开发篇”，提供中高级的开发教程\n- **API**（Reference）：[可选] [目录|文件] 软件 API 的逐一介绍\n- **FAQ**：[可选] [文件] 常见问题解答\n- **附录**（Appendix）：[可选] [目录] 不属于教程本身、但对阅读教程有帮助的内容\n  - **Glossary**：[可选] [文件] 名词解释\n  - **Recipes**：[可选] [文件] 最佳实践\n  - **Troubleshooting**：[可选] [文件] 故障处理\n  - **ChangeLog**：[可选] [文件] 版本说明\n  - **Feedback**：[可选] [文件] 反馈方式\n\n下面是两个真实范例，可参考。\n\n- [Redux 手册](https://redux.js.org/introduction/getting-started)\n- [Atom 手册](http://flight-manual.atom.io/)\n\n## 文件名\n\n文档的文件名不得含有空格。\n\n文件名必须使用半角字符，不得使用全角字符。这也意味着，中文不能用于文件名。\n\n```Plain Text\n错误：名词解释.md\n\n正确：glossary.md\n```\n\n文件名建议只使用小写字母，不使用大写字母。\n\n```Plain Text\n错误：TroubleShooting.md\n\n正确：troubleshooting.md\n```\n\n为了醒目，某些说明文件的文件名，可以使用大写字母，比如`README`、`LICENSE`。\n\n文件名包含多个单词时，单词之间建议使用半角的连词线（`-`）分隔。\n\n```Plain Text\n不佳：advanced_usage.md\n\n正确：advanced-usage.md\n```\n\n## 参考链接\n\n- [中文技术文档的写作规范](https://github.com/ruanyf/document-style-guide)，by 阮一峰\n","slug":"writing-standard/structure","published":1,"updated":"2023-05-25T05:12:11.051Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cli2pbl1v000e1sn1ghg4fzic","content":"<h2 id=\"结构\"><a href=\"#结构\" class=\"headerlink\" title=\"结构\"></a>结构</h2><p>软件手册是一部完整的书，建议采用下面的结构。</p>\n<ul>\n<li><strong>简介</strong>（Introduction）：[必备] [文件] 提供对产品和文档本身的总体的、扼要的说明</li>\n<li><strong>快速上手</strong>（Getting Started）：[可选] [文件] 如何最快速地使用产品</li>\n<li><strong>入门篇</strong>（Basics）：[必备] [目录] 又称“使用篇”，提供初级的使用教程<ul>\n<li><strong>环境准备</strong>（Prerequisite）：[必备] [文件] 软件使用需要满足的前置条件</li>\n<li><strong>安装</strong>（Installation）：[可选] [文件] 软件的安装方法</li>\n<li><strong>设置</strong>（Configuration）：[必备] [文件] 软件的设置</li>\n</ul>\n</li>\n<li><strong>进阶篇</strong>（Advanced)：[可选] [目录] 又称“开发篇”，提供中高级的开发教程</li>\n<li><strong>API</strong>（Reference）：[可选] [目录|文件] 软件 API 的逐一介绍</li>\n<li><strong>FAQ</strong>：[可选] [文件] 常见问题解答</li>\n<li><strong>附录</strong>（Appendix）：[可选] [目录] 不属于教程本身、但对阅读教程有帮助的内容<ul>\n<li><strong>Glossary</strong>：[可选] [文件] 名词解释</li>\n<li><strong>Recipes</strong>：[可选] [文件] 最佳实践</li>\n<li><strong>Troubleshooting</strong>：[可选] [文件] 故障处理</li>\n<li><strong>ChangeLog</strong>：[可选] [文件] 版本说明</li>\n<li><strong>Feedback</strong>：[可选] [文件] 反馈方式</li>\n</ul>\n</li>\n</ul>\n<p>下面是两个真实范例，可参考。</p>\n<ul>\n<li><a href=\"https://redux.js.org/introduction/getting-started\">Redux 手册</a></li>\n<li><a href=\"http://flight-manual.atom.io/\">Atom 手册</a></li>\n</ul>\n<h2 id=\"文件名\"><a href=\"#文件名\" class=\"headerlink\" title=\"文件名\"></a>文件名</h2><p>文档的文件名不得含有空格。</p>\n<p>文件名必须使用半角字符，不得使用全角字符。这也意味着，中文不能用于文件名。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">错误：名词解释.md<br><br>正确：glossary.md<br></code></pre></td></tr></table></figure>\n\n<p>文件名建议只使用小写字母，不使用大写字母。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">错误：TroubleShooting.md<br><br>正确：troubleshooting.md<br></code></pre></td></tr></table></figure>\n\n<p>为了醒目，某些说明文件的文件名，可以使用大写字母，比如<code>README</code>、<code>LICENSE</code>。</p>\n<p>文件名包含多个单词时，单词之间建议使用半角的连词线（<code>-</code>）分隔。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">不佳：advanced_usage.md<br><br>正确：advanced-usage.md<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><ul>\n<li><a href=\"https://github.com/ruanyf/document-style-guide\">中文技术文档的写作规范</a>，by 阮一峰</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"结构\"><a href=\"#结构\" class=\"headerlink\" title=\"结构\"></a>结构</h2><p>软件手册是一部完整的书，建议采用下面的结构。</p>\n<ul>\n<li><strong>简介</strong>（Introduction）：[必备] [文件] 提供对产品和文档本身的总体的、扼要的说明</li>\n<li><strong>快速上手</strong>（Getting Started）：[可选] [文件] 如何最快速地使用产品</li>\n<li><strong>入门篇</strong>（Basics）：[必备] [目录] 又称“使用篇”，提供初级的使用教程<ul>\n<li><strong>环境准备</strong>（Prerequisite）：[必备] [文件] 软件使用需要满足的前置条件</li>\n<li><strong>安装</strong>（Installation）：[可选] [文件] 软件的安装方法</li>\n<li><strong>设置</strong>（Configuration）：[必备] [文件] 软件的设置</li>\n</ul>\n</li>\n<li><strong>进阶篇</strong>（Advanced)：[可选] [目录] 又称“开发篇”，提供中高级的开发教程</li>\n<li><strong>API</strong>（Reference）：[可选] [目录|文件] 软件 API 的逐一介绍</li>\n<li><strong>FAQ</strong>：[可选] [文件] 常见问题解答</li>\n<li><strong>附录</strong>（Appendix）：[可选] [目录] 不属于教程本身、但对阅读教程有帮助的内容<ul>\n<li><strong>Glossary</strong>：[可选] [文件] 名词解释</li>\n<li><strong>Recipes</strong>：[可选] [文件] 最佳实践</li>\n<li><strong>Troubleshooting</strong>：[可选] [文件] 故障处理</li>\n<li><strong>ChangeLog</strong>：[可选] [文件] 版本说明</li>\n<li><strong>Feedback</strong>：[可选] [文件] 反馈方式</li>\n</ul>\n</li>\n</ul>\n<p>下面是两个真实范例，可参考。</p>\n<ul>\n<li><a href=\"https://redux.js.org/introduction/getting-started\">Redux 手册</a></li>\n<li><a href=\"http://flight-manual.atom.io/\">Atom 手册</a></li>\n</ul>\n<h2 id=\"文件名\"><a href=\"#文件名\" class=\"headerlink\" title=\"文件名\"></a>文件名</h2><p>文档的文件名不得含有空格。</p>\n<p>文件名必须使用半角字符，不得使用全角字符。这也意味着，中文不能用于文件名。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">错误：名词解释.md<br><br>正确：glossary.md<br></code></pre></td></tr></table></figure>\n\n<p>文件名建议只使用小写字母，不使用大写字母。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">错误：TroubleShooting.md<br><br>正确：troubleshooting.md<br></code></pre></td></tr></table></figure>\n\n<p>为了醒目，某些说明文件的文件名，可以使用大写字母，比如<code>README</code>、<code>LICENSE</code>。</p>\n<p>文件名包含多个单词时，单词之间建议使用半角的连词线（<code>-</code>）分隔。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">不佳：advanced_usage.md<br><br>正确：advanced-usage.md<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><ul>\n<li><a href=\"https://github.com/ruanyf/document-style-guide\">中文技术文档的写作规范</a>，by 阮一峰</li>\n</ul>\n"},{"title":"文本规范","date":"2023-02-23T13:32:41.000Z","_content":"\n## 字间距\n\n（1）全角中文字符与半角英文字符之间，应有一个半角空格。\n\n```Plain Text\n错误：本文介绍如何快速启动Windows系统。\n\n正确：本文介绍如何快速启动 Windows 系统。\n```\n\n（2）全角中文字符与半角阿拉伯数字之间，有没有半角空格都可，但必须保证风格统一，不能两种风格混杂。\n\n```Plain Text\n正确：2011年5月15日，我订购了5台笔记本电脑与10台平板电脑。\n\n正确：2011 年 5 月 15 日，我订购了 5 台笔记本电脑与 10 台平板电脑。\n```\n\n半角的百分号，视同阿拉伯数字。\n\n```Plain Text\n正确：今年我国经济增长率是6.5%。\n\n正确：今年我国经济增长率是 6.5%。\n```\n\n（3）英文单位若不翻译，单位前的阿拉伯数字与单位符号之间，应留出适当的空隙。\n\n```Plain Text\n例1：一部容量为 16 GB 的智能手机\n\n例2：1 h = 60 min = 3,600 s\n```\n\n（4）半角英文字符和半角阿拉伯数字，与全角标点符号之间不留空格。\n\n```Plain Text\n错误：他的电脑是 MacBook Air 。\n\n正确：他的电脑是 MacBook Air。\n```\n\n## 句子\n\n（1）避免使用长句。\n\n不包含任何标点符号的单个句子，或者以逗号分隔的句子构件，长度尽量保持在 20 个字以内；20～29 个字的句子，可以接受；30～39 个字的句子，语义必须明确，才能接受；多于 40 个字的句子，任何情况下都不能接受。\n\n```Plain Text\n错误：本产品适用于从由一台服务器进行动作控制的单一节点结构到由多台服务器进行动作控制的并行处理程序结构等多种体系结构。\n\n正确：本产品适用于多种体系结构。无论是由一台服务器（单一节点结构），还是由多台服务器（并行处理结构）进行动作控制，均可以使用本产品。\n```\n\n逗号分割的长句，总长度不应该超过 100 字或者正文的 3 行。\n\n（2）尽量使用简单句和并列句，避免使用复合句。\n\n```Plain Text\n并列句：他昨天生病了，没有参加会议。\n\n复合句：那个昨天生病的人没有参加会议。\n```\n\n（3）同样一个意思，尽量使用肯定句表达，不使用否定句表达。\n\n```Plain Text\n错误：请确认没有接通装置的电源。\n\n正确：请确认装置的电源已关闭。\n```\n\n（4）避免使用双重否定句。\n\n```Plain Text\n错误：没有删除权限的用户，不能删除此文件。\n\n正确：用户必须拥有删除权限，才能删除此文件。\n```\n\n## 写作风格\n\n（1）尽量不使用被动语态，改为使用主动语态。\n\n```Plain Text\n错误：假如此软件尚未被安装，\n\n正确：假如尚未安装这个软件，\n```\n\n（2）不使用非正式的语言风格。\n\n```Plain Text\n错误：Lady Gaga 的演唱会真是酷毙了，从没看过这么给力的表演！！！\n\n正确：无法参加本次活动，我深感遗憾。\n```\n\n（3）不使用冷僻、生造或者文言文的词语，而要使用现代汉语的常用表达方式。\n\n```Plain Text\n错误：这是唯二的快速启动的方法。\n\n正确：这是仅有的两种快速启动的方法。\n```\n\n（4）用对“的”、“地”、“得”。\n\n```Plain Text\n她露出了开心的笑容。\n（形容词＋的＋名词）\n\n她开心地笑了。\n（副词＋地＋动词）\n\n她笑得很开心。\n（动词＋得＋副词）\n```\n\n（5）使用代词时（比如“其”、“该”、“此”、“这”等词），必须明确指代的内容，保证只有一个含义。\n\n```Plain Text\n错误：从管理系统可以监视中继系统和受其直接控制的分配系统。\n\n正确：从管理系统可以监视两个系统：中继系统和受中继系统直接控制的分配系统。\n```\n\n（6）名词前不要使用过多的形容词。\n\n```Plain Text\n错误：此设备的使用必须在接受过本公司举办的正式的设备培训的技师的指导下进行。\n\n正确：此设备必须在技师的指导下使用，且指导技师必须接受过由本公司举办的正式设备培训。\n```\n\n## 英文处理\n\n（1）英文原文如果使用了复数形式，翻译成中文时，应该将其还原为单数形式。\n\n```Plain Text\n英文：...information stored in random access memory (RAMs)...\n\n中文：⋯⋯存储在随机存取存储器（RAM）里的信息⋯⋯\n```\n\n（2）外文缩写可以使用半角圆点(`.`)表示缩写。\n\n```Plain Text\nU.S.A.\nApple, Inc.\n```\n\n（3）表示中文时，英文省略号（`...`）应改为中文省略号（`⋯⋯`）。\n\n```Plain Text\n英文：5 minutes later...\n\n中文：5 分钟过去了⋯⋯\n```\n\n（4）英文书名或电影名改用中文表达时，双引号应改为书名号。\n\n```Plain Text\n英文：He published an article entitled \"The Future of the Aviation\".\n\n中文：他发表了一篇名为《航空业的未来》的文章。\n```\n\n（5）第一次出现英文词汇时，在括号中给出中文标注。此后再次出现时，直接使用英文缩写即可。\n\n```Plain Text\nIOC（International Olympic Committee，国际奥林匹克委员会）。这样定义后，便可以直接使用“IOC”了。\n```\n\n（6）专有名词中每个词第一个字母均应大写，非专有名词则不需要大写。\n\n```Plain Text\n“American Association of Physicists in Medicine”（美国医学物理学家协会）是专有名词，需要大写。\n\n“online transaction processing”（在线事务处理）不是专有名词，不应大写。\n```\n## 参考链接\n\n- [中文技术文档的写作规范](https://github.com/ruanyf/document-style-guide)，by 阮一峰\n","source":"_posts/writing-standard/text.md","raw":"---\ntitle: 文本规范\ndate: 2023-02-23 21:32:41\ncategories:\n- 写作标准\ntags:\n- 写作\n- 文本\n- 规范\n---\n\n## 字间距\n\n（1）全角中文字符与半角英文字符之间，应有一个半角空格。\n\n```Plain Text\n错误：本文介绍如何快速启动Windows系统。\n\n正确：本文介绍如何快速启动 Windows 系统。\n```\n\n（2）全角中文字符与半角阿拉伯数字之间，有没有半角空格都可，但必须保证风格统一，不能两种风格混杂。\n\n```Plain Text\n正确：2011年5月15日，我订购了5台笔记本电脑与10台平板电脑。\n\n正确：2011 年 5 月 15 日，我订购了 5 台笔记本电脑与 10 台平板电脑。\n```\n\n半角的百分号，视同阿拉伯数字。\n\n```Plain Text\n正确：今年我国经济增长率是6.5%。\n\n正确：今年我国经济增长率是 6.5%。\n```\n\n（3）英文单位若不翻译，单位前的阿拉伯数字与单位符号之间，应留出适当的空隙。\n\n```Plain Text\n例1：一部容量为 16 GB 的智能手机\n\n例2：1 h = 60 min = 3,600 s\n```\n\n（4）半角英文字符和半角阿拉伯数字，与全角标点符号之间不留空格。\n\n```Plain Text\n错误：他的电脑是 MacBook Air 。\n\n正确：他的电脑是 MacBook Air。\n```\n\n## 句子\n\n（1）避免使用长句。\n\n不包含任何标点符号的单个句子，或者以逗号分隔的句子构件，长度尽量保持在 20 个字以内；20～29 个字的句子，可以接受；30～39 个字的句子，语义必须明确，才能接受；多于 40 个字的句子，任何情况下都不能接受。\n\n```Plain Text\n错误：本产品适用于从由一台服务器进行动作控制的单一节点结构到由多台服务器进行动作控制的并行处理程序结构等多种体系结构。\n\n正确：本产品适用于多种体系结构。无论是由一台服务器（单一节点结构），还是由多台服务器（并行处理结构）进行动作控制，均可以使用本产品。\n```\n\n逗号分割的长句，总长度不应该超过 100 字或者正文的 3 行。\n\n（2）尽量使用简单句和并列句，避免使用复合句。\n\n```Plain Text\n并列句：他昨天生病了，没有参加会议。\n\n复合句：那个昨天生病的人没有参加会议。\n```\n\n（3）同样一个意思，尽量使用肯定句表达，不使用否定句表达。\n\n```Plain Text\n错误：请确认没有接通装置的电源。\n\n正确：请确认装置的电源已关闭。\n```\n\n（4）避免使用双重否定句。\n\n```Plain Text\n错误：没有删除权限的用户，不能删除此文件。\n\n正确：用户必须拥有删除权限，才能删除此文件。\n```\n\n## 写作风格\n\n（1）尽量不使用被动语态，改为使用主动语态。\n\n```Plain Text\n错误：假如此软件尚未被安装，\n\n正确：假如尚未安装这个软件，\n```\n\n（2）不使用非正式的语言风格。\n\n```Plain Text\n错误：Lady Gaga 的演唱会真是酷毙了，从没看过这么给力的表演！！！\n\n正确：无法参加本次活动，我深感遗憾。\n```\n\n（3）不使用冷僻、生造或者文言文的词语，而要使用现代汉语的常用表达方式。\n\n```Plain Text\n错误：这是唯二的快速启动的方法。\n\n正确：这是仅有的两种快速启动的方法。\n```\n\n（4）用对“的”、“地”、“得”。\n\n```Plain Text\n她露出了开心的笑容。\n（形容词＋的＋名词）\n\n她开心地笑了。\n（副词＋地＋动词）\n\n她笑得很开心。\n（动词＋得＋副词）\n```\n\n（5）使用代词时（比如“其”、“该”、“此”、“这”等词），必须明确指代的内容，保证只有一个含义。\n\n```Plain Text\n错误：从管理系统可以监视中继系统和受其直接控制的分配系统。\n\n正确：从管理系统可以监视两个系统：中继系统和受中继系统直接控制的分配系统。\n```\n\n（6）名词前不要使用过多的形容词。\n\n```Plain Text\n错误：此设备的使用必须在接受过本公司举办的正式的设备培训的技师的指导下进行。\n\n正确：此设备必须在技师的指导下使用，且指导技师必须接受过由本公司举办的正式设备培训。\n```\n\n## 英文处理\n\n（1）英文原文如果使用了复数形式，翻译成中文时，应该将其还原为单数形式。\n\n```Plain Text\n英文：...information stored in random access memory (RAMs)...\n\n中文：⋯⋯存储在随机存取存储器（RAM）里的信息⋯⋯\n```\n\n（2）外文缩写可以使用半角圆点(`.`)表示缩写。\n\n```Plain Text\nU.S.A.\nApple, Inc.\n```\n\n（3）表示中文时，英文省略号（`...`）应改为中文省略号（`⋯⋯`）。\n\n```Plain Text\n英文：5 minutes later...\n\n中文：5 分钟过去了⋯⋯\n```\n\n（4）英文书名或电影名改用中文表达时，双引号应改为书名号。\n\n```Plain Text\n英文：He published an article entitled \"The Future of the Aviation\".\n\n中文：他发表了一篇名为《航空业的未来》的文章。\n```\n\n（5）第一次出现英文词汇时，在括号中给出中文标注。此后再次出现时，直接使用英文缩写即可。\n\n```Plain Text\nIOC（International Olympic Committee，国际奥林匹克委员会）。这样定义后，便可以直接使用“IOC”了。\n```\n\n（6）专有名词中每个词第一个字母均应大写，非专有名词则不需要大写。\n\n```Plain Text\n“American Association of Physicists in Medicine”（美国医学物理学家协会）是专有名词，需要大写。\n\n“online transaction processing”（在线事务处理）不是专有名词，不应大写。\n```\n## 参考链接\n\n- [中文技术文档的写作规范](https://github.com/ruanyf/document-style-guide)，by 阮一峰\n","slug":"writing-standard/text","published":1,"updated":"2023-10-19T05:16:18.972Z","_id":"cli2pbl1w000g1sn1e0599hrj","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"字间距\"><a href=\"#字间距\" class=\"headerlink\" title=\"字间距\"></a>字间距</h2><p>（1）全角中文字符与半角英文字符之间，应有一个半角空格。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">错误：本文介绍如何快速启动Windows系统。<br><br>正确：本文介绍如何快速启动 Windows 系统。<br></code></pre></td></tr></table></figure>\n\n<p>（2）全角中文字符与半角阿拉伯数字之间，有没有半角空格都可，但必须保证风格统一，不能两种风格混杂。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">正确：2011年5月15日，我订购了5台笔记本电脑与10台平板电脑。<br><br>正确：2011 年 5 月 15 日，我订购了 5 台笔记本电脑与 10 台平板电脑。<br></code></pre></td></tr></table></figure>\n\n<p>半角的百分号，视同阿拉伯数字。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">正确：今年我国经济增长率是6.5%。<br><br>正确：今年我国经济增长率是 6.5%。<br></code></pre></td></tr></table></figure>\n\n<p>（3）英文单位若不翻译，单位前的阿拉伯数字与单位符号之间，应留出适当的空隙。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">例1：一部容量为 16 GB 的智能手机<br><br>例2：1 h = 60 min = 3,600 s<br></code></pre></td></tr></table></figure>\n\n<p>（4）半角英文字符和半角阿拉伯数字，与全角标点符号之间不留空格。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">错误：他的电脑是 MacBook Air 。<br><br>正确：他的电脑是 MacBook Air。<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"句子\"><a href=\"#句子\" class=\"headerlink\" title=\"句子\"></a>句子</h2><p>（1）避免使用长句。</p>\n<p>不包含任何标点符号的单个句子，或者以逗号分隔的句子构件，长度尽量保持在 20 个字以内；20～29 个字的句子，可以接受；30～39 个字的句子，语义必须明确，才能接受；多于 40 个字的句子，任何情况下都不能接受。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">错误：本产品适用于从由一台服务器进行动作控制的单一节点结构到由多台服务器进行动作控制的并行处理程序结构等多种体系结构。<br><br>正确：本产品适用于多种体系结构。无论是由一台服务器（单一节点结构），还是由多台服务器（并行处理结构）进行动作控制，均可以使用本产品。<br></code></pre></td></tr></table></figure>\n\n<p>逗号分割的长句，总长度不应该超过 100 字或者正文的 3 行。</p>\n<p>（2）尽量使用简单句和并列句，避免使用复合句。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">并列句：他昨天生病了，没有参加会议。<br><br>复合句：那个昨天生病的人没有参加会议。<br></code></pre></td></tr></table></figure>\n\n<p>（3）同样一个意思，尽量使用肯定句表达，不使用否定句表达。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">错误：请确认没有接通装置的电源。<br><br>正确：请确认装置的电源已关闭。<br></code></pre></td></tr></table></figure>\n\n<p>（4）避免使用双重否定句。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">错误：没有删除权限的用户，不能删除此文件。<br><br>正确：用户必须拥有删除权限，才能删除此文件。<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"写作风格\"><a href=\"#写作风格\" class=\"headerlink\" title=\"写作风格\"></a>写作风格</h2><p>（1）尽量不使用被动语态，改为使用主动语态。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">错误：假如此软件尚未被安装，<br><br>正确：假如尚未安装这个软件，<br></code></pre></td></tr></table></figure>\n\n<p>（2）不使用非正式的语言风格。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">错误：Lady Gaga 的演唱会真是酷毙了，从没看过这么给力的表演！！！<br><br>正确：无法参加本次活动，我深感遗憾。<br></code></pre></td></tr></table></figure>\n\n<p>（3）不使用冷僻、生造或者文言文的词语，而要使用现代汉语的常用表达方式。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">错误：这是唯二的快速启动的方法。<br><br>正确：这是仅有的两种快速启动的方法。<br></code></pre></td></tr></table></figure>\n\n<p>（4）用对“的”、“地”、“得”。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">她露出了开心的笑容。<br>（形容词＋的＋名词）<br><br>她开心地笑了。<br>（副词＋地＋动词）<br><br>她笑得很开心。<br>（动词＋得＋副词）<br></code></pre></td></tr></table></figure>\n\n<p>（5）使用代词时（比如“其”、“该”、“此”、“这”等词），必须明确指代的内容，保证只有一个含义。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">错误：从管理系统可以监视中继系统和受其直接控制的分配系统。<br><br>正确：从管理系统可以监视两个系统：中继系统和受中继系统直接控制的分配系统。<br></code></pre></td></tr></table></figure>\n\n<p>（6）名词前不要使用过多的形容词。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">错误：此设备的使用必须在接受过本公司举办的正式的设备培训的技师的指导下进行。<br><br>正确：此设备必须在技师的指导下使用，且指导技师必须接受过由本公司举办的正式设备培训。<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"英文处理\"><a href=\"#英文处理\" class=\"headerlink\" title=\"英文处理\"></a>英文处理</h2><p>（1）英文原文如果使用了复数形式，翻译成中文时，应该将其还原为单数形式。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">英文：...information stored in random access memory (RAMs)...<br><br>中文：⋯⋯存储在随机存取存储器（RAM）里的信息⋯⋯<br></code></pre></td></tr></table></figure>\n\n<p>（2）外文缩写可以使用半角圆点(<code>.</code>)表示缩写。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">U.S.A.<br>Apple, Inc.<br></code></pre></td></tr></table></figure>\n\n<p>（3）表示中文时，英文省略号（<code>...</code>）应改为中文省略号（<code>⋯⋯</code>）。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">英文：5 minutes later...<br><br>中文：5 分钟过去了⋯⋯<br></code></pre></td></tr></table></figure>\n\n<p>（4）英文书名或电影名改用中文表达时，双引号应改为书名号。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">英文：He published an article entitled &quot;The Future of the Aviation&quot;.<br><br>中文：他发表了一篇名为《航空业的未来》的文章。<br></code></pre></td></tr></table></figure>\n\n<p>（5）第一次出现英文词汇时，在括号中给出中文标注。此后再次出现时，直接使用英文缩写即可。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">IOC（International Olympic Committee，国际奥林匹克委员会）。这样定义后，便可以直接使用“IOC”了。<br></code></pre></td></tr></table></figure>\n\n<p>（6）专有名词中每个词第一个字母均应大写，非专有名词则不需要大写。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">“American Association of Physicists in Medicine”（美国医学物理学家协会）是专有名词，需要大写。<br><br>“online transaction processing”（在线事务处理）不是专有名词，不应大写。<br></code></pre></td></tr></table></figure>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><ul>\n<li><a href=\"https://github.com/ruanyf/document-style-guide\">中文技术文档的写作规范</a>，by 阮一峰</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"字间距\"><a href=\"#字间距\" class=\"headerlink\" title=\"字间距\"></a>字间距</h2><p>（1）全角中文字符与半角英文字符之间，应有一个半角空格。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">错误：本文介绍如何快速启动Windows系统。<br><br>正确：本文介绍如何快速启动 Windows 系统。<br></code></pre></td></tr></table></figure>\n\n<p>（2）全角中文字符与半角阿拉伯数字之间，有没有半角空格都可，但必须保证风格统一，不能两种风格混杂。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">正确：2011年5月15日，我订购了5台笔记本电脑与10台平板电脑。<br><br>正确：2011 年 5 月 15 日，我订购了 5 台笔记本电脑与 10 台平板电脑。<br></code></pre></td></tr></table></figure>\n\n<p>半角的百分号，视同阿拉伯数字。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">正确：今年我国经济增长率是6.5%。<br><br>正确：今年我国经济增长率是 6.5%。<br></code></pre></td></tr></table></figure>\n\n<p>（3）英文单位若不翻译，单位前的阿拉伯数字与单位符号之间，应留出适当的空隙。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">例1：一部容量为 16 GB 的智能手机<br><br>例2：1 h = 60 min = 3,600 s<br></code></pre></td></tr></table></figure>\n\n<p>（4）半角英文字符和半角阿拉伯数字，与全角标点符号之间不留空格。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">错误：他的电脑是 MacBook Air 。<br><br>正确：他的电脑是 MacBook Air。<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"句子\"><a href=\"#句子\" class=\"headerlink\" title=\"句子\"></a>句子</h2><p>（1）避免使用长句。</p>\n<p>不包含任何标点符号的单个句子，或者以逗号分隔的句子构件，长度尽量保持在 20 个字以内；20～29 个字的句子，可以接受；30～39 个字的句子，语义必须明确，才能接受；多于 40 个字的句子，任何情况下都不能接受。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">错误：本产品适用于从由一台服务器进行动作控制的单一节点结构到由多台服务器进行动作控制的并行处理程序结构等多种体系结构。<br><br>正确：本产品适用于多种体系结构。无论是由一台服务器（单一节点结构），还是由多台服务器（并行处理结构）进行动作控制，均可以使用本产品。<br></code></pre></td></tr></table></figure>\n\n<p>逗号分割的长句，总长度不应该超过 100 字或者正文的 3 行。</p>\n<p>（2）尽量使用简单句和并列句，避免使用复合句。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">并列句：他昨天生病了，没有参加会议。<br><br>复合句：那个昨天生病的人没有参加会议。<br></code></pre></td></tr></table></figure>\n\n<p>（3）同样一个意思，尽量使用肯定句表达，不使用否定句表达。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">错误：请确认没有接通装置的电源。<br><br>正确：请确认装置的电源已关闭。<br></code></pre></td></tr></table></figure>\n\n<p>（4）避免使用双重否定句。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">错误：没有删除权限的用户，不能删除此文件。<br><br>正确：用户必须拥有删除权限，才能删除此文件。<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"写作风格\"><a href=\"#写作风格\" class=\"headerlink\" title=\"写作风格\"></a>写作风格</h2><p>（1）尽量不使用被动语态，改为使用主动语态。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">错误：假如此软件尚未被安装，<br><br>正确：假如尚未安装这个软件，<br></code></pre></td></tr></table></figure>\n\n<p>（2）不使用非正式的语言风格。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">错误：Lady Gaga 的演唱会真是酷毙了，从没看过这么给力的表演！！！<br><br>正确：无法参加本次活动，我深感遗憾。<br></code></pre></td></tr></table></figure>\n\n<p>（3）不使用冷僻、生造或者文言文的词语，而要使用现代汉语的常用表达方式。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">错误：这是唯二的快速启动的方法。<br><br>正确：这是仅有的两种快速启动的方法。<br></code></pre></td></tr></table></figure>\n\n<p>（4）用对“的”、“地”、“得”。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">她露出了开心的笑容。<br>（形容词＋的＋名词）<br><br>她开心地笑了。<br>（副词＋地＋动词）<br><br>她笑得很开心。<br>（动词＋得＋副词）<br></code></pre></td></tr></table></figure>\n\n<p>（5）使用代词时（比如“其”、“该”、“此”、“这”等词），必须明确指代的内容，保证只有一个含义。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">错误：从管理系统可以监视中继系统和受其直接控制的分配系统。<br><br>正确：从管理系统可以监视两个系统：中继系统和受中继系统直接控制的分配系统。<br></code></pre></td></tr></table></figure>\n\n<p>（6）名词前不要使用过多的形容词。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">错误：此设备的使用必须在接受过本公司举办的正式的设备培训的技师的指导下进行。<br><br>正确：此设备必须在技师的指导下使用，且指导技师必须接受过由本公司举办的正式设备培训。<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"英文处理\"><a href=\"#英文处理\" class=\"headerlink\" title=\"英文处理\"></a>英文处理</h2><p>（1）英文原文如果使用了复数形式，翻译成中文时，应该将其还原为单数形式。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">英文：...information stored in random access memory (RAMs)...<br><br>中文：⋯⋯存储在随机存取存储器（RAM）里的信息⋯⋯<br></code></pre></td></tr></table></figure>\n\n<p>（2）外文缩写可以使用半角圆点(<code>.</code>)表示缩写。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">U.S.A.<br>Apple, Inc.<br></code></pre></td></tr></table></figure>\n\n<p>（3）表示中文时，英文省略号（<code>...</code>）应改为中文省略号（<code>⋯⋯</code>）。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">英文：5 minutes later...<br><br>中文：5 分钟过去了⋯⋯<br></code></pre></td></tr></table></figure>\n\n<p>（4）英文书名或电影名改用中文表达时，双引号应改为书名号。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">英文：He published an article entitled &quot;The Future of the Aviation&quot;.<br><br>中文：他发表了一篇名为《航空业的未来》的文章。<br></code></pre></td></tr></table></figure>\n\n<p>（5）第一次出现英文词汇时，在括号中给出中文标注。此后再次出现时，直接使用英文缩写即可。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">IOC（International Olympic Committee，国际奥林匹克委员会）。这样定义后，便可以直接使用“IOC”了。<br></code></pre></td></tr></table></figure>\n\n<p>（6）专有名词中每个词第一个字母均应大写，非专有名词则不需要大写。</p>\n<figure class=\"highlight plaintext\"><figcaption><span>Text</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs Plain\">“American Association of Physicists in Medicine”（美国医学物理学家协会）是专有名词，需要大写。<br><br>“online transaction processing”（在线事务处理）不是专有名词，不应大写。<br></code></pre></td></tr></table></figure>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><ul>\n<li><a href=\"https://github.com/ruanyf/document-style-guide\">中文技术文档的写作规范</a>，by 阮一峰</li>\n</ul>\n"},{"title":"标题规范","date":"2023-02-23T06:46:24.000Z","_content":"\n## 层级\n\n标题分为四级。\n\n- 一级标题：文章的标题\n- 二级标题：文章主要部分的大标题\n- 三级标题：二级标题下面一级的小标题\n- 四级标题：三级标题下面某一方面的小标题\n\n下面是示例。\n\n```markdown\n# 一级标题\n\n## 二级标题\n\n### 三级标题\n\n#### 四级标题\n```\n\n## 原则\n\n（1）一级标题下，不能直接出现三级标题。\n\n示例：下面的文章结构，缺少二级标题。\n\n```markdown\n# 一级标题\n\n### 三级标题\n```\n\n（2）标题要避免孤立编号（即同级标题只有一个）。\n\n示例：下面的文章结构，`二级标题 A`只包含一个三级标题，完全可以省略`三级标题 A`。\n\n```markdown\n## 二级标题 A\n\n### 三级标题 A\n\n## 二级标题 B\n```\n\n（3）下级标题不重复上一级标题的名字。\n\n示例：下面的文章结构，二级标题与下属的三级标题同名，建议避免。\n\n```markdown\n## 概述\n\n### 概述\n```\n\n（4）谨慎使用四级标题，尽量避免出现，保持层级的简单，防止出现过于复杂的章节。\n\n如果三级标题下有并列性的内容，建议只使用项目列表（Item list）。\n\n示例：下面的结构二要好于结构一。结构一适用的场景，主要是较长篇幅的内容。\n\n```markdown\n结构一\n\n### 三级标题\n\n#### 四级标题 A\n\n#### 四级标题 B\n\n#### 四级标题 C\n\n结构二\n\n### 三级标题\n\n**（1）A**\n\n**（2）B**\n\n**（3）C**\n```\n\n\n## 参考链接\n\n- [中文技术文档的写作规范](https://github.com/ruanyf/document-style-guide)，by 阮一峰","source":"_posts/writing-standard/title.md","raw":"---\ntitle: 标题规范\ndate: 2023-02-23 14:46:24\ncategories:\n- 写作标准\ntags:\n- 写作\n- 标题\n- 规范\n---\n\n## 层级\n\n标题分为四级。\n\n- 一级标题：文章的标题\n- 二级标题：文章主要部分的大标题\n- 三级标题：二级标题下面一级的小标题\n- 四级标题：三级标题下面某一方面的小标题\n\n下面是示例。\n\n```markdown\n# 一级标题\n\n## 二级标题\n\n### 三级标题\n\n#### 四级标题\n```\n\n## 原则\n\n（1）一级标题下，不能直接出现三级标题。\n\n示例：下面的文章结构，缺少二级标题。\n\n```markdown\n# 一级标题\n\n### 三级标题\n```\n\n（2）标题要避免孤立编号（即同级标题只有一个）。\n\n示例：下面的文章结构，`二级标题 A`只包含一个三级标题，完全可以省略`三级标题 A`。\n\n```markdown\n## 二级标题 A\n\n### 三级标题 A\n\n## 二级标题 B\n```\n\n（3）下级标题不重复上一级标题的名字。\n\n示例：下面的文章结构，二级标题与下属的三级标题同名，建议避免。\n\n```markdown\n## 概述\n\n### 概述\n```\n\n（4）谨慎使用四级标题，尽量避免出现，保持层级的简单，防止出现过于复杂的章节。\n\n如果三级标题下有并列性的内容，建议只使用项目列表（Item list）。\n\n示例：下面的结构二要好于结构一。结构一适用的场景，主要是较长篇幅的内容。\n\n```markdown\n结构一\n\n### 三级标题\n\n#### 四级标题 A\n\n#### 四级标题 B\n\n#### 四级标题 C\n\n结构二\n\n### 三级标题\n\n**（1）A**\n\n**（2）B**\n\n**（3）C**\n```\n\n\n## 参考链接\n\n- [中文技术文档的写作规范](https://github.com/ruanyf/document-style-guide)，by 阮一峰","slug":"writing-standard/title","published":1,"updated":"2023-10-19T05:16:18.973Z","_id":"cli2pbl1x000k1sn1c1wa9xkk","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"层级\"><a href=\"#层级\" class=\"headerlink\" title=\"层级\"></a>层级</h2><p>标题分为四级。</p>\n<ul>\n<li>一级标题：文章的标题</li>\n<li>二级标题：文章主要部分的大标题</li>\n<li>三级标题：二级标题下面一级的小标题</li>\n<li>四级标题：三级标题下面某一方面的小标题</li>\n</ul>\n<p>下面是示例。</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs markdown\"><span class=\"hljs-section\"># 一级标题</span><br><br><span class=\"hljs-section\">## 二级标题</span><br><br><span class=\"hljs-section\">### 三级标题</span><br><br><span class=\"hljs-section\">#### 四级标题</span><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"原则\"><a href=\"#原则\" class=\"headerlink\" title=\"原则\"></a>原则</h2><p>（1）一级标题下，不能直接出现三级标题。</p>\n<p>示例：下面的文章结构，缺少二级标题。</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs markdown\"><span class=\"hljs-section\"># 一级标题</span><br><br><span class=\"hljs-section\">### 三级标题</span><br></code></pre></td></tr></table></figure>\n\n<p>（2）标题要避免孤立编号（即同级标题只有一个）。</p>\n<p>示例：下面的文章结构，<code>二级标题 A</code>只包含一个三级标题，完全可以省略<code>三级标题 A</code>。</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs markdown\"><span class=\"hljs-section\">## 二级标题 A</span><br><br><span class=\"hljs-section\">### 三级标题 A</span><br><br><span class=\"hljs-section\">## 二级标题 B</span><br></code></pre></td></tr></table></figure>\n\n<p>（3）下级标题不重复上一级标题的名字。</p>\n<p>示例：下面的文章结构，二级标题与下属的三级标题同名，建议避免。</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs markdown\"><span class=\"hljs-section\">## 概述</span><br><br><span class=\"hljs-section\">### 概述</span><br></code></pre></td></tr></table></figure>\n\n<p>（4）谨慎使用四级标题，尽量避免出现，保持层级的简单，防止出现过于复杂的章节。</p>\n<p>如果三级标题下有并列性的内容，建议只使用项目列表（Item list）。</p>\n<p>示例：下面的结构二要好于结构一。结构一适用的场景，主要是较长篇幅的内容。</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs markdown\">结构一<br><br><span class=\"hljs-section\">### 三级标题</span><br><br><span class=\"hljs-section\">#### 四级标题 A</span><br><br><span class=\"hljs-section\">#### 四级标题 B</span><br><br><span class=\"hljs-section\">#### 四级标题 C</span><br><br>结构二<br><br><span class=\"hljs-section\">### 三级标题</span><br><br><span class=\"hljs-strong\">**（1）A**</span><br><br><span class=\"hljs-strong\">**（2）B**</span><br><br><span class=\"hljs-strong\">**（3）C**</span><br></code></pre></td></tr></table></figure>\n\n\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><ul>\n<li><a href=\"https://github.com/ruanyf/document-style-guide\">中文技术文档的写作规范</a>，by 阮一峰</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"层级\"><a href=\"#层级\" class=\"headerlink\" title=\"层级\"></a>层级</h2><p>标题分为四级。</p>\n<ul>\n<li>一级标题：文章的标题</li>\n<li>二级标题：文章主要部分的大标题</li>\n<li>三级标题：二级标题下面一级的小标题</li>\n<li>四级标题：三级标题下面某一方面的小标题</li>\n</ul>\n<p>下面是示例。</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs markdown\"><span class=\"hljs-section\"># 一级标题</span><br><br><span class=\"hljs-section\">## 二级标题</span><br><br><span class=\"hljs-section\">### 三级标题</span><br><br><span class=\"hljs-section\">#### 四级标题</span><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"原则\"><a href=\"#原则\" class=\"headerlink\" title=\"原则\"></a>原则</h2><p>（1）一级标题下，不能直接出现三级标题。</p>\n<p>示例：下面的文章结构，缺少二级标题。</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs markdown\"><span class=\"hljs-section\"># 一级标题</span><br><br><span class=\"hljs-section\">### 三级标题</span><br></code></pre></td></tr></table></figure>\n\n<p>（2）标题要避免孤立编号（即同级标题只有一个）。</p>\n<p>示例：下面的文章结构，<code>二级标题 A</code>只包含一个三级标题，完全可以省略<code>三级标题 A</code>。</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs markdown\"><span class=\"hljs-section\">## 二级标题 A</span><br><br><span class=\"hljs-section\">### 三级标题 A</span><br><br><span class=\"hljs-section\">## 二级标题 B</span><br></code></pre></td></tr></table></figure>\n\n<p>（3）下级标题不重复上一级标题的名字。</p>\n<p>示例：下面的文章结构，二级标题与下属的三级标题同名，建议避免。</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs markdown\"><span class=\"hljs-section\">## 概述</span><br><br><span class=\"hljs-section\">### 概述</span><br></code></pre></td></tr></table></figure>\n\n<p>（4）谨慎使用四级标题，尽量避免出现，保持层级的简单，防止出现过于复杂的章节。</p>\n<p>如果三级标题下有并列性的内容，建议只使用项目列表（Item list）。</p>\n<p>示例：下面的结构二要好于结构一。结构一适用的场景，主要是较长篇幅的内容。</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs markdown\">结构一<br><br><span class=\"hljs-section\">### 三级标题</span><br><br><span class=\"hljs-section\">#### 四级标题 A</span><br><br><span class=\"hljs-section\">#### 四级标题 B</span><br><br><span class=\"hljs-section\">#### 四级标题 C</span><br><br>结构二<br><br><span class=\"hljs-section\">### 三级标题</span><br><br><span class=\"hljs-strong\">**（1）A**</span><br><br><span class=\"hljs-strong\">**（2）B**</span><br><br><span class=\"hljs-strong\">**（3）C**</span><br></code></pre></td></tr></table></figure>\n\n\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><ul>\n<li><a href=\"https://github.com/ruanyf/document-style-guide\">中文技术文档的写作规范</a>，by 阮一峰</li>\n</ul>\n"},{"title":"01 入门","date":"2023-10-19T05:32:12.000Z","_content":"\n本章介绍 `Go` 语言的基础组件。本章提供了足够的信息和示例程序，希望可以帮你们尽快入门，写出有用的程序。本章和之后章节的示例程序都针对你可能遇到的现实案例。先了解几个 `Go` 程序涉及的主题从简单的文件处理、图像处理到互联网客户端和服务端并发。当然第一章不会解释细枝末节，但用这些程序来学习一门新语言还是很有效的。\n\n学习一门新语言时，会有一种自然的倾向，按照自己熟悉的语言套路写新语言程序，学习 `Go` 语言的过程中，请警惕这种想法，尽量别这么做。我们会演示怎么写好 `Go` 语言程序，所以请用本书的代码作为你写程序时的指南。\n\n## Hello World\n\n我们现在以传统的 ”Hello World“ 来开始吧，这个例子首次出现于 1978 年出版的 《The C Programming Language》。`C` 语言是直接影响 `Go` 语言设计的语言之一，这个例子体现了 `Go` 语言的一些核心理念。\n\n使用 `go mod` 模式，我们本书的基础目录为 `github.com/hanzhuoxian/study/go/gopl` ，在当前目录下执行  `go mod init github.com/hanzhuoxian/study/go/gopl`\n\n*github.com/hanzhuoxian/study/go/gopl/ch01/helloworld/helloword.go*\n\n```go\n// 声明包\n\npackage main\n\n// 导入标准I/O包\nimport \"fmt\"\n\n// 程序的入口方法\nfunc main() {\n\tfmt.Println(\"Hello，世界\")\n}\n\n```\n\n`Go` 语言是一门编译型语言，`Go` 语言的工具链将源代码及其依赖转化成计算机的机器指令。`Go` 语言提供的工具都通过单独的命令 `go` 调用，`go` 有一系列子命令。最简单的一个子命令就是 `run` 。这个命令编译一个或多个以 `.go` 结尾的源文件、链接库文件，并运行最终生成的可执行文件（本书使用 $ 表示命令提示符）。\n\n```bash\n$ go run helloworld.go\n```\n\n毫无意外，这个命令会输出\n```bash\nHello，世界\n```\n\n`Go` 语言原生支持 Unicode，它可以处理全世界任何语言的文本。\n如果不只是一次性实验，你肯定希望能编译这个程序，保存编译结果以备将来之用。可以用 `build` 子命令。\n\n```bash\n$ go build helloworld.go\n```\n\n这个命令生成一个名为 `helloworld` 的可执行的二进制文件。之后你可以随时运行它，不需任何处理。\n\n```\n$ ./helloworld\nHello，世界\n```\n\n本书中所有示例代码上都有一行标记，利用这些标记可以从 `github.com` 代码仓库中获取代码\n\n```\ngithub.com/hanzhuoxian/study/go/gopl/ch01/helloworld/helloword.go\n```\n\n执行 `go get github.com/hanzhuoxian/study/go/gopl/ch01/helloworld/helloword.go` 命令，就会从网上获取对应的代码，并放到对应的目录中，需要先安装 `Git` 或者 `Hg` 之类的版本管理工具，并将对应的命令添加到 `PATH` 环境变量中。序言已经提及，需要先设置好 `GOPATH` 环境变量。\n\n来讨论下程序本身。`Go` 语言代码通过包（package）组织，包类似于其他语言里的库（libraries）或者模块（modules）。一个包由位于单个目录下的一个或多个 `.go` 源代码文件组成，目录定义包的作用。每个源文件都以一条 `package` 语句声明开始，这个例子里就是 `package main` ,表示该文件属于那个包，紧跟着一系列导入（`import`）的包，之后是存储在这个文件里的程序语句。\n\n`Go` 标准库提供了 100 多个包，以支持常见功能，如输入、输出、排序以及文本处理。比如 `fmt` 包就含有格式化输出、接受输入的函数。`Println` 是其中一个基础函数，可以打印以逗号间隔的一个或多个值，并在最后添加一个换行符，从而输出一整行。\n\n`main` 包比较特殊。它定义了一个独立可执行的程序，而不是一个库，在 `main` 包里的 `main` 函数也很特殊，它是整个程序执行时的入口。`main` 函数所做的事情就是程序做的，当然了，`main` 函数一般调用其他包里的函数完成很多工作（如 `fmt.Println`）。\n\n必须告诉编译器源文件需要哪些包，这就是跟随在 `package` 声明后面的 `import` 扮演的角色。hello world 例子只用到了一个包，大多数程序需要导入多个包。\n\n必须恰当导入需要的包，缺少了必要的包或者导入了不需要的包，程序都无法编译通过。这项严格要求避免了程序开发过程中引入未使用的包。\n\n`import` 声明必须跟在文件的 `package` 声明之后。随后，则是组成程序的函数、变量、常量、类型的声明语句（分别由关键字 `func` 、`var` 、`const` 、`type` 定义）。这些内容的声明顺序并不重要。这个例子的程序已经尽可能短了，只声明了一个函数，其中只调用了一个其他函数。为了节省篇幅，有些时候示例程序会省略 `package` 和 `import`  声明，但是这些声明在源代码里有，并且必须得有才能编译。\n\n一个函数的声明由 `func` 关键字、函数名、参数列表、返回值列表（这个例子里的 `main` 函数参数列表和返回值都是空的）以及包含在大括号里的函数体组成。第五章进一步考察函数。\n\n`Go` 语言不需要在语句或者声明的末尾添加分号，除非一行上有多条语句。实际上，编译器会主动把特定符号后的换行符转换为分号，因此换行符添加的位置会影响 `Go` 代码的正确解析（译注：比如行末是标识符、整数、浮点数、虚数、字符或字符串文字、关键字 `break`、`continue`、`fallthrough`或 `return` 中的一个、运算符和分隔符 `++`、`--`、`)`、`]` 或 `}` 中的一个）。举个例子，函数的左括号 `{` 必须和 `func` 函数声明在同一行上，且位于末尾，不能独占一行，而在表达式 `x+y` 中，可在 `+` 后换行，不能在 `+` 前换行（译注：以+结尾的话不会被插入分号分隔符，但是以 x 结尾的话则会被分号分隔符，从而导致编译错误）。\n\n`Go` 语言在代码格式上采取了很强硬的态度。`gofmt`工具把代码格式化为标准格式（译注：这个格式化工具没有任何可以调整代码格式的参数，`Go` 语言就是这么任性），并且 `go` 工具中的 `fmt` 子命令会对指定包，否则默认为当前目录中所有go 源文件应用 `gofmt` 命令。本书中的所有代码都被 gofmt 过。你也应该养成格式化自己的代码的习惯。以法令方式规定标准的代码格式可以避免无尽的无意义的琐碎争执（译注：也导致了 `Go` 语言的 TIOBE 排名较低，因为缺少撕逼的话题）。更重要的是，这样可以做多种自动源码转换，如果放任 `Go` 语言代码格式，这些转换就不大可能了。\n\n很多文本编辑器都可以配置为保存文件时自动执行 `gofmt`，这样你的源代码总会被恰当地格式化。还有个相关的工具：`goimports`，可以根据代码需要，自动地添加或删除 `import` 声明。这个工具并没有包含在标准的分发包中，可以用下面的命令安装：\n\n```bash\n$ go install golang.org/x/tools/cmd/goimports@latest\n```\n\n对于大多数用户来说，下载、编译包、运行测试用例、查看 `Go` 语言的文档等等常用功能都可以用 go 的工具完成 10.7 详细介绍这些知识。","source":"_posts/gopl/chapter01.md","raw":"---\ntitle: 01 入门\ndate: 2023-10-19 13:32:12\ncategories:\n- Go 语言圣经\ntags:\n- golang\n- gopl\n---\n\n本章介绍 `Go` 语言的基础组件。本章提供了足够的信息和示例程序，希望可以帮你们尽快入门，写出有用的程序。本章和之后章节的示例程序都针对你可能遇到的现实案例。先了解几个 `Go` 程序涉及的主题从简单的文件处理、图像处理到互联网客户端和服务端并发。当然第一章不会解释细枝末节，但用这些程序来学习一门新语言还是很有效的。\n\n学习一门新语言时，会有一种自然的倾向，按照自己熟悉的语言套路写新语言程序，学习 `Go` 语言的过程中，请警惕这种想法，尽量别这么做。我们会演示怎么写好 `Go` 语言程序，所以请用本书的代码作为你写程序时的指南。\n\n## Hello World\n\n我们现在以传统的 ”Hello World“ 来开始吧，这个例子首次出现于 1978 年出版的 《The C Programming Language》。`C` 语言是直接影响 `Go` 语言设计的语言之一，这个例子体现了 `Go` 语言的一些核心理念。\n\n使用 `go mod` 模式，我们本书的基础目录为 `github.com/hanzhuoxian/study/go/gopl` ，在当前目录下执行  `go mod init github.com/hanzhuoxian/study/go/gopl`\n\n*github.com/hanzhuoxian/study/go/gopl/ch01/helloworld/helloword.go*\n\n```go\n// 声明包\n\npackage main\n\n// 导入标准I/O包\nimport \"fmt\"\n\n// 程序的入口方法\nfunc main() {\n\tfmt.Println(\"Hello，世界\")\n}\n\n```\n\n`Go` 语言是一门编译型语言，`Go` 语言的工具链将源代码及其依赖转化成计算机的机器指令。`Go` 语言提供的工具都通过单独的命令 `go` 调用，`go` 有一系列子命令。最简单的一个子命令就是 `run` 。这个命令编译一个或多个以 `.go` 结尾的源文件、链接库文件，并运行最终生成的可执行文件（本书使用 $ 表示命令提示符）。\n\n```bash\n$ go run helloworld.go\n```\n\n毫无意外，这个命令会输出\n```bash\nHello，世界\n```\n\n`Go` 语言原生支持 Unicode，它可以处理全世界任何语言的文本。\n如果不只是一次性实验，你肯定希望能编译这个程序，保存编译结果以备将来之用。可以用 `build` 子命令。\n\n```bash\n$ go build helloworld.go\n```\n\n这个命令生成一个名为 `helloworld` 的可执行的二进制文件。之后你可以随时运行它，不需任何处理。\n\n```\n$ ./helloworld\nHello，世界\n```\n\n本书中所有示例代码上都有一行标记，利用这些标记可以从 `github.com` 代码仓库中获取代码\n\n```\ngithub.com/hanzhuoxian/study/go/gopl/ch01/helloworld/helloword.go\n```\n\n执行 `go get github.com/hanzhuoxian/study/go/gopl/ch01/helloworld/helloword.go` 命令，就会从网上获取对应的代码，并放到对应的目录中，需要先安装 `Git` 或者 `Hg` 之类的版本管理工具，并将对应的命令添加到 `PATH` 环境变量中。序言已经提及，需要先设置好 `GOPATH` 环境变量。\n\n来讨论下程序本身。`Go` 语言代码通过包（package）组织，包类似于其他语言里的库（libraries）或者模块（modules）。一个包由位于单个目录下的一个或多个 `.go` 源代码文件组成，目录定义包的作用。每个源文件都以一条 `package` 语句声明开始，这个例子里就是 `package main` ,表示该文件属于那个包，紧跟着一系列导入（`import`）的包，之后是存储在这个文件里的程序语句。\n\n`Go` 标准库提供了 100 多个包，以支持常见功能，如输入、输出、排序以及文本处理。比如 `fmt` 包就含有格式化输出、接受输入的函数。`Println` 是其中一个基础函数，可以打印以逗号间隔的一个或多个值，并在最后添加一个换行符，从而输出一整行。\n\n`main` 包比较特殊。它定义了一个独立可执行的程序，而不是一个库，在 `main` 包里的 `main` 函数也很特殊，它是整个程序执行时的入口。`main` 函数所做的事情就是程序做的，当然了，`main` 函数一般调用其他包里的函数完成很多工作（如 `fmt.Println`）。\n\n必须告诉编译器源文件需要哪些包，这就是跟随在 `package` 声明后面的 `import` 扮演的角色。hello world 例子只用到了一个包，大多数程序需要导入多个包。\n\n必须恰当导入需要的包，缺少了必要的包或者导入了不需要的包，程序都无法编译通过。这项严格要求避免了程序开发过程中引入未使用的包。\n\n`import` 声明必须跟在文件的 `package` 声明之后。随后，则是组成程序的函数、变量、常量、类型的声明语句（分别由关键字 `func` 、`var` 、`const` 、`type` 定义）。这些内容的声明顺序并不重要。这个例子的程序已经尽可能短了，只声明了一个函数，其中只调用了一个其他函数。为了节省篇幅，有些时候示例程序会省略 `package` 和 `import`  声明，但是这些声明在源代码里有，并且必须得有才能编译。\n\n一个函数的声明由 `func` 关键字、函数名、参数列表、返回值列表（这个例子里的 `main` 函数参数列表和返回值都是空的）以及包含在大括号里的函数体组成。第五章进一步考察函数。\n\n`Go` 语言不需要在语句或者声明的末尾添加分号，除非一行上有多条语句。实际上，编译器会主动把特定符号后的换行符转换为分号，因此换行符添加的位置会影响 `Go` 代码的正确解析（译注：比如行末是标识符、整数、浮点数、虚数、字符或字符串文字、关键字 `break`、`continue`、`fallthrough`或 `return` 中的一个、运算符和分隔符 `++`、`--`、`)`、`]` 或 `}` 中的一个）。举个例子，函数的左括号 `{` 必须和 `func` 函数声明在同一行上，且位于末尾，不能独占一行，而在表达式 `x+y` 中，可在 `+` 后换行，不能在 `+` 前换行（译注：以+结尾的话不会被插入分号分隔符，但是以 x 结尾的话则会被分号分隔符，从而导致编译错误）。\n\n`Go` 语言在代码格式上采取了很强硬的态度。`gofmt`工具把代码格式化为标准格式（译注：这个格式化工具没有任何可以调整代码格式的参数，`Go` 语言就是这么任性），并且 `go` 工具中的 `fmt` 子命令会对指定包，否则默认为当前目录中所有go 源文件应用 `gofmt` 命令。本书中的所有代码都被 gofmt 过。你也应该养成格式化自己的代码的习惯。以法令方式规定标准的代码格式可以避免无尽的无意义的琐碎争执（译注：也导致了 `Go` 语言的 TIOBE 排名较低，因为缺少撕逼的话题）。更重要的是，这样可以做多种自动源码转换，如果放任 `Go` 语言代码格式，这些转换就不大可能了。\n\n很多文本编辑器都可以配置为保存文件时自动执行 `gofmt`，这样你的源代码总会被恰当地格式化。还有个相关的工具：`goimports`，可以根据代码需要，自动地添加或删除 `import` 声明。这个工具并没有包含在标准的分发包中，可以用下面的命令安装：\n\n```bash\n$ go install golang.org/x/tools/cmd/goimports@latest\n```\n\n对于大多数用户来说，下载、编译包、运行测试用例、查看 `Go` 语言的文档等等常用功能都可以用 go 的工具完成 10.7 详细介绍这些知识。","slug":"gopl/chapter01","published":1,"updated":"2023-10-19T14:57:38.482Z","_id":"clnxapgrt0000j8vaef2cgmt4","comments":1,"layout":"post","photos":[],"link":"","content":"<p>本章介绍 <code>Go</code> 语言的基础组件。本章提供了足够的信息和示例程序，希望可以帮你们尽快入门，写出有用的程序。本章和之后章节的示例程序都针对你可能遇到的现实案例。先了解几个 <code>Go</code> 程序涉及的主题从简单的文件处理、图像处理到互联网客户端和服务端并发。当然第一章不会解释细枝末节，但用这些程序来学习一门新语言还是很有效的。</p>\n<p>学习一门新语言时，会有一种自然的倾向，按照自己熟悉的语言套路写新语言程序，学习 <code>Go</code> 语言的过程中，请警惕这种想法，尽量别这么做。我们会演示怎么写好 <code>Go</code> 语言程序，所以请用本书的代码作为你写程序时的指南。</p>\n<h2 id=\"Hello-World\"><a href=\"#Hello-World\" class=\"headerlink\" title=\"Hello World\"></a>Hello World</h2><p>我们现在以传统的 ”Hello World“ 来开始吧，这个例子首次出现于 1978 年出版的 《The C Programming Language》。<code>C</code> 语言是直接影响 <code>Go</code> 语言设计的语言之一，这个例子体现了 <code>Go</code> 语言的一些核心理念。</p>\n<p>使用 <code>go mod</code> 模式，我们本书的基础目录为 <code>github.com/hanzhuoxian/study/go/gopl</code> ，在当前目录下执行  <code>go mod init github.com/hanzhuoxian/study/go/gopl</code></p>\n<p><em>github.com&#x2F;hanzhuoxian&#x2F;study&#x2F;go&#x2F;gopl&#x2F;ch01&#x2F;helloworld&#x2F;helloword.go</em></p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs go\"><span class=\"hljs-comment\">// 声明包</span><br><br><span class=\"hljs-keyword\">package</span> main<br><br><span class=\"hljs-comment\">// 导入标准I/O包</span><br><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&quot;fmt&quot;</span><br><br><span class=\"hljs-comment\">// 程序的入口方法</span><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span></span> &#123;<br>\tfmt.Println(<span class=\"hljs-string\">&quot;Hello，世界&quot;</span>)<br>&#125;<br><br></code></pre></td></tr></table></figure>\n\n<p><code>Go</code> 语言是一门编译型语言，<code>Go</code> 语言的工具链将源代码及其依赖转化成计算机的机器指令。<code>Go</code> 语言提供的工具都通过单独的命令 <code>go</code> 调用，<code>go</code> 有一系列子命令。最简单的一个子命令就是 <code>run</code> 。这个命令编译一个或多个以 <code>.go</code> 结尾的源文件、链接库文件，并运行最终生成的可执行文件（本书使用 $ 表示命令提示符）。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ go run helloworld.go<br></code></pre></td></tr></table></figure>\n\n<p>毫无意外，这个命令会输出</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">Hello，世界<br></code></pre></td></tr></table></figure>\n\n<p><code>Go</code> 语言原生支持 Unicode，它可以处理全世界任何语言的文本。<br>如果不只是一次性实验，你肯定希望能编译这个程序，保存编译结果以备将来之用。可以用 <code>build</code> 子命令。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ go build helloworld.go<br></code></pre></td></tr></table></figure>\n\n<p>这个命令生成一个名为 <code>helloworld</code> 的可执行的二进制文件。之后你可以随时运行它，不需任何处理。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\">$ </span><span class=\"language-bash\">./helloworld</span><br>Hello，世界<br></code></pre></td></tr></table></figure>\n\n<p>本书中所有示例代码上都有一行标记，利用这些标记可以从 <code>github.com</code> 代码仓库中获取代码</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">github.com<span class=\"hljs-regexp\">/hanzhuoxian/</span>study<span class=\"hljs-regexp\">/go/g</span>opl<span class=\"hljs-regexp\">/ch01/</span>helloworld/helloword.go<br></code></pre></td></tr></table></figure>\n\n<p>执行 <code>go get github.com/hanzhuoxian/study/go/gopl/ch01/helloworld/helloword.go</code> 命令，就会从网上获取对应的代码，并放到对应的目录中，需要先安装 <code>Git</code> 或者 <code>Hg</code> 之类的版本管理工具，并将对应的命令添加到 <code>PATH</code> 环境变量中。序言已经提及，需要先设置好 <code>GOPATH</code> 环境变量。</p>\n<p>来讨论下程序本身。<code>Go</code> 语言代码通过包（package）组织，包类似于其他语言里的库（libraries）或者模块（modules）。一个包由位于单个目录下的一个或多个 <code>.go</code> 源代码文件组成，目录定义包的作用。每个源文件都以一条 <code>package</code> 语句声明开始，这个例子里就是 <code>package main</code> ,表示该文件属于那个包，紧跟着一系列导入（<code>import</code>）的包，之后是存储在这个文件里的程序语句。</p>\n<p><code>Go</code> 标准库提供了 100 多个包，以支持常见功能，如输入、输出、排序以及文本处理。比如 <code>fmt</code> 包就含有格式化输出、接受输入的函数。<code>Println</code> 是其中一个基础函数，可以打印以逗号间隔的一个或多个值，并在最后添加一个换行符，从而输出一整行。</p>\n<p><code>main</code> 包比较特殊。它定义了一个独立可执行的程序，而不是一个库，在 <code>main</code> 包里的 <code>main</code> 函数也很特殊，它是整个程序执行时的入口。<code>main</code> 函数所做的事情就是程序做的，当然了，<code>main</code> 函数一般调用其他包里的函数完成很多工作（如 <code>fmt.Println</code>）。</p>\n<p>必须告诉编译器源文件需要哪些包，这就是跟随在 <code>package</code> 声明后面的 <code>import</code> 扮演的角色。hello world 例子只用到了一个包，大多数程序需要导入多个包。</p>\n<p>必须恰当导入需要的包，缺少了必要的包或者导入了不需要的包，程序都无法编译通过。这项严格要求避免了程序开发过程中引入未使用的包。</p>\n<p><code>import</code> 声明必须跟在文件的 <code>package</code> 声明之后。随后，则是组成程序的函数、变量、常量、类型的声明语句（分别由关键字 <code>func</code> 、<code>var</code> 、<code>const</code> 、<code>type</code> 定义）。这些内容的声明顺序并不重要。这个例子的程序已经尽可能短了，只声明了一个函数，其中只调用了一个其他函数。为了节省篇幅，有些时候示例程序会省略 <code>package</code> 和 <code>import</code>  声明，但是这些声明在源代码里有，并且必须得有才能编译。</p>\n<p>一个函数的声明由 <code>func</code> 关键字、函数名、参数列表、返回值列表（这个例子里的 <code>main</code> 函数参数列表和返回值都是空的）以及包含在大括号里的函数体组成。第五章进一步考察函数。</p>\n<p><code>Go</code> 语言不需要在语句或者声明的末尾添加分号，除非一行上有多条语句。实际上，编译器会主动把特定符号后的换行符转换为分号，因此换行符添加的位置会影响 <code>Go</code> 代码的正确解析（译注：比如行末是标识符、整数、浮点数、虚数、字符或字符串文字、关键字 <code>break</code>、<code>continue</code>、<code>fallthrough</code>或 <code>return</code> 中的一个、运算符和分隔符 <code>++</code>、<code>--</code>、<code>)</code>、<code>]</code> 或 <code>&#125;</code> 中的一个）。举个例子，函数的左括号 <code>&#123;</code> 必须和 <code>func</code> 函数声明在同一行上，且位于末尾，不能独占一行，而在表达式 <code>x+y</code> 中，可在 <code>+</code> 后换行，不能在 <code>+</code> 前换行（译注：以+结尾的话不会被插入分号分隔符，但是以 x 结尾的话则会被分号分隔符，从而导致编译错误）。</p>\n<p><code>Go</code> 语言在代码格式上采取了很强硬的态度。<code>gofmt</code>工具把代码格式化为标准格式（译注：这个格式化工具没有任何可以调整代码格式的参数，<code>Go</code> 语言就是这么任性），并且 <code>go</code> 工具中的 <code>fmt</code> 子命令会对指定包，否则默认为当前目录中所有go 源文件应用 <code>gofmt</code> 命令。本书中的所有代码都被 gofmt 过。你也应该养成格式化自己的代码的习惯。以法令方式规定标准的代码格式可以避免无尽的无意义的琐碎争执（译注：也导致了 <code>Go</code> 语言的 TIOBE 排名较低，因为缺少撕逼的话题）。更重要的是，这样可以做多种自动源码转换，如果放任 <code>Go</code> 语言代码格式，这些转换就不大可能了。</p>\n<p>很多文本编辑器都可以配置为保存文件时自动执行 <code>gofmt</code>，这样你的源代码总会被恰当地格式化。还有个相关的工具：<code>goimports</code>，可以根据代码需要，自动地添加或删除 <code>import</code> 声明。这个工具并没有包含在标准的分发包中，可以用下面的命令安装：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ go install golang.org/x/tools/cmd/goimports@latest<br></code></pre></td></tr></table></figure>\n\n<p>对于大多数用户来说，下载、编译包、运行测试用例、查看 <code>Go</code> 语言的文档等等常用功能都可以用 go 的工具完成 10.7 详细介绍这些知识。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>本章介绍 <code>Go</code> 语言的基础组件。本章提供了足够的信息和示例程序，希望可以帮你们尽快入门，写出有用的程序。本章和之后章节的示例程序都针对你可能遇到的现实案例。先了解几个 <code>Go</code> 程序涉及的主题从简单的文件处理、图像处理到互联网客户端和服务端并发。当然第一章不会解释细枝末节，但用这些程序来学习一门新语言还是很有效的。</p>\n<p>学习一门新语言时，会有一种自然的倾向，按照自己熟悉的语言套路写新语言程序，学习 <code>Go</code> 语言的过程中，请警惕这种想法，尽量别这么做。我们会演示怎么写好 <code>Go</code> 语言程序，所以请用本书的代码作为你写程序时的指南。</p>\n<h2 id=\"Hello-World\"><a href=\"#Hello-World\" class=\"headerlink\" title=\"Hello World\"></a>Hello World</h2><p>我们现在以传统的 ”Hello World“ 来开始吧，这个例子首次出现于 1978 年出版的 《The C Programming Language》。<code>C</code> 语言是直接影响 <code>Go</code> 语言设计的语言之一，这个例子体现了 <code>Go</code> 语言的一些核心理念。</p>\n<p>使用 <code>go mod</code> 模式，我们本书的基础目录为 <code>github.com/hanzhuoxian/study/go/gopl</code> ，在当前目录下执行  <code>go mod init github.com/hanzhuoxian/study/go/gopl</code></p>\n<p><em>github.com&#x2F;hanzhuoxian&#x2F;study&#x2F;go&#x2F;gopl&#x2F;ch01&#x2F;helloworld&#x2F;helloword.go</em></p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs go\"><span class=\"hljs-comment\">// 声明包</span><br><br><span class=\"hljs-keyword\">package</span> main<br><br><span class=\"hljs-comment\">// 导入标准I/O包</span><br><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&quot;fmt&quot;</span><br><br><span class=\"hljs-comment\">// 程序的入口方法</span><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span></span> &#123;<br>\tfmt.Println(<span class=\"hljs-string\">&quot;Hello，世界&quot;</span>)<br>&#125;<br><br></code></pre></td></tr></table></figure>\n\n<p><code>Go</code> 语言是一门编译型语言，<code>Go</code> 语言的工具链将源代码及其依赖转化成计算机的机器指令。<code>Go</code> 语言提供的工具都通过单独的命令 <code>go</code> 调用，<code>go</code> 有一系列子命令。最简单的一个子命令就是 <code>run</code> 。这个命令编译一个或多个以 <code>.go</code> 结尾的源文件、链接库文件，并运行最终生成的可执行文件（本书使用 $ 表示命令提示符）。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ go run helloworld.go<br></code></pre></td></tr></table></figure>\n\n<p>毫无意外，这个命令会输出</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">Hello，世界<br></code></pre></td></tr></table></figure>\n\n<p><code>Go</code> 语言原生支持 Unicode，它可以处理全世界任何语言的文本。<br>如果不只是一次性实验，你肯定希望能编译这个程序，保存编译结果以备将来之用。可以用 <code>build</code> 子命令。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ go build helloworld.go<br></code></pre></td></tr></table></figure>\n\n<p>这个命令生成一个名为 <code>helloworld</code> 的可执行的二进制文件。之后你可以随时运行它，不需任何处理。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\">$ </span><span class=\"language-bash\">./helloworld</span><br>Hello，世界<br></code></pre></td></tr></table></figure>\n\n<p>本书中所有示例代码上都有一行标记，利用这些标记可以从 <code>github.com</code> 代码仓库中获取代码</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">github.com<span class=\"hljs-regexp\">/hanzhuoxian/</span>study<span class=\"hljs-regexp\">/go/g</span>opl<span class=\"hljs-regexp\">/ch01/</span>helloworld/helloword.go<br></code></pre></td></tr></table></figure>\n\n<p>执行 <code>go get github.com/hanzhuoxian/study/go/gopl/ch01/helloworld/helloword.go</code> 命令，就会从网上获取对应的代码，并放到对应的目录中，需要先安装 <code>Git</code> 或者 <code>Hg</code> 之类的版本管理工具，并将对应的命令添加到 <code>PATH</code> 环境变量中。序言已经提及，需要先设置好 <code>GOPATH</code> 环境变量。</p>\n<p>来讨论下程序本身。<code>Go</code> 语言代码通过包（package）组织，包类似于其他语言里的库（libraries）或者模块（modules）。一个包由位于单个目录下的一个或多个 <code>.go</code> 源代码文件组成，目录定义包的作用。每个源文件都以一条 <code>package</code> 语句声明开始，这个例子里就是 <code>package main</code> ,表示该文件属于那个包，紧跟着一系列导入（<code>import</code>）的包，之后是存储在这个文件里的程序语句。</p>\n<p><code>Go</code> 标准库提供了 100 多个包，以支持常见功能，如输入、输出、排序以及文本处理。比如 <code>fmt</code> 包就含有格式化输出、接受输入的函数。<code>Println</code> 是其中一个基础函数，可以打印以逗号间隔的一个或多个值，并在最后添加一个换行符，从而输出一整行。</p>\n<p><code>main</code> 包比较特殊。它定义了一个独立可执行的程序，而不是一个库，在 <code>main</code> 包里的 <code>main</code> 函数也很特殊，它是整个程序执行时的入口。<code>main</code> 函数所做的事情就是程序做的，当然了，<code>main</code> 函数一般调用其他包里的函数完成很多工作（如 <code>fmt.Println</code>）。</p>\n<p>必须告诉编译器源文件需要哪些包，这就是跟随在 <code>package</code> 声明后面的 <code>import</code> 扮演的角色。hello world 例子只用到了一个包，大多数程序需要导入多个包。</p>\n<p>必须恰当导入需要的包，缺少了必要的包或者导入了不需要的包，程序都无法编译通过。这项严格要求避免了程序开发过程中引入未使用的包。</p>\n<p><code>import</code> 声明必须跟在文件的 <code>package</code> 声明之后。随后，则是组成程序的函数、变量、常量、类型的声明语句（分别由关键字 <code>func</code> 、<code>var</code> 、<code>const</code> 、<code>type</code> 定义）。这些内容的声明顺序并不重要。这个例子的程序已经尽可能短了，只声明了一个函数，其中只调用了一个其他函数。为了节省篇幅，有些时候示例程序会省略 <code>package</code> 和 <code>import</code>  声明，但是这些声明在源代码里有，并且必须得有才能编译。</p>\n<p>一个函数的声明由 <code>func</code> 关键字、函数名、参数列表、返回值列表（这个例子里的 <code>main</code> 函数参数列表和返回值都是空的）以及包含在大括号里的函数体组成。第五章进一步考察函数。</p>\n<p><code>Go</code> 语言不需要在语句或者声明的末尾添加分号，除非一行上有多条语句。实际上，编译器会主动把特定符号后的换行符转换为分号，因此换行符添加的位置会影响 <code>Go</code> 代码的正确解析（译注：比如行末是标识符、整数、浮点数、虚数、字符或字符串文字、关键字 <code>break</code>、<code>continue</code>、<code>fallthrough</code>或 <code>return</code> 中的一个、运算符和分隔符 <code>++</code>、<code>--</code>、<code>)</code>、<code>]</code> 或 <code>&#125;</code> 中的一个）。举个例子，函数的左括号 <code>&#123;</code> 必须和 <code>func</code> 函数声明在同一行上，且位于末尾，不能独占一行，而在表达式 <code>x+y</code> 中，可在 <code>+</code> 后换行，不能在 <code>+</code> 前换行（译注：以+结尾的话不会被插入分号分隔符，但是以 x 结尾的话则会被分号分隔符，从而导致编译错误）。</p>\n<p><code>Go</code> 语言在代码格式上采取了很强硬的态度。<code>gofmt</code>工具把代码格式化为标准格式（译注：这个格式化工具没有任何可以调整代码格式的参数，<code>Go</code> 语言就是这么任性），并且 <code>go</code> 工具中的 <code>fmt</code> 子命令会对指定包，否则默认为当前目录中所有go 源文件应用 <code>gofmt</code> 命令。本书中的所有代码都被 gofmt 过。你也应该养成格式化自己的代码的习惯。以法令方式规定标准的代码格式可以避免无尽的无意义的琐碎争执（译注：也导致了 <code>Go</code> 语言的 TIOBE 排名较低，因为缺少撕逼的话题）。更重要的是，这样可以做多种自动源码转换，如果放任 <code>Go</code> 语言代码格式，这些转换就不大可能了。</p>\n<p>很多文本编辑器都可以配置为保存文件时自动执行 <code>gofmt</code>，这样你的源代码总会被恰当地格式化。还有个相关的工具：<code>goimports</code>，可以根据代码需要，自动地添加或删除 <code>import</code> 声明。这个工具并没有包含在标准的分发包中，可以用下面的命令安装：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ go install golang.org/x/tools/cmd/goimports@latest<br></code></pre></td></tr></table></figure>\n\n<p>对于大多数用户来说，下载、编译包、运行测试用例、查看 <code>Go</code> 语言的文档等等常用功能都可以用 go 的工具完成 10.7 详细介绍这些知识。</p>\n"},{"title":"go 语言起源","date":"2023-10-19T05:28:11.000Z","_content":"\n## Go 语言起源\n\n编程语言的演化就像生物物种的演化类似，一个成功的编程语言的后代一般都会继承他们祖先的优点；当然有时多种语言杂合也可能会产生令人惊讶的特性；还有一些激进的新特性可能并没有先例。我们可以通过观察编程语言和软硬件是如何互相促进、互相影响的演化过程而学到很多。\n\n下图展示了有哪些早期的编程语言对 Go 语言的设计产生了重要影响。\n\n```mermaid\ngraph TD\nAA[\"CSP \\n (Hoare，1978)\"] --> AB[\"Squeak \\n (Cardelli & Pike, 1985)\"]\nAB --> AC[\"Newsqueak \\n (Pike 1989)\"]\nAC --> AD[\"Alef \\n (Winterbottom,1992)\"]\nAD --> G\n\nBA[\"ALGOL \\n （60 Backus et al., 1960）\"] --> BB[\"Pascal \\n （Wirth ，1970） \"]\nBB --> BC[\"Modula-2 \\n （Wirth， 1980）\"]\nBB --> AC\nBC --> BD[\"Oberon \\n （Wirth & Gutknecht, 1986）\"]\nBD --> BE[\"Object Oberon \\n (Mossenbock,Termpl&Griesemer,1990)\"]\nBD & BE --> BF[\"Oberon-2\\n(Wirth&Mossenbock,1991)\"]\nBF --> G\n\nBA --> CA[\"C \\n (Ritchie，1972)\"]\nCA --> G[\"Go \\n (Griesemer,Pike & Thompson, 2009)\"]\n```\n\n`Go` 语言有时候被描述为 “类 `C` 语言”，或者是 21 世纪的 `C` 语言。`Go` 从 `C` 语言继承了相似的表达式语法、控制流结构、基础数据类型、调用参数传值、指针等很多思想，还有 `C` 语言一直所看重的编译后机器码的运行效率以及和现有操作系统的无缝适配。\n\n但是在 `Go` 语言的家族树中还有其他的祖先。其中有一个影响力的分支来自 [Niklaus Wirth](https://en.wikipedia.org/wiki/Niklaus_Wirth) 所设计的 `Pascal` 语言。然后 `Modula-2` 语言激发了包的概念。然后 `Oberon` 语言摒弃了模块接口文件和模块实现文件之间的区别。第二代的 `Oberon-2` 语言直接影响了包的导入和声明的语法，还有`Oberon`语言的面向对象特性所提供的方法的声明语法等。\n\n`Go` 语言的另一支祖先，带来了`Go` 语言有别于其他语言的重要特性，灵感来自贝尔实验室的 [Tony Hoare](https://en.wikipedia.org/wiki/Tony_Hoare) 于1978年发表的鲜为外界所知的关于并发研究的基础文献 *顺序通信进程*（ communicating sequential processes，缩写为`CSP`）。在`CSP`中，程序是一组中间没有共享状态的平行运行的处理过程，它们之间使用管道进行通信和控制同步。不过 [Tony Hoare](https://en.wikipedia.org/wiki/Tony_Hoare) 的 `CSP` 只是一个用于描述并发性基本概念的描述语言，并不是一个可以编写可执行程序的通用编程语言。\n\n接下来， Rob Pike 和其他人开始不断尝试将 [CSP](https://en.wikipedia.org/wiki/Communicating_sequential_processes) 引入实际的编程语言中。他们第一次尝试引入 `CSP` 特性的编程语言叫 [squeak](http://doc.cat-v.org/bell_labs/squeak/) (老鼠间交流的语言)，是一个提供鼠标和键盘事件处理的编程语言，它的管道是静态创建的。然后是改进版的 [Newsqueak](http://doc.cat-v.org/bell_labs/squeak/) 语言，提供了类似 `C` 语言语句和表达是的语法和类似 `Pascal` 语言的推导语法。`Newsqueak` 是一个带垃圾回收的纯函数式语言，它再次针对键盘、鼠标和窗口事件管理。但是在 `Newsqueak`  语言中管道是动态创建的，属于第一类值，可以保存到变量中。\n\n在 Plan9 操作系统中，这些优秀的想法被吸收到了一个叫 Alef 的编程语言中。Alef 试图将 `Newsqueak` 语言改造为系统编程语言，但是因为缺少垃圾回收机制而导致并发编程很痛苦。\n\n`Go` 语言的一些其他特性零散地来自于其他一些编程语言；比如 iota 语法是从 APL 语言借鉴，词法作用域与嵌套函数来自于 `Scheme` 语言。当然，我们也可以从 `Go` 中发现很多创新的设计。比如 Go 语言的切片为动态数组提供了有效的随机存取的性能，这可能会让人联想到链表的底层的共享机制。还有 Go 语言新发明的 defer 语句。\n\n## Go 语言项目\n\n所有的编程语言都反映了语言设计者对编程哲学的反思，通常包括之前的语言所暴露的一些不足地方的改进。`Go` 项目是在 Google 公司维护超级复杂的几个软件系统遇到的一些问题的反思（但是这类问题绝不是 Google 公司所特有的）。\n\n正如 Rob Pike 所说，“软件的复杂性是乘法级相关的”，通过增加一个部分的复杂性来修复问题通常将慢慢地增加其他部分的复杂性。通过增加功能、选项和配置是修复问题的最快途径，但是这很容易让人忘记简洁的内涵，既从长远来看，简洁依然是好软件的关键因素。\n\n简洁的设计需要在工作开始的时候舍弃不必要的想法，并且在软件的生命周期内严格区别好的改变和坏的改变。通过足够的努力，一个好的改变可以在不破坏原有完整概念的前提下保持自适应，正如 Fred Brooks 所说的“概念完整性”；而一个坏的改变则不能达到这个效果，他们仅仅是通过肤浅和简单的妥协来破坏原有设计的一致性。只有通过简洁的设计，才能让一个系统保持稳定、安全和持续的进化。\n\n`Go` 项目包括编程语言本身，附带了相关的工具和标准库，最后但并非代表不重要的是，关于简洁编程哲学的宣言。就事后诸葛亮的角度来看，`Go` 语言的这些地方都做的还不错：拥有自动垃圾回收、一个包系统、函数作为一等公民、词法作用域、系统调用接口、只读的 UTF8 字符串等。但是 `Go` 语言本身只有很少的特性，也不太可能添加太多的特性。例如，它没有隐式的数值转换、没有构造函数和析构函数、没有运算符重载、没有默认参数、没有泛型（1.19 已有）、没有继承、没有异常没有宏、没有函数修饰、更没有线程局部存储。但是，语言本身是成熟和稳定的，而且承诺保证向后兼容：用之前的 `Go` 语言编写的程序可以用新版本的 `Go` 语言编译器和标准库直接构建而不需要修改代码。\n\n`Go` 语言有足够的类型系统以避免动态语言中那些粗心的类型错误，但是，`Go` 语言的类型系统相比传统的强类型语言又要简洁很多。虽然，有时候这会导致一个“无类型”的抽象概念，但是 `Go` 语言程序员并不需要像 `C++` 或 `Haskell` 程序员那样纠结于具体类型的安全属性。在实践中， `Go` 语言简洁的类型系统会给程序员带来了更多的安全性和更好的运行时性能。\n\n`Go` 语言鼓励当代计算机系统设计的原则，特别是局部的重要性。它的内置数据类型和大多数的准库数据结构都经过精心设计而避免显式的初始化或隐式的构造函数，因为很少的内存分配和内存初始化代码被隐藏在库代码中了。 `Go` 语言的聚合类型（结构体和数组）可以直接操作他们的元素，只需要更少的存储空间、更少的内存写操作，而且指针操作比其他间接操作的语言也更有效率。由于现代计算机是一个并行的机器， `Go` 语言提供了基于 `CSP` 的并发特性支持。`Go` 语言的动态栈使得轻量级线程 `goroutine` 的初始栈可以很小，因此，创建一个 `goroutine` 的代价很小，创建百万级的 `goroutine` 完全是可行的。\n\n`Go` 语言的标准库（通常被称为语言自带的电池），提供了清晰的构建模块和公共接口，包含`I/O` 操作、文本处理、图像、密码学、网络和分布式应用程序等，并支持许多标准化的文件格式和编解码协议。库和工具使用了大量的约定来减少额外的配置和解释，从而最终简化程序的逻辑，而且，每个 `Go` 程序结构都是如此的相似，因此，`Go` 程序也很容易学习。使用 `Go` 语言自带工具构建 `Go` 语言项目只需要使用文件名和标识符名称，一个偶尔的特殊注释来确定所有的库、可执行文件、测试、基准测试、例子、以及特定于平台的变量、项目的文档等；`Go` 语言源代码本身就包含了构建规范。\n\n## 本书的组织\n\n我们假设你已经有一种或多种其他编程语言的使用经历，不管是类似于`C`、`C++` 或 `Java` 的编译型语言，还是类似于 `Python`、`Ruby`、`JavaScript` 的脚本语言，因此我们不会像对完全的编程语言初学者那样解释所有的细节。因为，`Go` 语言的变量、常量、表达式、控制流和函数等基本语法也是类似的。\n\n第一章包含了本教程的基本结构，通过十几个程序介绍了用 `Go` 语言如何实现类似读写文件、文本格式化、创建图像、网络客户端和服务器通讯等日常工作。\n\n第二章描述了 `Go` 语言程序的基本元素结构、变量、新类型定义、包和文件、以及作用域等概念。第三章讨论了数字、布尔值、字符串和常量，并演示了如何显示和处理 Unicode 字符。第四章描述了符合类型，从简单的数组、字典、切片到动态列表。第五章涵盖了函数，并讨论了错误处理、`panic` 和 `recover`，还有 `defer`语句。\n\n第一章到第五章是基础部分，主流命令式编程语言这部分都类似。个别之处，`Go` 语言有自己特色的语法和风格，但是大多数程序员能很快适应。其余章节是 `Go` 语言 特有的：方法、接口、并发、包、测试和反射等语言特性。\n\n`Go` 语言的面向对象机制与一般语言不同。它没有类层次结构，甚至可以说没有类；仅仅通过组合（而不是继承）简单的对象来构建复杂的对象。方法不仅可以定义在结构体上，而且，可以定义在任何用户自定义类型上；并且，具体类型和抽象类型（接口）之间的关系是隐式的，所以很多类型的设计者可能并不知道该类型到底实现了那些接口。方法在第六章讨论，接口在第七章讨论。\n\n第八章讨论了基于顺序通信进程（CSP）概念的并发编程，使用 `goroutines` 和 `channels` 处理并发编程。第九章则讨论了传统的基于共享变量的并发编程。\n\n第十章描述了包机制和包的组织结构。这一章还展示了如何有效地利用 `Go` 自带的工具、使用单个命令完成变异、测试、基准测试、代码格式化、文档以及其他诸多任务。\n\n第十一章讨论了单元测试，`Go` 语言的工具和标准库中集成了轻量级的测试功能，避免了强大但复杂的测试框架。测试库提供了一些基本构件，必要时可以用来构件复杂的测试构件。\n\n第十二章讨论了反射，一种程序在运行期间审视自己的能力。反射是一个强大的编程工具，不过要谨慎地使用；这一章利用反射机制实现一些重要的 `Go` 语言 库函数，展示了反射的强大用法。第十三章解释了底层的编程的细节，在必要时，可以使用 `unsafe` 包绕过 `Go` 语言安全的类型系统。\n\n每一章都有一些练习题，你可以用来测试你对 `Go` 的理解，你也可以探讨书中浙西列子的扩展和替代。\n\n书中的所有代码都可以从 https://github.com/adonovan/gopl.io 上的仓库下载。 `git clone https://github.com/adonovan/gopl.io` 命令将代码下载至当前目录。\n\n```bash\n$ git clone https://github.com/adonovan/gopl.io    # 克隆代码\n$ go run gopl.io/ch1/helloworld/main.go # 运行代码\nHello, 世界                     # 这是中文\n\n```\n\n运行这些例子需要安装 `Go 1.5` 以上的版本。\n\n```bash\n$ go version\ngo version go1.5 linux/amd64\n```\n\n如果使用其他的操作系统，请参考 https://golang.org/doc/install 提供的说明安装。\n\n## 更多的信息\n\n最佳的帮助信息来自 `Go` 语言的官方网站，[https://go.dev](https://go.dev) ，它提供了完善的参考文档，包括编程语言和标准库等诸多权威的帮助信息。同时也包含了如何编写更地道的 `Go` 程序的基本教程，还有各种各样的在线文本资源和视频资源，他们是本书最有价值的补充。`Go` 语言的官方博客 [https://go.dev/blog/](https://go.dev/blog/) 会不定期发布一些 `Go` 语言最好的实践文章，包括当前语言的发展状态、未来的计划、会议报告和 `Go`  语言相关的各种会议的主题等信息（译注： https://go.dev/talks/ 包含了官方收录的各种报告的讲稿）。\n\n在线访问一个有价值的地方是可以从 Web 页面运行 `Go` 语言的程序。这个功能由来自 [https://go.dev/play/](https://go.dev/play/) 的 `Go Playground` 提供，并且可以方便的嵌入到其它页面中。\n\nPlayground 可以简单的通过执行一个小程序来测试对语法、语义和程序库的理解，类似其他很多语言提供的 REPL 即时运行的工具。同时它可以生成对应的 `URL` ,非常适合共享 `Go` 语言代码片段、汇报 bug 或者提供反馈意见等。\n\n基于 Playground 构建的 [Go Tour]([A Tour of Go](https://go.dev/tour/welcome/1)) ,是一个系列的 `Go` 语言入门教程，它包含了诸多基本概念和结构相关的并可在线运行的互动小程序。\n\n当然，Playground 和 Tour 也有一些限制，它们只能导入标准库，而且因为安全的原因对一些网络库做了限制。如果要在编译和运行时需要访问互联网，对于一些更复杂的实验，你可能需要在自己的电脑上构建并运行程序。幸运的是下载 `Go` 语言的过程很简单，从 https://go.dev 下载安装包应该不超过几分钟，然后就可以在自己电脑上编写和运行 `Go` 程序了。\n\n`Go` 语言是一个开源项目，你可以在 [Standard library - Go Packages](https://pkg.go.dev/std) 阅读标准库中任意函数和类型的实现代码，和下载安装包的代码完全一致。这样，你可以知道很多函数是如何工作的， 通过挖掘找出一些答案的细节，或者仅仅是出于欣赏专业级 `Go` 代码。\n","source":"_posts/gopl/start.md","raw":"---\ntitle: go 语言起源\ndate: 2023-10-19 13:28:11\ncategories:\n- Go 语言圣经\ntags:\n- golang\n- gopl\n---\n\n## Go 语言起源\n\n编程语言的演化就像生物物种的演化类似，一个成功的编程语言的后代一般都会继承他们祖先的优点；当然有时多种语言杂合也可能会产生令人惊讶的特性；还有一些激进的新特性可能并没有先例。我们可以通过观察编程语言和软硬件是如何互相促进、互相影响的演化过程而学到很多。\n\n下图展示了有哪些早期的编程语言对 Go 语言的设计产生了重要影响。\n\n```mermaid\ngraph TD\nAA[\"CSP \\n (Hoare，1978)\"] --> AB[\"Squeak \\n (Cardelli & Pike, 1985)\"]\nAB --> AC[\"Newsqueak \\n (Pike 1989)\"]\nAC --> AD[\"Alef \\n (Winterbottom,1992)\"]\nAD --> G\n\nBA[\"ALGOL \\n （60 Backus et al., 1960）\"] --> BB[\"Pascal \\n （Wirth ，1970） \"]\nBB --> BC[\"Modula-2 \\n （Wirth， 1980）\"]\nBB --> AC\nBC --> BD[\"Oberon \\n （Wirth & Gutknecht, 1986）\"]\nBD --> BE[\"Object Oberon \\n (Mossenbock,Termpl&Griesemer,1990)\"]\nBD & BE --> BF[\"Oberon-2\\n(Wirth&Mossenbock,1991)\"]\nBF --> G\n\nBA --> CA[\"C \\n (Ritchie，1972)\"]\nCA --> G[\"Go \\n (Griesemer,Pike & Thompson, 2009)\"]\n```\n\n`Go` 语言有时候被描述为 “类 `C` 语言”，或者是 21 世纪的 `C` 语言。`Go` 从 `C` 语言继承了相似的表达式语法、控制流结构、基础数据类型、调用参数传值、指针等很多思想，还有 `C` 语言一直所看重的编译后机器码的运行效率以及和现有操作系统的无缝适配。\n\n但是在 `Go` 语言的家族树中还有其他的祖先。其中有一个影响力的分支来自 [Niklaus Wirth](https://en.wikipedia.org/wiki/Niklaus_Wirth) 所设计的 `Pascal` 语言。然后 `Modula-2` 语言激发了包的概念。然后 `Oberon` 语言摒弃了模块接口文件和模块实现文件之间的区别。第二代的 `Oberon-2` 语言直接影响了包的导入和声明的语法，还有`Oberon`语言的面向对象特性所提供的方法的声明语法等。\n\n`Go` 语言的另一支祖先，带来了`Go` 语言有别于其他语言的重要特性，灵感来自贝尔实验室的 [Tony Hoare](https://en.wikipedia.org/wiki/Tony_Hoare) 于1978年发表的鲜为外界所知的关于并发研究的基础文献 *顺序通信进程*（ communicating sequential processes，缩写为`CSP`）。在`CSP`中，程序是一组中间没有共享状态的平行运行的处理过程，它们之间使用管道进行通信和控制同步。不过 [Tony Hoare](https://en.wikipedia.org/wiki/Tony_Hoare) 的 `CSP` 只是一个用于描述并发性基本概念的描述语言，并不是一个可以编写可执行程序的通用编程语言。\n\n接下来， Rob Pike 和其他人开始不断尝试将 [CSP](https://en.wikipedia.org/wiki/Communicating_sequential_processes) 引入实际的编程语言中。他们第一次尝试引入 `CSP` 特性的编程语言叫 [squeak](http://doc.cat-v.org/bell_labs/squeak/) (老鼠间交流的语言)，是一个提供鼠标和键盘事件处理的编程语言，它的管道是静态创建的。然后是改进版的 [Newsqueak](http://doc.cat-v.org/bell_labs/squeak/) 语言，提供了类似 `C` 语言语句和表达是的语法和类似 `Pascal` 语言的推导语法。`Newsqueak` 是一个带垃圾回收的纯函数式语言，它再次针对键盘、鼠标和窗口事件管理。但是在 `Newsqueak`  语言中管道是动态创建的，属于第一类值，可以保存到变量中。\n\n在 Plan9 操作系统中，这些优秀的想法被吸收到了一个叫 Alef 的编程语言中。Alef 试图将 `Newsqueak` 语言改造为系统编程语言，但是因为缺少垃圾回收机制而导致并发编程很痛苦。\n\n`Go` 语言的一些其他特性零散地来自于其他一些编程语言；比如 iota 语法是从 APL 语言借鉴，词法作用域与嵌套函数来自于 `Scheme` 语言。当然，我们也可以从 `Go` 中发现很多创新的设计。比如 Go 语言的切片为动态数组提供了有效的随机存取的性能，这可能会让人联想到链表的底层的共享机制。还有 Go 语言新发明的 defer 语句。\n\n## Go 语言项目\n\n所有的编程语言都反映了语言设计者对编程哲学的反思，通常包括之前的语言所暴露的一些不足地方的改进。`Go` 项目是在 Google 公司维护超级复杂的几个软件系统遇到的一些问题的反思（但是这类问题绝不是 Google 公司所特有的）。\n\n正如 Rob Pike 所说，“软件的复杂性是乘法级相关的”，通过增加一个部分的复杂性来修复问题通常将慢慢地增加其他部分的复杂性。通过增加功能、选项和配置是修复问题的最快途径，但是这很容易让人忘记简洁的内涵，既从长远来看，简洁依然是好软件的关键因素。\n\n简洁的设计需要在工作开始的时候舍弃不必要的想法，并且在软件的生命周期内严格区别好的改变和坏的改变。通过足够的努力，一个好的改变可以在不破坏原有完整概念的前提下保持自适应，正如 Fred Brooks 所说的“概念完整性”；而一个坏的改变则不能达到这个效果，他们仅仅是通过肤浅和简单的妥协来破坏原有设计的一致性。只有通过简洁的设计，才能让一个系统保持稳定、安全和持续的进化。\n\n`Go` 项目包括编程语言本身，附带了相关的工具和标准库，最后但并非代表不重要的是，关于简洁编程哲学的宣言。就事后诸葛亮的角度来看，`Go` 语言的这些地方都做的还不错：拥有自动垃圾回收、一个包系统、函数作为一等公民、词法作用域、系统调用接口、只读的 UTF8 字符串等。但是 `Go` 语言本身只有很少的特性，也不太可能添加太多的特性。例如，它没有隐式的数值转换、没有构造函数和析构函数、没有运算符重载、没有默认参数、没有泛型（1.19 已有）、没有继承、没有异常没有宏、没有函数修饰、更没有线程局部存储。但是，语言本身是成熟和稳定的，而且承诺保证向后兼容：用之前的 `Go` 语言编写的程序可以用新版本的 `Go` 语言编译器和标准库直接构建而不需要修改代码。\n\n`Go` 语言有足够的类型系统以避免动态语言中那些粗心的类型错误，但是，`Go` 语言的类型系统相比传统的强类型语言又要简洁很多。虽然，有时候这会导致一个“无类型”的抽象概念，但是 `Go` 语言程序员并不需要像 `C++` 或 `Haskell` 程序员那样纠结于具体类型的安全属性。在实践中， `Go` 语言简洁的类型系统会给程序员带来了更多的安全性和更好的运行时性能。\n\n`Go` 语言鼓励当代计算机系统设计的原则，特别是局部的重要性。它的内置数据类型和大多数的准库数据结构都经过精心设计而避免显式的初始化或隐式的构造函数，因为很少的内存分配和内存初始化代码被隐藏在库代码中了。 `Go` 语言的聚合类型（结构体和数组）可以直接操作他们的元素，只需要更少的存储空间、更少的内存写操作，而且指针操作比其他间接操作的语言也更有效率。由于现代计算机是一个并行的机器， `Go` 语言提供了基于 `CSP` 的并发特性支持。`Go` 语言的动态栈使得轻量级线程 `goroutine` 的初始栈可以很小，因此，创建一个 `goroutine` 的代价很小，创建百万级的 `goroutine` 完全是可行的。\n\n`Go` 语言的标准库（通常被称为语言自带的电池），提供了清晰的构建模块和公共接口，包含`I/O` 操作、文本处理、图像、密码学、网络和分布式应用程序等，并支持许多标准化的文件格式和编解码协议。库和工具使用了大量的约定来减少额外的配置和解释，从而最终简化程序的逻辑，而且，每个 `Go` 程序结构都是如此的相似，因此，`Go` 程序也很容易学习。使用 `Go` 语言自带工具构建 `Go` 语言项目只需要使用文件名和标识符名称，一个偶尔的特殊注释来确定所有的库、可执行文件、测试、基准测试、例子、以及特定于平台的变量、项目的文档等；`Go` 语言源代码本身就包含了构建规范。\n\n## 本书的组织\n\n我们假设你已经有一种或多种其他编程语言的使用经历，不管是类似于`C`、`C++` 或 `Java` 的编译型语言，还是类似于 `Python`、`Ruby`、`JavaScript` 的脚本语言，因此我们不会像对完全的编程语言初学者那样解释所有的细节。因为，`Go` 语言的变量、常量、表达式、控制流和函数等基本语法也是类似的。\n\n第一章包含了本教程的基本结构，通过十几个程序介绍了用 `Go` 语言如何实现类似读写文件、文本格式化、创建图像、网络客户端和服务器通讯等日常工作。\n\n第二章描述了 `Go` 语言程序的基本元素结构、变量、新类型定义、包和文件、以及作用域等概念。第三章讨论了数字、布尔值、字符串和常量，并演示了如何显示和处理 Unicode 字符。第四章描述了符合类型，从简单的数组、字典、切片到动态列表。第五章涵盖了函数，并讨论了错误处理、`panic` 和 `recover`，还有 `defer`语句。\n\n第一章到第五章是基础部分，主流命令式编程语言这部分都类似。个别之处，`Go` 语言有自己特色的语法和风格，但是大多数程序员能很快适应。其余章节是 `Go` 语言 特有的：方法、接口、并发、包、测试和反射等语言特性。\n\n`Go` 语言的面向对象机制与一般语言不同。它没有类层次结构，甚至可以说没有类；仅仅通过组合（而不是继承）简单的对象来构建复杂的对象。方法不仅可以定义在结构体上，而且，可以定义在任何用户自定义类型上；并且，具体类型和抽象类型（接口）之间的关系是隐式的，所以很多类型的设计者可能并不知道该类型到底实现了那些接口。方法在第六章讨论，接口在第七章讨论。\n\n第八章讨论了基于顺序通信进程（CSP）概念的并发编程，使用 `goroutines` 和 `channels` 处理并发编程。第九章则讨论了传统的基于共享变量的并发编程。\n\n第十章描述了包机制和包的组织结构。这一章还展示了如何有效地利用 `Go` 自带的工具、使用单个命令完成变异、测试、基准测试、代码格式化、文档以及其他诸多任务。\n\n第十一章讨论了单元测试，`Go` 语言的工具和标准库中集成了轻量级的测试功能，避免了强大但复杂的测试框架。测试库提供了一些基本构件，必要时可以用来构件复杂的测试构件。\n\n第十二章讨论了反射，一种程序在运行期间审视自己的能力。反射是一个强大的编程工具，不过要谨慎地使用；这一章利用反射机制实现一些重要的 `Go` 语言 库函数，展示了反射的强大用法。第十三章解释了底层的编程的细节，在必要时，可以使用 `unsafe` 包绕过 `Go` 语言安全的类型系统。\n\n每一章都有一些练习题，你可以用来测试你对 `Go` 的理解，你也可以探讨书中浙西列子的扩展和替代。\n\n书中的所有代码都可以从 https://github.com/adonovan/gopl.io 上的仓库下载。 `git clone https://github.com/adonovan/gopl.io` 命令将代码下载至当前目录。\n\n```bash\n$ git clone https://github.com/adonovan/gopl.io    # 克隆代码\n$ go run gopl.io/ch1/helloworld/main.go # 运行代码\nHello, 世界                     # 这是中文\n\n```\n\n运行这些例子需要安装 `Go 1.5` 以上的版本。\n\n```bash\n$ go version\ngo version go1.5 linux/amd64\n```\n\n如果使用其他的操作系统，请参考 https://golang.org/doc/install 提供的说明安装。\n\n## 更多的信息\n\n最佳的帮助信息来自 `Go` 语言的官方网站，[https://go.dev](https://go.dev) ，它提供了完善的参考文档，包括编程语言和标准库等诸多权威的帮助信息。同时也包含了如何编写更地道的 `Go` 程序的基本教程，还有各种各样的在线文本资源和视频资源，他们是本书最有价值的补充。`Go` 语言的官方博客 [https://go.dev/blog/](https://go.dev/blog/) 会不定期发布一些 `Go` 语言最好的实践文章，包括当前语言的发展状态、未来的计划、会议报告和 `Go`  语言相关的各种会议的主题等信息（译注： https://go.dev/talks/ 包含了官方收录的各种报告的讲稿）。\n\n在线访问一个有价值的地方是可以从 Web 页面运行 `Go` 语言的程序。这个功能由来自 [https://go.dev/play/](https://go.dev/play/) 的 `Go Playground` 提供，并且可以方便的嵌入到其它页面中。\n\nPlayground 可以简单的通过执行一个小程序来测试对语法、语义和程序库的理解，类似其他很多语言提供的 REPL 即时运行的工具。同时它可以生成对应的 `URL` ,非常适合共享 `Go` 语言代码片段、汇报 bug 或者提供反馈意见等。\n\n基于 Playground 构建的 [Go Tour]([A Tour of Go](https://go.dev/tour/welcome/1)) ,是一个系列的 `Go` 语言入门教程，它包含了诸多基本概念和结构相关的并可在线运行的互动小程序。\n\n当然，Playground 和 Tour 也有一些限制，它们只能导入标准库，而且因为安全的原因对一些网络库做了限制。如果要在编译和运行时需要访问互联网，对于一些更复杂的实验，你可能需要在自己的电脑上构建并运行程序。幸运的是下载 `Go` 语言的过程很简单，从 https://go.dev 下载安装包应该不超过几分钟，然后就可以在自己电脑上编写和运行 `Go` 程序了。\n\n`Go` 语言是一个开源项目，你可以在 [Standard library - Go Packages](https://pkg.go.dev/std) 阅读标准库中任意函数和类型的实现代码，和下载安装包的代码完全一致。这样，你可以知道很多函数是如何工作的， 通过挖掘找出一些答案的细节，或者仅仅是出于欣赏专业级 `Go` 代码。\n","slug":"gopl/start","published":1,"updated":"2023-10-19T06:03:48.813Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clnxapgs70007j8va082sgnr9","content":"<h2 id=\"Go-语言起源\"><a href=\"#Go-语言起源\" class=\"headerlink\" title=\"Go 语言起源\"></a>Go 语言起源</h2><p>编程语言的演化就像生物物种的演化类似，一个成功的编程语言的后代一般都会继承他们祖先的优点；当然有时多种语言杂合也可能会产生令人惊讶的特性；还有一些激进的新特性可能并没有先例。我们可以通过观察编程语言和软硬件是如何互相促进、互相影响的演化过程而学到很多。</p>\n<p>下图展示了有哪些早期的编程语言对 Go 语言的设计产生了重要影响。</p>\n<pre><code class=\" mermaid\">graph TD\nAA[&quot;CSP \\n (Hoare，1978)&quot;] --&gt; AB[&quot;Squeak \\n (Cardelli &amp; Pike, 1985)&quot;]\nAB --&gt; AC[&quot;Newsqueak \\n (Pike 1989)&quot;]\nAC --&gt; AD[&quot;Alef \\n (Winterbottom,1992)&quot;]\nAD --&gt; G\n\nBA[&quot;ALGOL \\n （60 Backus et al., 1960）&quot;] --&gt; BB[&quot;Pascal \\n （Wirth ，1970） &quot;]\nBB --&gt; BC[&quot;Modula-2 \\n （Wirth， 1980）&quot;]\nBB --&gt; AC\nBC --&gt; BD[&quot;Oberon \\n （Wirth &amp; Gutknecht, 1986）&quot;]\nBD --&gt; BE[&quot;Object Oberon \\n (Mossenbock,Termpl&amp;Griesemer,1990)&quot;]\nBD &amp; BE --&gt; BF[&quot;Oberon-2\\n(Wirth&amp;Mossenbock,1991)&quot;]\nBF --&gt; G\n\nBA --&gt; CA[&quot;C \\n (Ritchie，1972)&quot;]\nCA --&gt; G[&quot;Go \\n (Griesemer,Pike &amp; Thompson, 2009)&quot;]\n</code></pre>\n\n<p><code>Go</code> 语言有时候被描述为 “类 <code>C</code> 语言”，或者是 21 世纪的 <code>C</code> 语言。<code>Go</code> 从 <code>C</code> 语言继承了相似的表达式语法、控制流结构、基础数据类型、调用参数传值、指针等很多思想，还有 <code>C</code> 语言一直所看重的编译后机器码的运行效率以及和现有操作系统的无缝适配。</p>\n<p>但是在 <code>Go</code> 语言的家族树中还有其他的祖先。其中有一个影响力的分支来自 <a href=\"https://en.wikipedia.org/wiki/Niklaus_Wirth\">Niklaus Wirth</a> 所设计的 <code>Pascal</code> 语言。然后 <code>Modula-2</code> 语言激发了包的概念。然后 <code>Oberon</code> 语言摒弃了模块接口文件和模块实现文件之间的区别。第二代的 <code>Oberon-2</code> 语言直接影响了包的导入和声明的语法，还有<code>Oberon</code>语言的面向对象特性所提供的方法的声明语法等。</p>\n<p><code>Go</code> 语言的另一支祖先，带来了<code>Go</code> 语言有别于其他语言的重要特性，灵感来自贝尔实验室的 <a href=\"https://en.wikipedia.org/wiki/Tony_Hoare\">Tony Hoare</a> 于1978年发表的鲜为外界所知的关于并发研究的基础文献 <em>顺序通信进程</em>（ communicating sequential processes，缩写为<code>CSP</code>）。在<code>CSP</code>中，程序是一组中间没有共享状态的平行运行的处理过程，它们之间使用管道进行通信和控制同步。不过 <a href=\"https://en.wikipedia.org/wiki/Tony_Hoare\">Tony Hoare</a> 的 <code>CSP</code> 只是一个用于描述并发性基本概念的描述语言，并不是一个可以编写可执行程序的通用编程语言。</p>\n<p>接下来， Rob Pike 和其他人开始不断尝试将 <a href=\"https://en.wikipedia.org/wiki/Communicating_sequential_processes\">CSP</a> 引入实际的编程语言中。他们第一次尝试引入 <code>CSP</code> 特性的编程语言叫 <a href=\"http://doc.cat-v.org/bell_labs/squeak/\">squeak</a> (老鼠间交流的语言)，是一个提供鼠标和键盘事件处理的编程语言，它的管道是静态创建的。然后是改进版的 <a href=\"http://doc.cat-v.org/bell_labs/squeak/\">Newsqueak</a> 语言，提供了类似 <code>C</code> 语言语句和表达是的语法和类似 <code>Pascal</code> 语言的推导语法。<code>Newsqueak</code> 是一个带垃圾回收的纯函数式语言，它再次针对键盘、鼠标和窗口事件管理。但是在 <code>Newsqueak</code>  语言中管道是动态创建的，属于第一类值，可以保存到变量中。</p>\n<p>在 Plan9 操作系统中，这些优秀的想法被吸收到了一个叫 Alef 的编程语言中。Alef 试图将 <code>Newsqueak</code> 语言改造为系统编程语言，但是因为缺少垃圾回收机制而导致并发编程很痛苦。</p>\n<p><code>Go</code> 语言的一些其他特性零散地来自于其他一些编程语言；比如 iota 语法是从 APL 语言借鉴，词法作用域与嵌套函数来自于 <code>Scheme</code> 语言。当然，我们也可以从 <code>Go</code> 中发现很多创新的设计。比如 Go 语言的切片为动态数组提供了有效的随机存取的性能，这可能会让人联想到链表的底层的共享机制。还有 Go 语言新发明的 defer 语句。</p>\n<h2 id=\"Go-语言项目\"><a href=\"#Go-语言项目\" class=\"headerlink\" title=\"Go 语言项目\"></a>Go 语言项目</h2><p>所有的编程语言都反映了语言设计者对编程哲学的反思，通常包括之前的语言所暴露的一些不足地方的改进。<code>Go</code> 项目是在 Google 公司维护超级复杂的几个软件系统遇到的一些问题的反思（但是这类问题绝不是 Google 公司所特有的）。</p>\n<p>正如 Rob Pike 所说，“软件的复杂性是乘法级相关的”，通过增加一个部分的复杂性来修复问题通常将慢慢地增加其他部分的复杂性。通过增加功能、选项和配置是修复问题的最快途径，但是这很容易让人忘记简洁的内涵，既从长远来看，简洁依然是好软件的关键因素。</p>\n<p>简洁的设计需要在工作开始的时候舍弃不必要的想法，并且在软件的生命周期内严格区别好的改变和坏的改变。通过足够的努力，一个好的改变可以在不破坏原有完整概念的前提下保持自适应，正如 Fred Brooks 所说的“概念完整性”；而一个坏的改变则不能达到这个效果，他们仅仅是通过肤浅和简单的妥协来破坏原有设计的一致性。只有通过简洁的设计，才能让一个系统保持稳定、安全和持续的进化。</p>\n<p><code>Go</code> 项目包括编程语言本身，附带了相关的工具和标准库，最后但并非代表不重要的是，关于简洁编程哲学的宣言。就事后诸葛亮的角度来看，<code>Go</code> 语言的这些地方都做的还不错：拥有自动垃圾回收、一个包系统、函数作为一等公民、词法作用域、系统调用接口、只读的 UTF8 字符串等。但是 <code>Go</code> 语言本身只有很少的特性，也不太可能添加太多的特性。例如，它没有隐式的数值转换、没有构造函数和析构函数、没有运算符重载、没有默认参数、没有泛型（1.19 已有）、没有继承、没有异常没有宏、没有函数修饰、更没有线程局部存储。但是，语言本身是成熟和稳定的，而且承诺保证向后兼容：用之前的 <code>Go</code> 语言编写的程序可以用新版本的 <code>Go</code> 语言编译器和标准库直接构建而不需要修改代码。</p>\n<p><code>Go</code> 语言有足够的类型系统以避免动态语言中那些粗心的类型错误，但是，<code>Go</code> 语言的类型系统相比传统的强类型语言又要简洁很多。虽然，有时候这会导致一个“无类型”的抽象概念，但是 <code>Go</code> 语言程序员并不需要像 <code>C++</code> 或 <code>Haskell</code> 程序员那样纠结于具体类型的安全属性。在实践中， <code>Go</code> 语言简洁的类型系统会给程序员带来了更多的安全性和更好的运行时性能。</p>\n<p><code>Go</code> 语言鼓励当代计算机系统设计的原则，特别是局部的重要性。它的内置数据类型和大多数的准库数据结构都经过精心设计而避免显式的初始化或隐式的构造函数，因为很少的内存分配和内存初始化代码被隐藏在库代码中了。 <code>Go</code> 语言的聚合类型（结构体和数组）可以直接操作他们的元素，只需要更少的存储空间、更少的内存写操作，而且指针操作比其他间接操作的语言也更有效率。由于现代计算机是一个并行的机器， <code>Go</code> 语言提供了基于 <code>CSP</code> 的并发特性支持。<code>Go</code> 语言的动态栈使得轻量级线程 <code>goroutine</code> 的初始栈可以很小，因此，创建一个 <code>goroutine</code> 的代价很小，创建百万级的 <code>goroutine</code> 完全是可行的。</p>\n<p><code>Go</code> 语言的标准库（通常被称为语言自带的电池），提供了清晰的构建模块和公共接口，包含<code>I/O</code> 操作、文本处理、图像、密码学、网络和分布式应用程序等，并支持许多标准化的文件格式和编解码协议。库和工具使用了大量的约定来减少额外的配置和解释，从而最终简化程序的逻辑，而且，每个 <code>Go</code> 程序结构都是如此的相似，因此，<code>Go</code> 程序也很容易学习。使用 <code>Go</code> 语言自带工具构建 <code>Go</code> 语言项目只需要使用文件名和标识符名称，一个偶尔的特殊注释来确定所有的库、可执行文件、测试、基准测试、例子、以及特定于平台的变量、项目的文档等；<code>Go</code> 语言源代码本身就包含了构建规范。</p>\n<h2 id=\"本书的组织\"><a href=\"#本书的组织\" class=\"headerlink\" title=\"本书的组织\"></a>本书的组织</h2><p>我们假设你已经有一种或多种其他编程语言的使用经历，不管是类似于<code>C</code>、<code>C++</code> 或 <code>Java</code> 的编译型语言，还是类似于 <code>Python</code>、<code>Ruby</code>、<code>JavaScript</code> 的脚本语言，因此我们不会像对完全的编程语言初学者那样解释所有的细节。因为，<code>Go</code> 语言的变量、常量、表达式、控制流和函数等基本语法也是类似的。</p>\n<p>第一章包含了本教程的基本结构，通过十几个程序介绍了用 <code>Go</code> 语言如何实现类似读写文件、文本格式化、创建图像、网络客户端和服务器通讯等日常工作。</p>\n<p>第二章描述了 <code>Go</code> 语言程序的基本元素结构、变量、新类型定义、包和文件、以及作用域等概念。第三章讨论了数字、布尔值、字符串和常量，并演示了如何显示和处理 Unicode 字符。第四章描述了符合类型，从简单的数组、字典、切片到动态列表。第五章涵盖了函数，并讨论了错误处理、<code>panic</code> 和 <code>recover</code>，还有 <code>defer</code>语句。</p>\n<p>第一章到第五章是基础部分，主流命令式编程语言这部分都类似。个别之处，<code>Go</code> 语言有自己特色的语法和风格，但是大多数程序员能很快适应。其余章节是 <code>Go</code> 语言 特有的：方法、接口、并发、包、测试和反射等语言特性。</p>\n<p><code>Go</code> 语言的面向对象机制与一般语言不同。它没有类层次结构，甚至可以说没有类；仅仅通过组合（而不是继承）简单的对象来构建复杂的对象。方法不仅可以定义在结构体上，而且，可以定义在任何用户自定义类型上；并且，具体类型和抽象类型（接口）之间的关系是隐式的，所以很多类型的设计者可能并不知道该类型到底实现了那些接口。方法在第六章讨论，接口在第七章讨论。</p>\n<p>第八章讨论了基于顺序通信进程（CSP）概念的并发编程，使用 <code>goroutines</code> 和 <code>channels</code> 处理并发编程。第九章则讨论了传统的基于共享变量的并发编程。</p>\n<p>第十章描述了包机制和包的组织结构。这一章还展示了如何有效地利用 <code>Go</code> 自带的工具、使用单个命令完成变异、测试、基准测试、代码格式化、文档以及其他诸多任务。</p>\n<p>第十一章讨论了单元测试，<code>Go</code> 语言的工具和标准库中集成了轻量级的测试功能，避免了强大但复杂的测试框架。测试库提供了一些基本构件，必要时可以用来构件复杂的测试构件。</p>\n<p>第十二章讨论了反射，一种程序在运行期间审视自己的能力。反射是一个强大的编程工具，不过要谨慎地使用；这一章利用反射机制实现一些重要的 <code>Go</code> 语言 库函数，展示了反射的强大用法。第十三章解释了底层的编程的细节，在必要时，可以使用 <code>unsafe</code> 包绕过 <code>Go</code> 语言安全的类型系统。</p>\n<p>每一章都有一些练习题，你可以用来测试你对 <code>Go</code> 的理解，你也可以探讨书中浙西列子的扩展和替代。</p>\n<p>书中的所有代码都可以从 <a href=\"https://github.com/adonovan/gopl.io\">https://github.com/adonovan/gopl.io</a> 上的仓库下载。 <code>git clone https://github.com/adonovan/gopl.io</code> 命令将代码下载至当前目录。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ git <span class=\"hljs-built_in\">clone</span> https://github.com/adonovan/gopl.io    <span class=\"hljs-comment\"># 克隆代码</span><br>$ go run gopl.io/ch1/helloworld/main.go <span class=\"hljs-comment\"># 运行代码</span><br>Hello, 世界                     <span class=\"hljs-comment\"># 这是中文</span><br><br></code></pre></td></tr></table></figure>\n\n<p>运行这些例子需要安装 <code>Go 1.5</code> 以上的版本。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ go version<br>go version go1.5 linux/amd64<br></code></pre></td></tr></table></figure>\n\n<p>如果使用其他的操作系统，请参考 <a href=\"https://golang.org/doc/install\">https://golang.org/doc/install</a> 提供的说明安装。</p>\n<h2 id=\"更多的信息\"><a href=\"#更多的信息\" class=\"headerlink\" title=\"更多的信息\"></a>更多的信息</h2><p>最佳的帮助信息来自 <code>Go</code> 语言的官方网站，<a href=\"https://go.dev/\">https://go.dev</a> ，它提供了完善的参考文档，包括编程语言和标准库等诸多权威的帮助信息。同时也包含了如何编写更地道的 <code>Go</code> 程序的基本教程，还有各种各样的在线文本资源和视频资源，他们是本书最有价值的补充。<code>Go</code> 语言的官方博客 <a href=\"https://go.dev/blog/\">https://go.dev/blog/</a> 会不定期发布一些 <code>Go</code> 语言最好的实践文章，包括当前语言的发展状态、未来的计划、会议报告和 <code>Go</code>  语言相关的各种会议的主题等信息（译注： <a href=\"https://go.dev/talks/\">https://go.dev/talks/</a> 包含了官方收录的各种报告的讲稿）。</p>\n<p>在线访问一个有价值的地方是可以从 Web 页面运行 <code>Go</code> 语言的程序。这个功能由来自 <a href=\"https://go.dev/play/\">https://go.dev/play/</a> 的 <code>Go Playground</code> 提供，并且可以方便的嵌入到其它页面中。</p>\n<p>Playground 可以简单的通过执行一个小程序来测试对语法、语义和程序库的理解，类似其他很多语言提供的 REPL 即时运行的工具。同时它可以生成对应的 <code>URL</code> ,非常适合共享 <code>Go</code> 语言代码片段、汇报 bug 或者提供反馈意见等。</p>\n<p>基于 Playground 构建的 [Go Tour](<a href=\"https://go.dev/tour/welcome/1\">A Tour of Go</a>) ,是一个系列的 <code>Go</code> 语言入门教程，它包含了诸多基本概念和结构相关的并可在线运行的互动小程序。</p>\n<p>当然，Playground 和 Tour 也有一些限制，它们只能导入标准库，而且因为安全的原因对一些网络库做了限制。如果要在编译和运行时需要访问互联网，对于一些更复杂的实验，你可能需要在自己的电脑上构建并运行程序。幸运的是下载 <code>Go</code> 语言的过程很简单，从 <a href=\"https://go.dev/\">https://go.dev</a> 下载安装包应该不超过几分钟，然后就可以在自己电脑上编写和运行 <code>Go</code> 程序了。</p>\n<p><code>Go</code> 语言是一个开源项目，你可以在 <a href=\"https://pkg.go.dev/std\">Standard library - Go Packages</a> 阅读标准库中任意函数和类型的实现代码，和下载安装包的代码完全一致。这样，你可以知道很多函数是如何工作的， 通过挖掘找出一些答案的细节，或者仅仅是出于欣赏专业级 <code>Go</code> 代码。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Go-语言起源\"><a href=\"#Go-语言起源\" class=\"headerlink\" title=\"Go 语言起源\"></a>Go 语言起源</h2><p>编程语言的演化就像生物物种的演化类似，一个成功的编程语言的后代一般都会继承他们祖先的优点；当然有时多种语言杂合也可能会产生令人惊讶的特性；还有一些激进的新特性可能并没有先例。我们可以通过观察编程语言和软硬件是如何互相促进、互相影响的演化过程而学到很多。</p>\n<p>下图展示了有哪些早期的编程语言对 Go 语言的设计产生了重要影响。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs mermaid\">graph TD<br>AA[&quot;CSP \\n (Hoare，1978)&quot;] --&gt; AB[&quot;Squeak \\n (Cardelli &amp; Pike, 1985)&quot;]<br>AB --&gt; AC[&quot;Newsqueak \\n (Pike 1989)&quot;]<br>AC --&gt; AD[&quot;Alef \\n (Winterbottom,1992)&quot;]<br>AD --&gt; G<br><br>BA[&quot;ALGOL \\n （60 Backus et al., 1960）&quot;] --&gt; BB[&quot;Pascal \\n （Wirth ，1970） &quot;]<br>BB --&gt; BC[&quot;Modula-2 \\n （Wirth， 1980）&quot;]<br>BB --&gt; AC<br>BC --&gt; BD[&quot;Oberon \\n （Wirth &amp; Gutknecht, 1986）&quot;]<br>BD --&gt; BE[&quot;Object Oberon \\n (Mossenbock,Termpl&amp;Griesemer,1990)&quot;]<br>BD &amp; BE --&gt; BF[&quot;Oberon-2\\n(Wirth&amp;Mossenbock,1991)&quot;]<br>BF --&gt; G<br><br>BA --&gt; CA[&quot;C \\n (Ritchie，1972)&quot;]<br>CA --&gt; G[&quot;Go \\n (Griesemer,Pike &amp; Thompson, 2009)&quot;]<br></code></pre></td></tr></table></figure>\n\n<p><code>Go</code> 语言有时候被描述为 “类 <code>C</code> 语言”，或者是 21 世纪的 <code>C</code> 语言。<code>Go</code> 从 <code>C</code> 语言继承了相似的表达式语法、控制流结构、基础数据类型、调用参数传值、指针等很多思想，还有 <code>C</code> 语言一直所看重的编译后机器码的运行效率以及和现有操作系统的无缝适配。</p>\n<p>但是在 <code>Go</code> 语言的家族树中还有其他的祖先。其中有一个影响力的分支来自 <a href=\"https://en.wikipedia.org/wiki/Niklaus_Wirth\">Niklaus Wirth</a> 所设计的 <code>Pascal</code> 语言。然后 <code>Modula-2</code> 语言激发了包的概念。然后 <code>Oberon</code> 语言摒弃了模块接口文件和模块实现文件之间的区别。第二代的 <code>Oberon-2</code> 语言直接影响了包的导入和声明的语法，还有<code>Oberon</code>语言的面向对象特性所提供的方法的声明语法等。</p>\n<p><code>Go</code> 语言的另一支祖先，带来了<code>Go</code> 语言有别于其他语言的重要特性，灵感来自贝尔实验室的 <a href=\"https://en.wikipedia.org/wiki/Tony_Hoare\">Tony Hoare</a> 于1978年发表的鲜为外界所知的关于并发研究的基础文献 <em>顺序通信进程</em>（ communicating sequential processes，缩写为<code>CSP</code>）。在<code>CSP</code>中，程序是一组中间没有共享状态的平行运行的处理过程，它们之间使用管道进行通信和控制同步。不过 <a href=\"https://en.wikipedia.org/wiki/Tony_Hoare\">Tony Hoare</a> 的 <code>CSP</code> 只是一个用于描述并发性基本概念的描述语言，并不是一个可以编写可执行程序的通用编程语言。</p>\n<p>接下来， Rob Pike 和其他人开始不断尝试将 <a href=\"https://en.wikipedia.org/wiki/Communicating_sequential_processes\">CSP</a> 引入实际的编程语言中。他们第一次尝试引入 <code>CSP</code> 特性的编程语言叫 <a href=\"http://doc.cat-v.org/bell_labs/squeak/\">squeak</a> (老鼠间交流的语言)，是一个提供鼠标和键盘事件处理的编程语言，它的管道是静态创建的。然后是改进版的 <a href=\"http://doc.cat-v.org/bell_labs/squeak/\">Newsqueak</a> 语言，提供了类似 <code>C</code> 语言语句和表达是的语法和类似 <code>Pascal</code> 语言的推导语法。<code>Newsqueak</code> 是一个带垃圾回收的纯函数式语言，它再次针对键盘、鼠标和窗口事件管理。但是在 <code>Newsqueak</code>  语言中管道是动态创建的，属于第一类值，可以保存到变量中。</p>\n<p>在 Plan9 操作系统中，这些优秀的想法被吸收到了一个叫 Alef 的编程语言中。Alef 试图将 <code>Newsqueak</code> 语言改造为系统编程语言，但是因为缺少垃圾回收机制而导致并发编程很痛苦。</p>\n<p><code>Go</code> 语言的一些其他特性零散地来自于其他一些编程语言；比如 iota 语法是从 APL 语言借鉴，词法作用域与嵌套函数来自于 <code>Scheme</code> 语言。当然，我们也可以从 <code>Go</code> 中发现很多创新的设计。比如 Go 语言的切片为动态数组提供了有效的随机存取的性能，这可能会让人联想到链表的底层的共享机制。还有 Go 语言新发明的 defer 语句。</p>\n<h2 id=\"Go-语言项目\"><a href=\"#Go-语言项目\" class=\"headerlink\" title=\"Go 语言项目\"></a>Go 语言项目</h2><p>所有的编程语言都反映了语言设计者对编程哲学的反思，通常包括之前的语言所暴露的一些不足地方的改进。<code>Go</code> 项目是在 Google 公司维护超级复杂的几个软件系统遇到的一些问题的反思（但是这类问题绝不是 Google 公司所特有的）。</p>\n<p>正如 Rob Pike 所说，“软件的复杂性是乘法级相关的”，通过增加一个部分的复杂性来修复问题通常将慢慢地增加其他部分的复杂性。通过增加功能、选项和配置是修复问题的最快途径，但是这很容易让人忘记简洁的内涵，既从长远来看，简洁依然是好软件的关键因素。</p>\n<p>简洁的设计需要在工作开始的时候舍弃不必要的想法，并且在软件的生命周期内严格区别好的改变和坏的改变。通过足够的努力，一个好的改变可以在不破坏原有完整概念的前提下保持自适应，正如 Fred Brooks 所说的“概念完整性”；而一个坏的改变则不能达到这个效果，他们仅仅是通过肤浅和简单的妥协来破坏原有设计的一致性。只有通过简洁的设计，才能让一个系统保持稳定、安全和持续的进化。</p>\n<p><code>Go</code> 项目包括编程语言本身，附带了相关的工具和标准库，最后但并非代表不重要的是，关于简洁编程哲学的宣言。就事后诸葛亮的角度来看，<code>Go</code> 语言的这些地方都做的还不错：拥有自动垃圾回收、一个包系统、函数作为一等公民、词法作用域、系统调用接口、只读的 UTF8 字符串等。但是 <code>Go</code> 语言本身只有很少的特性，也不太可能添加太多的特性。例如，它没有隐式的数值转换、没有构造函数和析构函数、没有运算符重载、没有默认参数、没有泛型（1.19 已有）、没有继承、没有异常没有宏、没有函数修饰、更没有线程局部存储。但是，语言本身是成熟和稳定的，而且承诺保证向后兼容：用之前的 <code>Go</code> 语言编写的程序可以用新版本的 <code>Go</code> 语言编译器和标准库直接构建而不需要修改代码。</p>\n<p><code>Go</code> 语言有足够的类型系统以避免动态语言中那些粗心的类型错误，但是，<code>Go</code> 语言的类型系统相比传统的强类型语言又要简洁很多。虽然，有时候这会导致一个“无类型”的抽象概念，但是 <code>Go</code> 语言程序员并不需要像 <code>C++</code> 或 <code>Haskell</code> 程序员那样纠结于具体类型的安全属性。在实践中， <code>Go</code> 语言简洁的类型系统会给程序员带来了更多的安全性和更好的运行时性能。</p>\n<p><code>Go</code> 语言鼓励当代计算机系统设计的原则，特别是局部的重要性。它的内置数据类型和大多数的准库数据结构都经过精心设计而避免显式的初始化或隐式的构造函数，因为很少的内存分配和内存初始化代码被隐藏在库代码中了。 <code>Go</code> 语言的聚合类型（结构体和数组）可以直接操作他们的元素，只需要更少的存储空间、更少的内存写操作，而且指针操作比其他间接操作的语言也更有效率。由于现代计算机是一个并行的机器， <code>Go</code> 语言提供了基于 <code>CSP</code> 的并发特性支持。<code>Go</code> 语言的动态栈使得轻量级线程 <code>goroutine</code> 的初始栈可以很小，因此，创建一个 <code>goroutine</code> 的代价很小，创建百万级的 <code>goroutine</code> 完全是可行的。</p>\n<p><code>Go</code> 语言的标准库（通常被称为语言自带的电池），提供了清晰的构建模块和公共接口，包含<code>I/O</code> 操作、文本处理、图像、密码学、网络和分布式应用程序等，并支持许多标准化的文件格式和编解码协议。库和工具使用了大量的约定来减少额外的配置和解释，从而最终简化程序的逻辑，而且，每个 <code>Go</code> 程序结构都是如此的相似，因此，<code>Go</code> 程序也很容易学习。使用 <code>Go</code> 语言自带工具构建 <code>Go</code> 语言项目只需要使用文件名和标识符名称，一个偶尔的特殊注释来确定所有的库、可执行文件、测试、基准测试、例子、以及特定于平台的变量、项目的文档等；<code>Go</code> 语言源代码本身就包含了构建规范。</p>\n<h2 id=\"本书的组织\"><a href=\"#本书的组织\" class=\"headerlink\" title=\"本书的组织\"></a>本书的组织</h2><p>我们假设你已经有一种或多种其他编程语言的使用经历，不管是类似于<code>C</code>、<code>C++</code> 或 <code>Java</code> 的编译型语言，还是类似于 <code>Python</code>、<code>Ruby</code>、<code>JavaScript</code> 的脚本语言，因此我们不会像对完全的编程语言初学者那样解释所有的细节。因为，<code>Go</code> 语言的变量、常量、表达式、控制流和函数等基本语法也是类似的。</p>\n<p>第一章包含了本教程的基本结构，通过十几个程序介绍了用 <code>Go</code> 语言如何实现类似读写文件、文本格式化、创建图像、网络客户端和服务器通讯等日常工作。</p>\n<p>第二章描述了 <code>Go</code> 语言程序的基本元素结构、变量、新类型定义、包和文件、以及作用域等概念。第三章讨论了数字、布尔值、字符串和常量，并演示了如何显示和处理 Unicode 字符。第四章描述了符合类型，从简单的数组、字典、切片到动态列表。第五章涵盖了函数，并讨论了错误处理、<code>panic</code> 和 <code>recover</code>，还有 <code>defer</code>语句。</p>\n<p>第一章到第五章是基础部分，主流命令式编程语言这部分都类似。个别之处，<code>Go</code> 语言有自己特色的语法和风格，但是大多数程序员能很快适应。其余章节是 <code>Go</code> 语言 特有的：方法、接口、并发、包、测试和反射等语言特性。</p>\n<p><code>Go</code> 语言的面向对象机制与一般语言不同。它没有类层次结构，甚至可以说没有类；仅仅通过组合（而不是继承）简单的对象来构建复杂的对象。方法不仅可以定义在结构体上，而且，可以定义在任何用户自定义类型上；并且，具体类型和抽象类型（接口）之间的关系是隐式的，所以很多类型的设计者可能并不知道该类型到底实现了那些接口。方法在第六章讨论，接口在第七章讨论。</p>\n<p>第八章讨论了基于顺序通信进程（CSP）概念的并发编程，使用 <code>goroutines</code> 和 <code>channels</code> 处理并发编程。第九章则讨论了传统的基于共享变量的并发编程。</p>\n<p>第十章描述了包机制和包的组织结构。这一章还展示了如何有效地利用 <code>Go</code> 自带的工具、使用单个命令完成变异、测试、基准测试、代码格式化、文档以及其他诸多任务。</p>\n<p>第十一章讨论了单元测试，<code>Go</code> 语言的工具和标准库中集成了轻量级的测试功能，避免了强大但复杂的测试框架。测试库提供了一些基本构件，必要时可以用来构件复杂的测试构件。</p>\n<p>第十二章讨论了反射，一种程序在运行期间审视自己的能力。反射是一个强大的编程工具，不过要谨慎地使用；这一章利用反射机制实现一些重要的 <code>Go</code> 语言 库函数，展示了反射的强大用法。第十三章解释了底层的编程的细节，在必要时，可以使用 <code>unsafe</code> 包绕过 <code>Go</code> 语言安全的类型系统。</p>\n<p>每一章都有一些练习题，你可以用来测试你对 <code>Go</code> 的理解，你也可以探讨书中浙西列子的扩展和替代。</p>\n<p>书中的所有代码都可以从 <a href=\"https://github.com/adonovan/gopl.io\">https://github.com/adonovan/gopl.io</a> 上的仓库下载。 <code>git clone https://github.com/adonovan/gopl.io</code> 命令将代码下载至当前目录。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ git <span class=\"hljs-built_in\">clone</span> https://github.com/adonovan/gopl.io    <span class=\"hljs-comment\"># 克隆代码</span><br>$ go run gopl.io/ch1/helloworld/main.go <span class=\"hljs-comment\"># 运行代码</span><br>Hello, 世界                     <span class=\"hljs-comment\"># 这是中文</span><br><br></code></pre></td></tr></table></figure>\n\n<p>运行这些例子需要安装 <code>Go 1.5</code> 以上的版本。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ go version<br>go version go1.5 linux/amd64<br></code></pre></td></tr></table></figure>\n\n<p>如果使用其他的操作系统，请参考 <a href=\"https://golang.org/doc/install\">https://golang.org/doc/install</a> 提供的说明安装。</p>\n<h2 id=\"更多的信息\"><a href=\"#更多的信息\" class=\"headerlink\" title=\"更多的信息\"></a>更多的信息</h2><p>最佳的帮助信息来自 <code>Go</code> 语言的官方网站，<a href=\"https://go.dev/\">https://go.dev</a> ，它提供了完善的参考文档，包括编程语言和标准库等诸多权威的帮助信息。同时也包含了如何编写更地道的 <code>Go</code> 程序的基本教程，还有各种各样的在线文本资源和视频资源，他们是本书最有价值的补充。<code>Go</code> 语言的官方博客 <a href=\"https://go.dev/blog/\">https://go.dev/blog/</a> 会不定期发布一些 <code>Go</code> 语言最好的实践文章，包括当前语言的发展状态、未来的计划、会议报告和 <code>Go</code>  语言相关的各种会议的主题等信息（译注： <a href=\"https://go.dev/talks/\">https://go.dev/talks/</a> 包含了官方收录的各种报告的讲稿）。</p>\n<p>在线访问一个有价值的地方是可以从 Web 页面运行 <code>Go</code> 语言的程序。这个功能由来自 <a href=\"https://go.dev/play/\">https://go.dev/play/</a> 的 <code>Go Playground</code> 提供，并且可以方便的嵌入到其它页面中。</p>\n<p>Playground 可以简单的通过执行一个小程序来测试对语法、语义和程序库的理解，类似其他很多语言提供的 REPL 即时运行的工具。同时它可以生成对应的 <code>URL</code> ,非常适合共享 <code>Go</code> 语言代码片段、汇报 bug 或者提供反馈意见等。</p>\n<p>基于 Playground 构建的 [Go Tour](<a href=\"https://go.dev/tour/welcome/1\">A Tour of Go</a>) ,是一个系列的 <code>Go</code> 语言入门教程，它包含了诸多基本概念和结构相关的并可在线运行的互动小程序。</p>\n<p>当然，Playground 和 Tour 也有一些限制，它们只能导入标准库，而且因为安全的原因对一些网络库做了限制。如果要在编译和运行时需要访问互联网，对于一些更复杂的实验，你可能需要在自己的电脑上构建并运行程序。幸运的是下载 <code>Go</code> 语言的过程很简单，从 <a href=\"https://go.dev/\">https://go.dev</a> 下载安装包应该不超过几分钟，然后就可以在自己电脑上编写和运行 <code>Go</code> 程序了。</p>\n<p><code>Go</code> 语言是一个开源项目，你可以在 <a href=\"https://pkg.go.dev/std\">Standard library - Go Packages</a> 阅读标准库中任意函数和类型的实现代码，和下载安装包的代码完全一致。这样，你可以知道很多函数是如何工作的， 通过挖掘找出一些答案的细节，或者仅仅是出于欣赏专业级 <code>Go</code> 代码。</p>\n"},{"title":"如何有效阅读一本书","date":"2023-10-20T01:31:41.000Z","_content":"\n## 图书信息\n\n|书名|如何有效阅读一本书：笔记读书法|\n|----|----|\n|作者|【日】奥野宣之|\n|出版社|江西人民出版社|\n|阅读时间|2023-10-01 ~ 2023-10-20|\n\n## 笔记\n\n摘抄：\n\n笔记：\n\n\n感想：\n一直以为读书就是看过之后就可以了，其实不然，要将书中的内容内化为自己的本能才能算掌握好这本书\n\n## 参考\n\n\n\n\n","source":"_posts/notes/effective_read.md","raw":"---\ntitle: 如何有效阅读一本书\ndate: 2023-10-20 09:31:41\ncategories:\n- 读书笔记\ntags:\n- 阅读\n- 笔记\n---\n\n## 图书信息\n\n|书名|如何有效阅读一本书：笔记读书法|\n|----|----|\n|作者|【日】奥野宣之|\n|出版社|江西人民出版社|\n|阅读时间|2023-10-01 ~ 2023-10-20|\n\n## 笔记\n\n摘抄：\n\n笔记：\n\n\n感想：\n一直以为读书就是看过之后就可以了，其实不然，要将书中的内容内化为自己的本能才能算掌握好这本书\n\n## 参考\n\n\n\n\n","slug":"notes/effective_read","published":1,"updated":"2023-10-20T01:40:05.419Z","_id":"clnxxtxtl00009bvaa640ctf6","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"图书信息\"><a href=\"#图书信息\" class=\"headerlink\" title=\"图书信息\"></a>图书信息</h2><table>\n<thead>\n<tr>\n<th>书名</th>\n<th>如何有效阅读一本书：笔记读书法</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>作者</td>\n<td>【日】奥野宣之</td>\n</tr>\n<tr>\n<td>出版社</td>\n<td>江西人民出版社</td>\n</tr>\n<tr>\n<td>阅读时间</td>\n<td>2023-10-01 ~ 2023-10-20</td>\n</tr>\n</tbody></table>\n<h2 id=\"笔记\"><a href=\"#笔记\" class=\"headerlink\" title=\"笔记\"></a>笔记</h2><p>摘抄：</p>\n<p>笔记：</p>\n<p>感想：<br>一直以为读书就是看过之后就可以了，其实不然，要将书中的内容内化为自己的本能才能算掌握好这本书</p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"图书信息\"><a href=\"#图书信息\" class=\"headerlink\" title=\"图书信息\"></a>图书信息</h2><table>\n<thead>\n<tr>\n<th>书名</th>\n<th>如何有效阅读一本书：笔记读书法</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>作者</td>\n<td>【日】奥野宣之</td>\n</tr>\n<tr>\n<td>出版社</td>\n<td>江西人民出版社</td>\n</tr>\n<tr>\n<td>阅读时间</td>\n<td>2023-10-01 ~ 2023-10-20</td>\n</tr>\n</tbody></table>\n<h2 id=\"笔记\"><a href=\"#笔记\" class=\"headerlink\" title=\"笔记\"></a>笔记</h2><p>摘抄：</p>\n<p>笔记：</p>\n<p>感想：<br>一直以为读书就是看过之后就可以了，其实不然，要将书中的内容内化为自己的本能才能算掌握好这本书</p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2>"}],"PostAsset":[],"PostCategory":[{"post_id":"cli2pbl1h00001sn17u7xflj4","category_id":"cli2pbl1n00011sn14mdq3g4y","_id":"cli2pbl1q00041sn1hcxv89r4"},{"post_id":"cli2pbl1t000a1sn18fad1q8x","category_id":"cli2pbl1n00011sn14mdq3g4y","_id":"cli2pbl1w000f1sn1cwku2sbn"},{"post_id":"cli2pbl1u000b1sn1h1dsbqm7","category_id":"cli2pbl1n00011sn14mdq3g4y","_id":"cli2pbl1w000h1sn1aht12bwy"},{"post_id":"cli2pbl1v000d1sn1363hf3ll","category_id":"cli2pbl1n00011sn14mdq3g4y","_id":"cli2pbl1y000l1sn1267f8wcz"},{"post_id":"cli2pbl1v000e1sn1ghg4fzic","category_id":"cli2pbl1n00011sn14mdq3g4y","_id":"cli2pbl1y000n1sn1hlqpcm7t"},{"post_id":"cli2pbl1w000g1sn1e0599hrj","category_id":"cli2pbl1n00011sn14mdq3g4y","_id":"cli2pbl1z000q1sn1bi4u46wu"},{"post_id":"cli2pbl1x000k1sn1c1wa9xkk","category_id":"cli2pbl1n00011sn14mdq3g4y","_id":"cli2pbl1z000s1sn15v9820zr"},{"post_id":"clnxapgrt0000j8vaef2cgmt4","category_id":"clnxapgrx0001j8va1456fvft","_id":"clnxapgs10004j8va73949xun"},{"post_id":"clnxapgs70007j8va082sgnr9","category_id":"clnxapgrx0001j8va1456fvft","_id":"clnxapgs8000aj8va0err24ju"},{"post_id":"clnxxtxtl00009bvaa640ctf6","category_id":"clnxxtxts00019bvaf17v5vcp","_id":"clnxxtxtw00049bva3uf88j5z"}],"PostTag":[{"post_id":"cli2pbl1h00001sn17u7xflj4","tag_id":"cli2pbl1p00021sn1amcz0wy4","_id":"cli2pbl1r00061sn10gvw1g78"},{"post_id":"cli2pbl1h00001sn17u7xflj4","tag_id":"cli2pbl1p00031sn1bdfs8s7t","_id":"cli2pbl1r00071sn10yp82d1w"},{"post_id":"cli2pbl1h00001sn17u7xflj4","tag_id":"cli2pbl1q00051sn1g85bhf6w","_id":"cli2pbl1r00081sn1g7e82v3c"},{"post_id":"cli2pbl1t000a1sn18fad1q8x","tag_id":"cli2pbl1p00021sn1amcz0wy4","_id":"cli2pbl1x000j1sn15umxgi9c"},{"post_id":"cli2pbl1t000a1sn18fad1q8x","tag_id":"cli2pbl1v000c1sn1161v8ev9","_id":"cli2pbl1y000m1sn19skw651r"},{"post_id":"cli2pbl1t000a1sn18fad1q8x","tag_id":"cli2pbl1q00051sn1g85bhf6w","_id":"cli2pbl1z000p1sn15k7fhrc3"},{"post_id":"cli2pbl1u000b1sn1h1dsbqm7","tag_id":"cli2pbl1p00021sn1amcz0wy4","_id":"cli2pbl1z000r1sn10bedfl63"},{"post_id":"cli2pbl1u000b1sn1h1dsbqm7","tag_id":"cli2pbl1w000i1sn1hgpm9l6l","_id":"cli2pbl20000u1sn1696c560d"},{"post_id":"cli2pbl1u000b1sn1h1dsbqm7","tag_id":"cli2pbl1q00051sn1g85bhf6w","_id":"cli2pbl20000v1sn1dgrp0tjg"},{"post_id":"cli2pbl1v000d1sn1363hf3ll","tag_id":"cli2pbl1p00021sn1amcz0wy4","_id":"cli2pbl20000x1sn1805m5yai"},{"post_id":"cli2pbl1v000d1sn1363hf3ll","tag_id":"cli2pbl1z000o1sn1863g75na","_id":"cli2pbl20000y1sn11z9u1tvn"},{"post_id":"cli2pbl1v000d1sn1363hf3ll","tag_id":"cli2pbl1q00051sn1g85bhf6w","_id":"cli2pbl20000z1sn1fwsp4d8d"},{"post_id":"cli2pbl1v000e1sn1ghg4fzic","tag_id":"cli2pbl1p00021sn1amcz0wy4","_id":"cli2pbl2000111sn1bgl3gmm3"},{"post_id":"cli2pbl1v000e1sn1ghg4fzic","tag_id":"cli2pbl1z000t1sn1hjnq8f2n","_id":"cli2pbl2000121sn1aavbf1vc"},{"post_id":"cli2pbl1v000e1sn1ghg4fzic","tag_id":"cli2pbl1q00051sn1g85bhf6w","_id":"cli2pbl2000131sn12kg699dq"},{"post_id":"cli2pbl1w000g1sn1e0599hrj","tag_id":"cli2pbl1p00021sn1amcz0wy4","_id":"cli2pbl2000141sn12fupflts"},{"post_id":"cli2pbl1w000g1sn1e0599hrj","tag_id":"cli2pbl20000w1sn1gb1vbhvw","_id":"cli2pbl2000151sn15ziw1hej"},{"post_id":"cli2pbl1w000g1sn1e0599hrj","tag_id":"cli2pbl1q00051sn1g85bhf6w","_id":"cli2pbl2000161sn1a2rs83ts"},{"post_id":"cli2pbl1x000k1sn1c1wa9xkk","tag_id":"cli2pbl1p00021sn1amcz0wy4","_id":"cli2pbl2000171sn1dl2feyr6"},{"post_id":"cli2pbl1x000k1sn1c1wa9xkk","tag_id":"cli2pbl2000101sn19sur9s2z","_id":"cli2pbl2000181sn188dx4y8t"},{"post_id":"cli2pbl1x000k1sn1c1wa9xkk","tag_id":"cli2pbl1q00051sn1g85bhf6w","_id":"cli2pbl2100191sn140uq0g9t"},{"post_id":"clnxapgrt0000j8vaef2cgmt4","tag_id":"clnxapgs00002j8vaa7s0gsyd","_id":"clnxapgs10005j8va6xi7gwqo"},{"post_id":"clnxapgrt0000j8vaef2cgmt4","tag_id":"clnxapgs00003j8vagnix2bh1","_id":"clnxapgs10006j8va6ldgbks6"},{"post_id":"clnxapgs70007j8va082sgnr9","tag_id":"clnxapgs00002j8vaa7s0gsyd","_id":"clnxapgs70008j8va4jhpaeqz"},{"post_id":"clnxapgs70007j8va082sgnr9","tag_id":"clnxapgs00003j8vagnix2bh1","_id":"clnxapgs80009j8vabm4bd14g"},{"post_id":"clnxxtxtl00009bvaa640ctf6","tag_id":"clnxxtxtv00029bva0d113b6f","_id":"clnxxtxtx00059bvab88q9jfm"},{"post_id":"clnxxtxtl00009bvaa640ctf6","tag_id":"clnxxtxtw00039bvaewcj1r9i","_id":"clnxxtxtx00069bvacynt1zdg"}],"Tag":[{"name":"写作","_id":"cli2pbl1p00021sn1amcz0wy4"},{"name":"标点符号","_id":"cli2pbl1p00031sn1bdfs8s7t"},{"name":"规范","_id":"cli2pbl1q00051sn1g85bhf6w"},{"name":"数值","_id":"cli2pbl1v000c1sn1161v8ev9"},{"name":"参考链接","_id":"cli2pbl1w000i1sn1hgpm9l6l"},{"name":"段落","_id":"cli2pbl1z000o1sn1863g75na"},{"name":"文档","_id":"cli2pbl1z000t1sn1hjnq8f2n"},{"name":"文本","_id":"cli2pbl20000w1sn1gb1vbhvw"},{"name":"标题","_id":"cli2pbl2000101sn19sur9s2z"},{"name":"golang","_id":"clnxapgs00002j8vaa7s0gsyd"},{"name":"gopl","_id":"clnxapgs00003j8vagnix2bh1"},{"name":"阅读","_id":"clnxxtxtv00029bva0d113b6f"},{"name":"笔记","_id":"clnxxtxtw00039bvaewcj1r9i"}]}}