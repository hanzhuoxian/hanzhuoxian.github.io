<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title></title>
    <link href="/2024/01/08/golang/mind/"/>
    <url>/2024/01/08/golang/mind/</url>
    
    <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mindmap">root(xx)<br>    xx<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Go语言目录规范</title>
    <link href="/2024/01/05/blog/go_dir/"/>
    <url>/2024/01/05/blog/go_dir/</url>
    
    <content type="html"><![CDATA[<pre><code class=" mermaid">mindmap  root)Go 语言目录结构规范(    平铺式目录结构        概念：平铺方式就是在项目的根目录下存放项目的代码        使用场景            代码框架            库    结构化目录结构        参考：https://github.com/golang-standards/project-layout</code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>go</tag>
      
      <tag>目录规范</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>代码提交规范</title>
    <link href="/2024/01/02/blog/git_commit/"/>
    <url>/2024/01/02/blog/git_commit/</url>
    
    <content type="html"><![CDATA[<h2 id="什么是-Commit-Message"><a href="#什么是-Commit-Message" class="headerlink" title="什么是 Commit Message"></a>什么是 Commit Message</h2><p>我们在做代码开发时经常需要提交代码，比如 <code>git commit -m &#39;feat: 增加登录功能&#39;</code>，<code>-m</code> 后面的就是 Commit Message。用来说明提交内容。</p><h2 id="规范化-Commit-Message-的作用"><a href="#规范化-Commit-Message-的作用" class="headerlink" title="规范化 Commit Message 的作用"></a>规范化 Commit Message 的作用</h2><ul><li>清晰的知道每个 commit 的变更内容</li><li>基于 Commit Message 进行过滤查找</li><li>基于 Commit Message 生成 Change Log</li><li>依据某些类型的 Commit Message 触发构建流程</li><li>确定语义化版本的版本号</li></ul><h2 id="Commit-Message-的规范有哪些？"><a href="#Commit-Message-的规范有哪些？" class="headerlink" title="Commit Message 的规范有哪些？"></a>Commit Message 的规范有哪些？</h2><p>jQuery<br>JSHint<br>Ember<br>AngularJS-Karma<br>AngularJS-Angular</p><h3 id="Angular-规范的结构"><a href="#Angular-规范的结构" class="headerlink" title="Angular 规范的结构"></a>Angular 规范的结构</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs git">&lt;type&gt;[optional scope]: &lt;description&gt;<br>// 空行<br>[optional body]<br>// 空行<br>[optional footer(s)]<br></code></pre></td></tr></table></figure><h3 id="Header"><a href="#Header" class="headerlink" title="Header"></a>Header</h3><h4 id="type-类型"><a href="#type-类型" class="headerlink" title="type 类型"></a>type 类型</h4><pre><code class=" mermaid">mindmap  root)type 类型(    代码类      新增功能（feat）      修复缺陷（fix）      性能优化（pref）      格式化代码（style）      优化代码（refactor）    非代码类      更新测试代码（test）      部署相关变更（ci）      文档类型变更（docs）      其他变更（chore）</code></pre><h4 id="scope"><a href="#scope" class="headerlink" title="scope"></a>scope</h4><p>scope 是用来说明影响范围的，必须是名词。</p><h4 id="subject"><a href="#subject" class="headerlink" title="subject"></a>subject</h4><p>subject 是 commit 的简短描述，必须以动词开头、使用现在时。</p><h3 id="Body"><a href="#Body" class="headerlink" title="Body"></a>Body</h3><p>描述具体做了哪些变更，修改动机，与上一版本相比的改动点。</p><h3 id="Footer"><a href="#Footer" class="headerlink" title="Footer"></a>Footer</h3><p>主要用来说明本次 commit 导致的后果。</p><h4 id="不兼容的改动"><a href="#不兼容的改动" class="headerlink" title="不兼容的改动"></a>不兼容的改动</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk">BREAKING CHANGE: &lt;breaking change summary&gt;<br><span class="hljs-regexp">//</span> 空行<br>&lt;breaking change description + migration instructions&gt;<br><span class="hljs-regexp">//</span> 空行<br><span class="hljs-regexp">//</span> 空行<br>Fixes <span class="hljs-comment">#&lt;issue number&gt;</span><br></code></pre></td></tr></table></figure><h4 id="关闭-Issue"><a href="#关闭-Issue" class="headerlink" title="关闭 Issue"></a>关闭 Issue</h4><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">Change pause <span class="hljs-built_in">version</span> <span class="hljs-built_in">value</span> <span class="hljs-built_in">to</span> <span class="hljs-keyword">a</span> <span class="hljs-built_in">constant</span> <span class="hljs-keyword">for</span> image<br>   <br>   Closes <span class="hljs-comment">#1137</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>git</tag>
      
      <tag>git commit</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>工作流设计</title>
    <link href="/2024/01/02/blog/git_flow/"/>
    <url>/2024/01/02/blog/git_flow/</url>
    
    <content type="html"><![CDATA[<h2 id="什么是工作流"><a href="#什么是工作流" class="headerlink" title="什么是工作流"></a>什么是工作流</h2><h2 id="集中式工作流"><a href="#集中式工作流" class="headerlink" title="集中式工作流"></a>集中式工作流</h2><p>定义：都使用 master 分支或者特定的某一分支进行开发。<br>适用场景：团队人数少、开发不频繁、不需要同时维护多个版本的小项目。</p><h2 id="功能分支工作流"><a href="#功能分支工作流" class="headerlink" title="功能分支工作流"></a>功能分支工作流</h2><p>定义：开发新功能时基于 master 新建一个分支，在新分支上开发测试，测试完成之后合并回 master 分支。最后的合并不能直接合并需要提 Pull Request。<br>适用场景：开发团队相对固定，规模较小的项目中。</p><h2 id="Git-Flow-工作流"><a href="#Git-Flow-工作流" class="headerlink" title="Git Flow 工作流"></a>Git Flow 工作流</h2><p>定义：Git Flow 中定义了 5 种分支，分别是 master、develop、feature、release 和 hotfix，其中 master 和 develop 为常驻分支，不同研发阶段回用到不同的分支。</p><table><thead><tr><th>分支</th><th>描述</th></tr></thead><tbody><tr><td>master</td><td>该分支上的最新代码永远是发布状态，不能直接在该分支上开发。master 每合并一个 hotfix&#x2F;release 都会打上版本标签</td></tr><tr><td>develop</td><td>该分支上的代码是开发中的最新版本，该分支只做合并操作，不能直接在该分支上开发</td></tr><tr><td>feature</td><td>在研发阶段用来做功能开发，一个新功能会基于 develop 创建一个 feature 分支。功能开发完成后合并到 develop 分支并删除 feature 分支</td></tr><tr><td>release</td><td>在发布阶段用作版本发布的预发布分支，基于 develop 分支创建，分支名建议命名为 release&#x2F;xxx-xxx 测试后合并回 master 和 develop</td></tr><tr><td>hotfix</td><td>在维护阶段用来做 bug 修复</td></tr><tr><td>适用场景：开发团队相对固定，项目较大的项目</td><td></td></tr></tbody></table><h2 id="Git-Forking-工作流"><a href="#Git-Forking-工作流" class="headerlink" title="Git Forking 工作流"></a>Git Forking 工作流</h2><p>定义：fork 仓库到自己账号下，功能分支开发，推入自己仓库远端分支，对源仓库提交 PR。<br>适用场景：开源项目、开发者有衍生版本的需求、开发人员可能是可以访问到项目的任何人。</p>]]></content>
    
    
    
    <tags>
      
      <tag>git</tag>
      
      <tag>git flow</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>变量</title>
    <link href="/2023/11/28/golang/var/"/>
    <url>/2023/11/28/golang/var/</url>
    
    <content type="html"><![CDATA[<h2 id="什么是变量"><a href="#什么是变量" class="headerlink" title="什么是变量"></a>什么是变量</h2><p>变量是指一个抽象的存储地址，它含有被称为一个值的某种已知或未知信息量，并且配对了关联的符号名称（变量名）。变量的主要作用是代表数据，让程序设计者在编写代码时无需关心具体的数值，只需要通过这个符号来操作数据。</p><h2 id="变量声明"><a href="#变量声明" class="headerlink" title="变量声明"></a>变量声明</h2><p><code>var</code> 声明语句可以创建一个特定类型的变量。变量声明的一般语法如下：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">var</span> 变量名 类型 = 初始值<br></code></pre></td></tr></table></figure><p>类型或者初始值可以省略，如果只强调类型不关心初始值那么就省略初始值，Go 语言会使用零值初始化。如果有明确的初始值那么可以省略类型 Go 语言会自动推导变量类型</p><table><thead><tr><th>类型</th><th>零值</th></tr></thead><tbody><tr><td>数值类型</td><td>0</td></tr><tr><td>字符串</td><td>“”</td></tr><tr><td>布尔类型</td><td>false</td></tr><tr><td>接口</td><td>nil</td></tr><tr><td>引用类型（slice、map、chan、func）</td><td>nil</td></tr><tr><td>数组</td><td>对应类型的0值</td></tr><tr><td>结构体</td><td>结构体字段对应的0值</td></tr></tbody></table><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">package</span> main<br><br><span class="hljs-keyword">import</span> (<br><span class="hljs-string">&quot;fmt&quot;</span><br>)<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> &#123;<br><span class="hljs-keyword">var</span> defaultInt <span class="hljs-type">int64</span><br><span class="hljs-keyword">var</span> defaultString <span class="hljs-type">string</span><br><span class="hljs-keyword">var</span> defaultBool <span class="hljs-type">bool</span><br><span class="hljs-keyword">var</span> defaultSlice []<span class="hljs-type">int</span><br><span class="hljs-keyword">var</span> defaultMap <span class="hljs-keyword">map</span>[<span class="hljs-type">string</span>]<span class="hljs-type">int</span><br><span class="hljs-keyword">var</span> defaultChan <span class="hljs-keyword">chan</span> <span class="hljs-type">int</span><br><span class="hljs-keyword">var</span> defaultFunc <span class="hljs-function"><span class="hljs-keyword">func</span><span class="hljs-params">()</span></span><br><span class="hljs-keyword">var</span> defaultInterface <span class="hljs-keyword">interface</span>&#123;&#125;<br><span class="hljs-keyword">var</span> defaultArray [<span class="hljs-number">3</span>]<span class="hljs-type">int</span><br><span class="hljs-keyword">var</span> defaultStruct <span class="hljs-keyword">struct</span>&#123; name <span class="hljs-type">string</span> &#125;<br>fmt.Println(defaultInt)<br>fmt.Println(defaultString)<br>fmt.Println(defaultBool)<br>fmt.Println(defaultSlice == <span class="hljs-literal">nil</span>)<br>fmt.Println(defaultMap == <span class="hljs-literal">nil</span>)<br>fmt.Println(defaultChan)<br>fmt.Println(defaultFunc)<br>fmt.Println(defaultInterface)<br>fmt.Println(defaultArray)<br>fmt.Println(defaultStruct)<br>&#125;<br><br></code></pre></td></tr></table></figure><p>输出</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">0<br><br><span class="hljs-literal">false</span><br><span class="hljs-literal">true</span><br>map[]<br>&lt;nil&gt;<br>&lt;nil&gt;<br>&lt;nil&gt;<br>[0 0 0]<br>&#123;&#125;<br></code></pre></td></tr></table></figure><p>可以声明一组变量</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">var</span> i, j, k <span class="hljs-type">int</span>                 <span class="hljs-comment">// int, int, int</span><br><span class="hljs-keyword">var</span> b, f, s = <span class="hljs-literal">true</span>, <span class="hljs-number">2.3</span>, <span class="hljs-string">&quot;four&quot;</span> <span class="hljs-comment">// bool, float64, string</span><br></code></pre></td></tr></table></figure><h2 id="简短变量声明"><a href="#简短变量声明" class="headerlink" title="简短变量声明"></a>简短变量声明</h2><p>在函数内部，有一种称为简短变量声明语句的形式可用于声明和初始化局部变量。它以 <code>name := value</code> 的形式声明变量，变量的类型根据表达式来自动推导。</p><p>简短变量的组声明</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs go">i, j := <span class="hljs-number">0</span>, <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>声明和赋值的区别：声明会分配内存空间，赋值只是改变内存空间的值。</p><h2 id="指针"><a href="#指针" class="headerlink" title="指针"></a>指针</h2><p>一个变量对应一个保存了变量对应类型值的内存空间。普通变量在声明语句创建时被绑定到一个变量名。比如叫 <code>x</code> 的变量，但是还有很多变量始终以表达式方式引入 例如 <code>x[i]</code> 或 <code>x.f</code>。</p><p>一个指针的值是另一个变量的地址，一个指针对应变量在内存中的存储位置。通过指针我们可以直接读取或更新该变量的值，而不需知道该变量的名字。</p><p>如果用 <code>var x int</code> 声明语句声明一个<code>x</code>变量，那么<code>&amp;x</code>表达式（取x变量的内存地址）将产生一个指向该整数变量的指针，指针对应的数据类型是 <code>*int</code>，指针被称之为“指向int类型的指针”。如果指针名字为 <code>p</code>，那么可以说“<code>p</code>指针指向变量<code>x</code>”，或者说“<code>p</code>指针保存了<code>x</code>变量的内存地址”。同时<code>*p</code>表达式对应<code>p</code>指针指向的变量的值。一般<code>*p</code>表达式读取指针指向的变量的值，这里为<code>int</code>类型的值，同时因为<code>*p</code>对应一个变量，所以该表达式也可以出现在赋值语句的左边，表示更新指针所指向的变量的值。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">var</span> x <span class="hljs-type">int</span><br>p := &amp;x<br>fmt.Println(*p)<br>*p = <span class="hljs-number">1</span><br>fmt.Println(*p)<br></code></pre></td></tr></table></figure><h2 id="new-函数"><a href="#new-函数" class="headerlink" title="new 函数"></a>new 函数</h2><p>另一个创建变量的方法是调用内建的<code>new</code>函数。表达式<code>new(T)</code>将创建一个<code>T</code>类型的匿名变量，初始化为<code>T</code>类型的零值，然后返回变量地址，返回的指针类型为<code>*T</code>。</p><h2 id="变量生命周期"><a href="#变量生命周期" class="headerlink" title="变量生命周期"></a>变量生命周期</h2><p>变量生命周期指的是变量在程序运行期间存在的有效时间段。对于包一级变量来说他们和程序的运行周期是一致的。对于局部变量来说，每次从创建一个变量的声明语句开始，直到不在引用这个变量为止，然后变量的存储空间可能会被回收。对于局部变量来说存在逃逸为全局变量。</p><h2 id="变量作用域"><a href="#变量作用域" class="headerlink" title="变量作用域"></a>变量作用域</h2><p>一个声明语句将程序中的实体和一个名字关联，比如一个函数或一个变量。声明语句的作用域是指源代码中可以有效使用这个名字的范围。</p><p>不要将作用域和生命周期混为一谈。声明语句的作用域对应的是一个源代码的文本区域；它是一个编译时的属性。一个变量的生命周期是指程序运行时变量存在的有效时间段，在此时间区域内它可以被程序的其他部分引用；是一个运行时的概念。</p><p>句法块：由花括号包含的一些列语句，句法块内部声明的名字是无法被外部块访问的。<br>词法块：虽然没有括号包含，但是他们是一个声明群组。全局的源代码在一个全局词法块中。对于每个包，每个 for、if 和 switch 语句 也都有对应的词法块。每个 switch 和 select 的分支也有独立的词法块。</p>]]></content>
    
    
    <categories>
      
      <category>Go 学习笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>golang</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>命名</title>
    <link href="/2023/11/28/golang/name/"/>
    <url>/2023/11/28/golang/name/</url>
    
    <content type="html"><![CDATA[<h3 id="命名字符组成"><a href="#命名字符组成" class="headerlink" title="命名字符组成"></a>命名字符组成</h3><p>Go 语言中的函数名、变量名、常量名、类型名、语句标号和包名等所有的命名，都遵循一个简单的命名规则：一个名字必须以一个字母（Unicode字母）或下划线开头，后面可以跟任意数量的字母、数字或下划线。名字的长度没有限制，尽量使用短小的名字。</p><h3 id="命名大小写敏感"><a href="#命名大小写敏感" class="headerlink" title="命名大小写敏感"></a>命名大小写敏感</h3><p>大写字母和小写字母是不同的：<code>heapSort</code>和<code>Heapsort</code>是两个不同的名字。</p><h3 id="关键字不能用于自定义名字"><a href="#关键字不能用于自定义名字" class="headerlink" title="关键字不能用于自定义名字"></a>关键字不能用于自定义名字</h3><p>关键字不能用于自定义的名字只能在特定的语法结构中使用，下面是所有关键字：</p><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs golang"><span class="hljs-keyword">break</span>      <span class="hljs-keyword">default</span>       <span class="hljs-function"><span class="hljs-keyword">func</span>     <span class="hljs-title">interface</span>   <span class="hljs-title">select</span></span><br><span class="hljs-keyword">case</span>       <span class="hljs-keyword">defer</span>         <span class="hljs-keyword">go</span>       <span class="hljs-keyword">map</span>         <span class="hljs-keyword">struct</span><br><span class="hljs-keyword">chan</span>       <span class="hljs-keyword">else</span>          <span class="hljs-keyword">goto</span>     <span class="hljs-keyword">package</span>     <span class="hljs-keyword">switch</span><br><span class="hljs-keyword">const</span>      <span class="hljs-keyword">fallthrough</span>   <span class="hljs-keyword">if</span>       <span class="hljs-keyword">range</span>       <span class="hljs-keyword">type</span><br><span class="hljs-keyword">continue</span>   <span class="hljs-keyword">for</span>           <span class="hljs-keyword">import</span>   <span class="hljs-keyword">return</span>      <span class="hljs-keyword">var</span><br></code></pre></td></tr></table></figure><h3 id="预定义名字可以使用，但不推荐"><a href="#预定义名字可以使用，但不推荐" class="headerlink" title="预定义名字可以使用，但不推荐"></a>预定义名字可以使用，但不推荐</h3><p>预定义的名字，包括内建常量、类型和函数；预定义名字可以重新使用，但是最好不要这么做。</p><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs golang"><span class="hljs-comment">// 内建常量</span><br><span class="hljs-literal">true</span> <span class="hljs-literal">false</span> <span class="hljs-literal">iota</span> <span class="hljs-literal">nil</span><br><br><span class="hljs-comment">// 内建类型</span><br><span class="hljs-type">int</span> <span class="hljs-type">int8</span> <span class="hljs-type">int16</span> <span class="hljs-type">int32</span> <span class="hljs-type">int64</span><br><span class="hljs-type">uint</span> <span class="hljs-type">uint8</span> <span class="hljs-type">uint16</span> <span class="hljs-type">uint32</span> <span class="hljs-type">uint64</span> <span class="hljs-type">uintptr</span><br><span class="hljs-type">float32</span> <span class="hljs-type">float64</span> <span class="hljs-type">complex128</span> <span class="hljs-type">complex64</span><br><span class="hljs-type">bool</span> <span class="hljs-type">byte</span> <span class="hljs-type">rune</span> <span class="hljs-type">string</span> <span class="hljs-type">error</span><br><br><span class="hljs-comment">// 内建函数</span><br><span class="hljs-built_in">make</span> <span class="hljs-built_in">len</span> <span class="hljs-built_in">cap</span> <span class="hljs-built_in">new</span> <span class="hljs-built_in">append</span> <span class="hljs-built_in">copy</span> <span class="hljs-built_in">close</span> <span class="hljs-built_in">delete</span><br><span class="hljs-built_in">complex</span> <span class="hljs-built_in">real</span> <span class="hljs-built_in">imag</span><br><span class="hljs-built_in">panic</span> <span class="hljs-built_in">recover</span><br></code></pre></td></tr></table></figure><h3 id="可见性"><a href="#可见性" class="headerlink" title="可见性"></a>可见性</h3><p>如果名字是在函数内定义，那么只在函数内有效，如果是在函数外定义的，那么在当前包内的所有文件都可以访问。名字开头字母的大小写决定了在包外的可见性。如果一个名字是大写字母开头的那么就可以被外部的包访问。</p><h3 id="使用驼峰命名"><a href="#使用驼峰命名" class="headerlink" title="使用驼峰命名"></a>使用驼峰命名</h3><p>当名字由几个单词组成时优先使用大小写分隔，而不是优先用下划线分隔。因此，在标准库有QuoteRuneToASCII和parseRequestLine这样的函数命名，但是一般不会用quote_rune_to_ASCII和parse_request_line这样的命名。而像ASCII和HTML这样的缩略词则避免使用大小写混合的写法，它们可能被称为htmlEscape、HTMLEscape或escapeHTML，但不会是escapeHtml。</p><h3 id="编程规范"><a href="#编程规范" class="headerlink" title="编程规范"></a>编程规范</h3><p><a href="https://github.com/xxjwxc/uber_go_guide_cn#%E9%A1%B6%E5%B1%82%E5%8F%98%E9%87%8F%E5%A3%B0%E6%98%8E">顶层变量声明</a><br><a href="https://github.com/xxjwxc/uber_go_guide_cn#%E6%9C%AC%E5%9C%B0%E5%8F%98%E9%87%8F%E5%A3%B0%E6%98%8E">本地变量声明</a><br><a href="https://github.com/xxjwxc/uber_go_guide_cn#%E5%87%BD%E6%95%B0%E5%90%8D">函数名</a><br><a href="https://github.com/xxjwxc/uber_go_guide_cn#%E9%94%99%E8%AF%AF%E5%91%BD%E5%90%8D">错误命名</a><br><a href="https://github.com/xxjwxc/uber_go_guide_cn#%E5%8C%85%E5%90%8D">包名</a></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://github.com/xxjwxc/uber_go_guide_cn">Uber Go 语言编码规范</a>，by Uber</p>]]></content>
    
    
    <categories>
      
      <category>Go 学习笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>golang</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>自控力</title>
    <link href="/2023/10/31/notes/self_control/"/>
    <url>/2023/10/31/notes/self_control/</url>
    
    <content type="html"><![CDATA[<h2 id="图书信息"><a href="#图书信息" class="headerlink" title="图书信息"></a>图书信息</h2><table><thead><tr><th>书名</th><th>自控力法</th></tr></thead><tbody><tr><td>作者</td><td>【英】凯利麦格尼格尔</td></tr><tr><td>出版社</td><td>京东读书</td></tr><tr><td>阅读时间</td><td>2023-10-30 ~ 2023</td></tr></tbody></table><h2 id="导言"><a href="#导言" class="headerlink" title="导言"></a>导言</h2><blockquote><p>自控只是一时的行为，而力不从心和失控却是常态。</p></blockquote><p>一直以为是自己菜，自己自控力不行，其实自己碰到的问题有可能是共性问题，碰到问题需要去查找相关资料、去研究、去学习和去解决。而不是一味的内疚。<br>——-end——-</p>]]></content>
    
    
    <categories>
      
      <category>读书笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>阅读</tag>
      
      <tag>笔记</tag>
      
      <tag>自控力</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>刘澜-《学习力 30 讲》</title>
    <link href="/2023/10/28/notes/learning_ability/"/>
    <url>/2023/10/28/notes/learning_ability/</url>
    
    <content type="html"><![CDATA[<h2 id="发刊词"><a href="#发刊词" class="headerlink" title="发刊词"></a>发刊词</h2><h3 id="有效学习的定义？"><a href="#有效学习的定义？" class="headerlink" title="有效学习的定义？"></a>有效学习的定义？</h3><blockquote><ol><li>你通过学习形成对各种问题的参考答案。</li><li>你把这个参考答案应用到自己的工作和生活之中，对自己的人生产生了积极的改变。</li></ol></blockquote><p>只学习没有应用就与不学习没有什么区别，学到之后需要用起来。学习学习力本身就是一门课用该课的知识学习该课，做到学以致用。</p><h3 id="什么叫学习力强？"><a href="#什么叫学习力强？" class="headerlink" title="什么叫学习力强？"></a>什么叫学习力强？</h3><blockquote><p>“听想变用” 四个方面能力都强</p><ol><li>听：听清楚，听明白。</li><li>想：自己动脑筋去想。老师讲的好不好，如果好好在哪里？如果不好不好在哪里？</li><li>变：你觉得某个老师讲的好，但是跟你实际情况有些距离，如何变一变把他讲的变成符合自己的需求。</li><li>用：我们学习知识必须用到自己身上。</li></ol></blockquote><p>原来这就是四问学习法，难道学习能力强就是四问学习法用的好的人？用一个成语来概括就是学以致用。</p><h3 id="学习力五项修炼"><a href="#学习力五项修炼" class="headerlink" title="学习力五项修炼"></a>学习力五项修炼</h3><blockquote><ol><li>反学习</li><li>参考答案思维方式</li><li>聚焦</li><li>模式化学习</li><li>深层迁移</li></ol></blockquote><p>学习力五项修炼是整篇课程的目录大纲。是整篇课程的核心思想。层层递进，互相关联。</p><h2 id="01-本质：学习力强的人是什么样的？"><a href="#01-本质：学习力强的人是什么样的？" class="headerlink" title="01 | 本质：学习力强的人是什么样的？"></a>01 | 本质：学习力强的人是什么样的？</h2><p>Q：你觉得学习力强的人是什么样的？他们有哪些特征值得你学习？</p><p>A：学习力强的人学的快，用的好，能坚持学习。特征：按时学习、学习深度很深。</p><blockquote><p>这个参考答案是：投资型学习者是学习力强的人，他们在学习上有长度、有宽度、有温度还有力度。</p></blockquote><h3 id="四种学习者"><a href="#四种学习者" class="headerlink" title="四种学习者"></a>四种学习者</h3><ul><li>生产型学习者：把时间用来生产产品或者提供服务，在当下产生了社会价值。</li><li>消费型学习者：你消费了一个产品或服务，当下感到身心愉悦。</li><li>投资型学习者:把时间花在当下不一定产生价值，但是在将来可以持久产生价值的活动。</li><li>浪费型学习者：如果你既没有生产、也没有消费、也没有投资那就是浪费了。</li></ul><p>我觉的我是一个浪费型学习者，学而不用，真的在浪费时间。</p><h3 id="投资型学习者的四大特征"><a href="#投资型学习者的四大特征" class="headerlink" title="投资型学习者的四大特征"></a>投资型学习者的四大特征</h3><ul><li>终身学习</li><li>全身学习</li><li>学以致用</li><li>有自己的方法论</li></ul><h2 id="02-方法：如何提升你的学习力？"><a href="#02-方法：如何提升你的学习力？" class="headerlink" title="02 | 方法：如何提升你的学习力？"></a>02 | 方法：如何提升你的学习力？</h2><p>学习力强的人的学习方法共性为五项修炼：</p><ul><li>反学习：指的是把你已经学到的错误的东西给清除掉。这是一种减法式学习。</li><li>参考答案思维方式：就是说你不管学了什么，都要把他当做参考答案，而不是标准答案。</li><li>聚焦：学的少 学得深</li><li>模式化学习：学习事物的本质，而本质是隐藏在表面之下的，不是那么容易被发现的。</li><li>深层迁移：就是把一种情景中学到的知识用到另一种情景之中。</li></ul><h2 id="03-路标：为什么成年人首先要反学习？"><a href="#03-路标：为什么成年人首先要反学习？" class="headerlink" title="03 | 路标：为什么成年人首先要反学习？"></a>03 | 路标：为什么成年人首先要反学习？</h2><h3 id="反学习的概念"><a href="#反学习的概念" class="headerlink" title="反学习的概念"></a>反学习的概念</h3><p>低阶反学习：清除一个错误的知识点。<br>高阶反学习：它清除的不是一个知识点，而是一种心智模式，这种心智模式可能对很多知识点或者对你的很多行为产生影响。</p><blockquote><p>怎么才更有利于孩子的学习，是赞扬还是批评？更利于孩子的学习的，不是赞扬也不是批评，而是反馈。这不仅对孩子适用，对成年人也适用。批评和赞扬对你的学习都没有多大帮助。对你的学习有实质性帮助的，是反馈。这是学习科学家得出的结论。</p></blockquote><blockquote><p>批评是说你做的不好，赞扬是说你做的好，而反馈的核心是告诉你下一步该怎么做。不管你现在做的好还是不好，反馈让你知道怎么做可以做的更好，所以反馈对学习更有效。</p></blockquote><h3 id="10-个学习上的坏习惯"><a href="#10-个学习上的坏习惯" class="headerlink" title="10 个学习上的坏习惯"></a>10 个学习上的坏习惯</h3><ol><li>标准答案思维方式，总是在寻找标准答案而不是在探索自己的答案。</li><li>学习方式是被动式学习。</li><li>在学习上害怕出错，认为出错时学的不好的表现。</li><li>在学习上追求全面发展，弥补短板，而不是围绕自己的擅长学习。</li><li>缺乏对学习的规划，不擅长管理自己的学习。</li><li>习惯了一个人学习，很少跟其他人进行讨论式的学习。</li><li>期待老师或专家提供答案，而不是把老师或专家作为对话的伙伴。</li><li>主要是在碎片化学习，虽然读了一些书，听了一些课，但是没有能够在书与书之间、课与课之间建立联系。</li><li>学而不用，好像学了很多知识但是生活还是老样子。</li><li>注重结果而非过程。</li></ol><h2 id="04-核心：为什么重要的问题没有标准答案？"><a href="#04-核心：为什么重要的问题没有标准答案？" class="headerlink" title="04 | 核心：为什么重要的问题没有标准答案？"></a>04 | 核心：为什么重要的问题没有标准答案？</h2><h3 id="什么是标准答案思维方式？"><a href="#什么是标准答案思维方式？" class="headerlink" title="什么是标准答案思维方式？"></a>什么是标准答案思维方式？</h3><p>第一：认为所有问题都有标准答案。<br>第二：认为权威掌握了标准答案。<br>第三：认为学习的方法就是让掌握了标准答案的人告诉你。</p><h3 id="世界上有三种问题"><a href="#世界上有三种问题" class="headerlink" title="世界上有三种问题"></a>世界上有三种问题</h3><ol><li>有标准答案的问题。比如中国的首都是哪里？</li><li>属于个人偏好问题。比如红烧肉好不好吃？</li><li>那些重要的社会和个人问题。比如怎么样才能搞定一个大客户？</li></ol><p>第二种和第三种都没有唯一正确的答案。但是第二种问题的答案无所谓对错也无所谓好坏；而第三种问题的答案尽管没有对错之分，但是有好坏之分。</p><p>要准确识别这三类问题，”不要把那些重要的社会和个人问题，当做简单的个人偏好问题来回答；不要把重要的社会和个人问题当做没有标准答案的问题来回答“。</p><h3 id="擅长学习的民族"><a href="#擅长学习的民族" class="headerlink" title="擅长学习的民族"></a>擅长学习的民族</h3><p>犹太人：第一：对真实的提问，第二：对权威的挑战。</p><h3 id="带着怀疑学习"><a href="#带着怀疑学习" class="headerlink" title="带着怀疑学习"></a>带着怀疑学习</h3><p>带着怀疑学习培养起参考答案思维方式。</p><p>带着怀疑学习是会学习的人的共同特征。</p><h2 id="05-方法：如何用加法做减法"><a href="#05-方法：如何用加法做减法" class="headerlink" title="05 | 方法：如何用加法做减法"></a>05 | 方法：如何用加法做减法</h2><h3 id="全面发展，弥补短板"><a href="#全面发展，弥补短板" class="headerlink" title="全面发展，弥补短板"></a>全面发展，弥补短板</h3><blockquote><p>建立聚焦新习惯。不要追求全面发展，而是聚焦在学习少数知识上。</p></blockquote><p>不要求全面发展，要在自己擅长的方向做到专家。</p><h3 id="碎片化学习"><a href="#碎片化学习" class="headerlink" title="碎片化学习"></a>碎片化学习</h3><blockquote><p>建立模式化学习新习惯。不是学习一个个碎片，而是学习深层知识，也就是模式。</p></blockquote><p>学习一个一个知识点很难形成自己的理论体系，所以也不太好应用。</p><h3 id="学而不用"><a href="#学而不用" class="headerlink" title="学而不用"></a>学而不用</h3><blockquote><p>建立深层迁移新习惯。深层迁移就是对模式进行迁移，这样可以把知识运用到大不相同的情景之中。</p></blockquote><p>学习过程中要多问自己对我有什么用</p><h2 id="06-路标：如何建立参考答案思维方式？"><a href="#06-路标：如何建立参考答案思维方式？" class="headerlink" title="06 | 路标：如何建立参考答案思维方式？"></a>06 | 路标：如何建立参考答案思维方式？</h2><h3 id="什么是参考答案思维方式？"><a href="#什么是参考答案思维方式？" class="headerlink" title="什么是参考答案思维方式？"></a>什么是参考答案思维方式？</h3><p>学习的对象是参考答案，学习的方法是比较不同的参考答案，学习的目标是掌握优秀的参考答案，并且建构自己的参考答案。</p><h3 id="如何建立参考大难思维方式？"><a href="#如何建立参考大难思维方式？" class="headerlink" title="如何建立参考大难思维方式？"></a>如何建立参考大难思维方式？</h3><ul><li>一句口诀：看情况（嘴上多说”看情况”，脑子里多想“看情况”）。</li><li>两句追问：为什么、怎么做。</li></ul><h3 id="真理论是看情况的"><a href="#真理论是看情况的" class="headerlink" title="真理论是看情况的"></a>真理论是看情况的</h3><p>符合论：认为与事实符合就是真理<br>融惯论：能举出证据说出理由就是真理<br>实用论：检验真理的唯一标准就是能否让我们更好的行动。</p><p>采用融惯论知道下的实用论，能让自己的人生过得更好。</p><h2 id="07-理论之钟：什么样的理论才算实用？"><a href="#07-理论之钟：什么样的理论才算实用？" class="headerlink" title="07 | 理论之钟：什么样的理论才算实用？"></a>07 | 理论之钟：什么样的理论才算实用？</h2><h3 id="好理论的三个标准"><a href="#好理论的三个标准" class="headerlink" title="好理论的三个标准"></a>好理论的三个标准</h3><ul><li>一般性</li><li>准确性</li><li>简单性</li></ul><h3 id="理论之钟"><a href="#理论之钟" class="headerlink" title="理论之钟"></a>理论之钟</h3><p>卡尔维克把好理论的三个标准画在了一个钟面上，12 点钟（一般性）、 4 点钟（准确性）、8 点钟（简单性）</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs"><br></code></pre></td></tr></table></figure><p>十点钟理论具有一般性和简单性，但是不太准确</p><p>我需要怎么做？</p><ol><li>学一些 10 点钟理论。</li><li>学习 10 点钟理论要注意到他的缺点。</li></ol><p>10 点钟理论：<br>管理者三大能力模型（技术能力、概念能力、人际能力）。</p><h2 id="08-策略一：为什么学会分类是关键？"><a href="#08-策略一：为什么学会分类是关键？" class="headerlink" title="08 | 策略一：为什么学会分类是关键？"></a>08 | 策略一：为什么学会分类是关键？</h2><h3 id="看情况的关键是分类"><a href="#看情况的关键是分类" class="headerlink" title="看情况的关键是分类"></a>看情况的关键是分类</h3><p>所谓分类，就是把事物分成不同的类别，其实就是分成不同的情况，然后根据不同的情况，进行相应的处理。所以说，看情况的一个主要方法，就是分类。</p><p>想法：看情况就是不能一概而论，要具体问题具体分析，对情况进行归类有助于提高问题的找到解决问题的经验。找到套路，找到学习参考答案的方向。</p><h3 id="洞见分类"><a href="#洞见分类" class="headerlink" title="洞见分类"></a>洞见分类</h3><p>比常见分类更高级，也更有效的分类方式，叫做“洞见分类”，洞见分类往往抓住了事物的本质。</p><p>洞见分类的三个特征：主观性、理想性、本质的。</p><p>洞见分类不仅仅在解决问题的时候可以直接用，用来吸收其他知识也很重要。</p><p>团队的一个常见的洞见分类：棒球队、橄榄球队、篮球队。</p><p>练习建立洞见分类</p><p>对于得到用户分类：<br>学习者分类：投资型学习者、生产型学习者、消费型学习者、浪费性学习者。<br>按学习方法分类：标准答案思维方式学习者、参考答案思维方式学习者。<br>按会不会学习：会学习的（掌握学习方法论）、不会学习的（学完和没学没什么区别的）</p><h2 id="09-策略二：怎样找到好的参考答案？"><a href="#09-策略二：怎样找到好的参考答案？" class="headerlink" title="09 | 策略二：怎样找到好的参考答案？"></a>09 | 策略二：怎样找到好的参考答案？</h2><p>标准参考答案：它是要找到一个在绝大多数情况下，更准确、更管用的参考答案，并且把这一答案作为”默认设置”来使用，所以把它叫作”标准参考答案”。</p><p>案例一：三步回答一切问题<br>第一步：说这个问题需要看情况<br>第二步：说出自己的洞见分类及每种情况的解决方案<br>第三步：分析具体的情况，参考哪一类分类的答案，并针对具体问题思考新的解决方案。</p><h2 id="学习知识的清单"><a href="#学习知识的清单" class="headerlink" title="学习知识的清单"></a>学习知识的清单</h2><ul><li><input disabled="" type="checkbox"> 这对我有什么用？</li><li><input disabled="" type="checkbox"> 他说的对吗？</li><li><input disabled="" type="checkbox"> 能分分类吗？</li></ul>]]></content>
    
    
    <categories>
      
      <category>读书笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>阅读</tag>
      
      <tag>笔记</tag>
      
      <tag>刘澜-《学习力 30 讲》</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何有效阅读一本书</title>
    <link href="/2023/10/20/notes/effective_read/"/>
    <url>/2023/10/20/notes/effective_read/</url>
    
    <content type="html"><![CDATA[<h2 id="图书信息"><a href="#图书信息" class="headerlink" title="图书信息"></a>图书信息</h2><table><thead><tr><th>书名</th><th>如何有效阅读一本书：笔记读书法</th></tr></thead><tbody><tr><td>作者</td><td>【日】奥野宣之</td></tr><tr><td>出版社</td><td>江西人民出版社</td></tr><tr><td>阅读时间</td><td>2023-10-01 ~ 2023-10-20</td></tr></tbody></table><h2 id="笔记"><a href="#笔记" class="headerlink" title="笔记"></a>笔记</h2><p>摘抄：</p><p>笔记：</p><p>感想：<br>一直以为读书就是看过之后就可以了，其实不然，要将书中的内容内化为自己的本能才能算掌握好这本书</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2>]]></content>
    
    
    <categories>
      
      <category>读书笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>阅读</tag>
      
      <tag>笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>标点符号规范</title>
    <link href="/2023/02/23/writing-standard/marks/"/>
    <url>/2023/02/23/writing-standard/marks/</url>
    
    <content type="html"><![CDATA[<h2 id="原则"><a href="#原则" class="headerlink" title="原则"></a>原则</h2><p>（1）中文语句的标点符号，均应该采取全角符号，这样可以与全角文字保持视觉的一致。</p><p>（2）如果整句为英文，则该句使用英文&#x2F;半角标点。</p><p>（3）句号、问号、叹号、逗号、顿号、分号和冒号不得出现在一行之首。</p><p>（4）点号（句号、逗号、顿号、分号、冒号）不得出现在标题的末尾，而标号（引号、括号、破折号、省略号、书名号、着重号、间隔号、叹号、问号）可以。</p><h2 id="句号"><a href="#句号" class="headerlink" title="句号"></a>句号</h2><p>（1）中文语句的结尾处应该用全角句号（<code>。</code>）。</p><p>（2）句子末尾用括号加注时，句号应在括号之外。</p><figure class="highlight plaintext"><figcaption><span>Text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Plain">错误：关于文件的输出，请参照第 1.3 节（见第 26 页。）<br><br>正确：关于文件的输出，请参照第 1.3 节（见第 26 页）。<br></code></pre></td></tr></table></figure><h2 id="逗号"><a href="#逗号" class="headerlink" title="逗号"></a>逗号</h2><p>（1）逗号（<code>，</code>）表示句子内部的一般性停顿。</p><p>（2）注意避免“一逗到底”，即整个段落除了结尾，全部停顿都使用逗号。</p><h2 id="顿号"><a href="#顿号" class="headerlink" title="顿号"></a>顿号</h2><p>（1）句子内部的并列词，应该用全角顿号(<code>、</code>) 分隔，而不用逗号，即使并列词是英语也是如此。</p><figure class="highlight plaintext"><figcaption><span>Text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Plain">错误：我最欣赏的科技公司有 Google, Facebook, 腾讯, 阿里和百度等。<br><br>正确：我最欣赏的科技公司有 Google、Facebook、腾讯、阿里和百度等。<br></code></pre></td></tr></table></figure><p>（2）英文句子中，并列词语之间使用半角逗号（<code>,</code>）分隔。</p><figure class="highlight plaintext"><figcaption><span>Text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Plain">例句：Microsoft Office includes Word, Excel, PowerPoint, Outlook and other components.<br></code></pre></td></tr></table></figure><p>（3）中文句子内部的并列词，最后一个尽量使用（<code>和</code>）来连接，使句子读起来更加连贯，下面两个句子都可以，第二个更优。</p><figure class="highlight plaintext"><figcaption><span>Text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Plain">正确：我最欣赏的科技公司有 Google、Facebook、腾讯、阿里，以及百度等。<br><br>正确：我最欣赏的科技公司有 Google、Facebook、腾讯、阿里和百度等。<br></code></pre></td></tr></table></figure><h2 id="分号"><a href="#分号" class="headerlink" title="分号"></a>分号</h2><p>（1）分号（<code>；</code>）表示复句内部并列分句之间的停顿。</p><h2 id="引号"><a href="#引号" class="headerlink" title="引号"></a>引号</h2><p>（1）引用时，应该使用全角双引号（<code>“ ”</code>），注意前后双引号不同。</p><figure class="highlight plaintext"><figcaption><span>Text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Plain">例句：许多人都认为客户服务的核心是“友好”和“专业”。<br></code></pre></td></tr></table></figure><p>（2）引号里面还要用引号时，外面一层用双引号，里面一层用单引号（<code>‘ ’</code>），注意前后单引号不同。</p><figure class="highlight plaintext"><figcaption><span>Text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Plain">例句：鲍勃解释道：“我要放音乐，可萨利说，‘不行！’。”<br></code></pre></td></tr></table></figure><h2 id="括号"><a href="#括号" class="headerlink" title="括号"></a>括号</h2><p>（1）补充说明时，使用全角圆括号（<code>（）</code>），括号前后不加空格。</p><figure class="highlight plaintext"><figcaption><span>Text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Plain">例句：请确认所有的连接（电缆和接插件）均安装牢固。<br></code></pre></td></tr></table></figure><p>（2）几种括号的中英文名称。</p><table><thead><tr><th></th><th align="center">英文</th><th align="center">中文</th></tr></thead><tbody><tr><td><code>&#123; &#125;</code></td><td align="center">braces 或 curly brackets</td><td align="center">大括号</td></tr><tr><td><code>[ ]</code></td><td align="center">square brackets 或 brackets</td><td align="center">方括号</td></tr><tr><td><code>&lt; &gt;</code></td><td align="center">angled brackets</td><td align="center">尖括号</td></tr><tr><td><code>( )</code></td><td align="center">parentheses</td><td align="center">圆括号</td></tr></tbody></table><h2 id="冒号"><a href="#冒号" class="headerlink" title="冒号"></a>冒号</h2><p>（1）全角冒号（<code>：</code>）常用在需要解释的词语后边，引出解释和说明。</p><figure class="highlight plaintext"><figcaption><span>Text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Plain">例句：请确认以下几项内容：时间、地点、活动名称和来宾数量。<br></code></pre></td></tr></table></figure><p>（2）表示时间时，应使用半角冒号（<code>:</code>）。</p><figure class="highlight plaintext"><figcaption><span>Text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Plain">例句：早上 8:00<br></code></pre></td></tr></table></figure><h2 id="省略号"><a href="#省略号" class="headerlink" title="省略号"></a>省略号</h2><p>（1）省略号（<code>⋯⋯</code>）表示语句未完、或者语气的不连续。</p><p>（2）省略号占两个汉字空间、包含六个省略点，不要使用<code>。。。</code>或<code>...</code>等非标准形式。</p><p>（3）省略号不应与“等”这个词一起使用。</p><figure class="highlight plaintext"><figcaption><span>Text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs Plain">错误：我们为会餐准备了香蕉、苹果、梨…等各色水果。<br><br>正确：我们为会餐准备了各色水果，有香蕉、苹果、梨⋯⋯<br><br>正确：我们为会餐准备了香蕉、苹果、梨等各色水果。<br></code></pre></td></tr></table></figure><h2 id="感叹号"><a href="#感叹号" class="headerlink" title="感叹号"></a>感叹号</h2><p>（1）应该使用平静的语气叙述，尽量避免使用感叹号（<code>！</code>）。</p><p>（2）不得多个感叹号连用，比如<code>！！</code>和<code>!!!</code>。</p><h2 id="破折号"><a href="#破折号" class="headerlink" title="破折号"></a>破折号</h2><p>（1）破折号<code>————</code>一般用于进一步解释。</p><p>（2）破折号应占两个汉字的位置。如果破折号本身只占一个汉字的位置，那么前后应该留出一个半角空格。</p><figure class="highlight plaintext"><figcaption><span>Text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Plain">例句：直觉————尽管它并不总是可靠的————告诉我，这事可能出了些问题。<br><br>例句：直觉 —— 尽管它并不总是可靠的 —— 告诉我，这事可能出了些问题。<br></code></pre></td></tr></table></figure><h2 id="连接号"><a href="#连接号" class="headerlink" title="连接号"></a>连接号</h2><p>（1）连接号用于连接两个类似的词。</p><p>（2）以下场合应该使用直线连接号（<code>-</code>），占一个半角字符的位置。</p><ul><li>两个名词的复合</li><li>图表编号</li></ul><figure class="highlight plaintext"><figcaption><span>Text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Plain">例句：氧化-还原反应<br><br>例句：图 1-1<br></code></pre></td></tr></table></figure><p>（3）数值范围（例如日期、时间或数字）应该使用波浪连接号（<code>～</code>）或一字号（<code>—</code>），占一个全角字符的位置。</p><figure class="highlight plaintext"><figcaption><span>Text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Plain">例句：2009 年～2011 年<br></code></pre></td></tr></table></figure><p>注意，波浪连接号前后两个值都建议加上单位。</p><p>（4）波浪连接号也可以用汉字“至”代替。</p><figure class="highlight plaintext"><figcaption><span>Text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Plain">例句：周围温度：-20 °C 至 -10 °C<br></code></pre></td></tr></table></figure><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://github.com/ruanyf/document-style-guide">中文技术文档的写作规范</a>，by 阮一峰</li></ul>]]></content>
    
    
    <categories>
      
      <category>写作标准</category>
      
    </categories>
    
    
    <tags>
      
      <tag>写作</tag>
      
      <tag>标点符号</tag>
      
      <tag>规范</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>文档规范</title>
    <link href="/2023/02/23/writing-standard/structure/"/>
    <url>/2023/02/23/writing-standard/structure/</url>
    
    <content type="html"><![CDATA[<h2 id="结构"><a href="#结构" class="headerlink" title="结构"></a>结构</h2><p>软件手册是一部完整的书，建议采用下面的结构。</p><ul><li><strong>简介</strong>（Introduction）：[必备] [文件] 提供对产品和文档本身的总体的、扼要的说明</li><li><strong>快速上手</strong>（Getting Started）：[可选] [文件] 如何最快速地使用产品</li><li><strong>入门篇</strong>（Basics）：[必备] [目录] 又称“使用篇”，提供初级的使用教程<ul><li><strong>环境准备</strong>（Prerequisite）：[必备] [文件] 软件使用需要满足的前置条件</li><li><strong>安装</strong>（Installation）：[可选] [文件] 软件的安装方法</li><li><strong>设置</strong>（Configuration）：[必备] [文件] 软件的设置</li></ul></li><li><strong>进阶篇</strong>（Advanced)：[可选] [目录] 又称“开发篇”，提供中高级的开发教程</li><li><strong>API</strong>（Reference）：[可选] [目录|文件] 软件 API 的逐一介绍</li><li><strong>FAQ</strong>：[可选] [文件] 常见问题解答</li><li><strong>附录</strong>（Appendix）：[可选] [目录] 不属于教程本身、但对阅读教程有帮助的内容<ul><li><strong>Glossary</strong>：[可选] [文件] 名词解释</li><li><strong>Recipes</strong>：[可选] [文件] 最佳实践</li><li><strong>Troubleshooting</strong>：[可选] [文件] 故障处理</li><li><strong>ChangeLog</strong>：[可选] [文件] 版本说明</li><li><strong>Feedback</strong>：[可选] [文件] 反馈方式</li></ul></li></ul><p>下面是两个真实范例，可参考。</p><ul><li><a href="https://redux.js.org/introduction/getting-started">Redux 手册</a></li><li><a href="http://flight-manual.atom.io/">Atom 手册</a></li></ul><h2 id="文件名"><a href="#文件名" class="headerlink" title="文件名"></a>文件名</h2><p>文档的文件名不得含有空格。</p><p>文件名必须使用半角字符，不得使用全角字符。这也意味着，中文不能用于文件名。</p><figure class="highlight plaintext"><figcaption><span>Text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Plain">错误：名词解释.md<br><br>正确：glossary.md<br></code></pre></td></tr></table></figure><p>文件名建议只使用小写字母，不使用大写字母。</p><figure class="highlight plaintext"><figcaption><span>Text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Plain">错误：TroubleShooting.md<br><br>正确：troubleshooting.md<br></code></pre></td></tr></table></figure><p>为了醒目，某些说明文件的文件名，可以使用大写字母，比如<code>README</code>、<code>LICENSE</code>。</p><p>文件名包含多个单词时，单词之间建议使用半角的连词线（<code>-</code>）分隔。</p><figure class="highlight plaintext"><figcaption><span>Text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Plain">不佳：advanced_usage.md<br><br>正确：advanced-usage.md<br></code></pre></td></tr></table></figure><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://github.com/ruanyf/document-style-guide">中文技术文档的写作规范</a>，by 阮一峰</li></ul>]]></content>
    
    
    <categories>
      
      <category>写作标准</category>
      
    </categories>
    
    
    <tags>
      
      <tag>写作</tag>
      
      <tag>规范</tag>
      
      <tag>文档</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>参考链接规范</title>
    <link href="/2023/02/23/writing-standard/reference/"/>
    <url>/2023/02/23/writing-standard/reference/</url>
    
    <content type="html"><![CDATA[<ul><li><a href="https://www.taodocs.com/p-51273.html">产品手册中文写作规范</a>, by 华为</li><li><a href="http://guide.daocloud.io/dcs/%E5%86%99%E4%BD%9C%E8%A7%84%E8%8C%83%E5%92%8C%E6%A0%BC%E5%BC%8F%E8%A7%84%E8%8C%83-9153803.html">写作规范和格式规范</a>, by DaoCloud</li><li><a href="http://www.hitachi-tc.co.jp/company/thesis/thesis.pdf">技术写作技巧在日汉翻译中的应用</a>, by 刘方</li><li><a href="https://www.lengoo.de/documents/styleguides/lengoo_styleguide_ZH.pdf">简体中文规范指南</a>, by lengoo</li><li><a href="https://open.leancloud.cn/copywriting-style-guide.html">文档风格指南</a>, by LeanCloud</li><li><a href="https://docs.google.com/document/d/1R8lMCPf6zCD5KEA8ekZ5knK77iw9J-vJ6vEopPemqZM/edit">豌豆荚文案风格指南</a>, by 豌豆荚</li><li><a href="https://github.com/sparanoid/chinese-copywriting-guidelines">中文文案排版指北</a>, by sparanoid</li><li><a href="http://w3c.github.io/clreq/">中文排版需求</a>, by W3C</li><li><a href="http://www.ruanyifeng.com/blog/2017/02/filename-should-be-lowercase.html">为什么文件名要小写？</a>, by 阮一峰</li><li><a href="https://developers.google.com/style/">Google Developer Documentation Style Guide</a>, by Google</li><li><a href="http://www.moe.gov.cn/ewebeditor/uploadfile/2015/01/13/20150113091154536.pdf">出版物上数字用法的规定（国家标准GBT15835－2011）</a></li><li><a href="https://zh.wikisource.org/zh-hans/GB_3100-1993_%E5%9B%BD%E9%99%85%E5%8D%95%E4%BD%8D%E5%88%B6%E5%8F%8A%E5%85%B6%E5%BA%94%E7%94%A8">GB 3100-1993 国际单位制及其应用</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>写作标准</category>
      
    </categories>
    
    
    <tags>
      
      <tag>写作</tag>
      
      <tag>规范</tag>
      
      <tag>参考链接</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数值规范</title>
    <link href="/2023/02/23/writing-standard/number/"/>
    <url>/2023/02/23/writing-standard/number/</url>
    
    <content type="html"><![CDATA[<h2 id="半角数字"><a href="#半角数字" class="headerlink" title="半角数字"></a>半角数字</h2><p>阿拉伯数字一律使用半角形式，不得使用全角形式。</p><figure class="highlight plaintext"><figcaption><span>Text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Plain">错误：这件商品的价格是１０００元。<br><br>正确：这件商品的价格是 1000 元。<br></code></pre></td></tr></table></figure><h2 id="千分号"><a href="#千分号" class="headerlink" title="千分号"></a>千分号</h2><p>数值为千位以上，应添加千分号（半角逗号）。</p><figure class="highlight plaintext"><figcaption><span>Text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Plain">XXX 公司的实收资本为 ￥1,258,000 人民币。<br></code></pre></td></tr></table></figure><p>对于 4 位的数值，千分号是选用的，比如<code>1000</code>和<code>1,000</code>都可以接受。对于 4 位以上的数值，应添加千分号。</p><h2 id="货币"><a href="#货币" class="headerlink" title="货币"></a>货币</h2><p>货币应为阿拉伯数字，并在数字前写出货币符号，或在数字后写出货币中文名称。</p><figure class="highlight plaintext"><figcaption><span>Text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Plain">$1,000<br>1,000 美元<br></code></pre></td></tr></table></figure><p>英文的货币名称，建议参考国际标准 <a href="https://en.wikipedia.org/wiki/ISO_4217">ISO 4217</a>。</p><h2 id="数值范围"><a href="#数值范围" class="headerlink" title="数值范围"></a>数值范围</h2><p>表示数值范围时，用波浪线（<code>～</code>）或一字线（<code>—</code>）连接。参见《标点符号》一节的“连接号”部分。</p><p>带有单位或百分号时，两个数字建议都要加上单位或百分号。</p><figure class="highlight plaintext"><figcaption><span>Text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Plain">132 kg～234 kg<br><br>67%～89%<br></code></pre></td></tr></table></figure><h2 id="变化程度的表示法"><a href="#变化程度的表示法" class="headerlink" title="变化程度的表示法"></a>变化程度的表示法</h2><p>数字的增加要使用“增加了”、“增加到”。“了”表示增量，“到”表示定量。</p><figure class="highlight plaintext"><figcaption><span>Text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs Plain">增加到过去的两倍<br>（过去为一，现在为二）<br><br>增加了两倍<br>（过去为一，现在为三）<br></code></pre></td></tr></table></figure><p>数字的减少要使用“降低了”、“降低到”。“了”表示增量，“到”表示定量。</p><figure class="highlight plaintext"><figcaption><span>Text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs Plain">降低到百分之八十<br>（定额是一百，现在是八十）<br><br>降低了百分之八十<br>（原来是一百，现在是二十）<br></code></pre></td></tr></table></figure><p>不能用“降低 N 倍”或“减少 N 倍”的表示法，要用“降低百分之几”或“减少百分之几”。因为减少（或降低）一倍表示数值原来为一百，现在等于零。</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://github.com/ruanyf/document-style-guide">中文技术文档的写作规范</a>，by 阮一峰</li></ul>]]></content>
    
    
    <categories>
      
      <category>写作标准</category>
      
    </categories>
    
    
    <tags>
      
      <tag>写作</tag>
      
      <tag>规范</tag>
      
      <tag>数值</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>文本规范</title>
    <link href="/2023/02/23/writing-standard/text/"/>
    <url>/2023/02/23/writing-standard/text/</url>
    
    <content type="html"><![CDATA[<h2 id="字间距"><a href="#字间距" class="headerlink" title="字间距"></a>字间距</h2><p>（1）全角中文字符与半角英文字符之间，应有一个半角空格。</p><figure class="highlight plaintext"><figcaption><span>Text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Plain">错误：本文介绍如何快速启动Windows系统。<br><br>正确：本文介绍如何快速启动 Windows 系统。<br></code></pre></td></tr></table></figure><p>（2）全角中文字符与半角阿拉伯数字之间，有没有半角空格都可，但必须保证风格统一，不能两种风格混杂。</p><figure class="highlight plaintext"><figcaption><span>Text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Plain">正确：2011年5月15日，我订购了5台笔记本电脑与10台平板电脑。<br><br>正确：2011 年 5 月 15 日，我订购了 5 台笔记本电脑与 10 台平板电脑。<br></code></pre></td></tr></table></figure><p>半角的百分号，视同阿拉伯数字。</p><figure class="highlight plaintext"><figcaption><span>Text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Plain">正确：今年我国经济增长率是6.5%。<br><br>正确：今年我国经济增长率是 6.5%。<br></code></pre></td></tr></table></figure><p>（3）英文单位若不翻译，单位前的阿拉伯数字与单位符号之间，应留出适当的空隙。</p><figure class="highlight plaintext"><figcaption><span>Text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Plain">例1：一部容量为 16 GB 的智能手机<br><br>例2：1 h = 60 min = 3,600 s<br></code></pre></td></tr></table></figure><p>（4）半角英文字符和半角阿拉伯数字，与全角标点符号之间不留空格。</p><figure class="highlight plaintext"><figcaption><span>Text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Plain">错误：他的电脑是 MacBook Air 。<br><br>正确：他的电脑是 MacBook Air。<br></code></pre></td></tr></table></figure><h2 id="句子"><a href="#句子" class="headerlink" title="句子"></a>句子</h2><p>（1）避免使用长句。</p><p>不包含任何标点符号的单个句子，或者以逗号分隔的句子构件，长度尽量保持在 20 个字以内；20～29 个字的句子，可以接受；30～39 个字的句子，语义必须明确，才能接受；多于 40 个字的句子，任何情况下都不能接受。</p><figure class="highlight plaintext"><figcaption><span>Text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Plain">错误：本产品适用于从由一台服务器进行动作控制的单一节点结构到由多台服务器进行动作控制的并行处理程序结构等多种体系结构。<br><br>正确：本产品适用于多种体系结构。无论是由一台服务器（单一节点结构），还是由多台服务器（并行处理结构）进行动作控制，均可以使用本产品。<br></code></pre></td></tr></table></figure><p>逗号分割的长句，总长度不应该超过 100 字或者正文的 3 行。</p><p>（2）尽量使用简单句和并列句，避免使用复合句。</p><figure class="highlight plaintext"><figcaption><span>Text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Plain">并列句：他昨天生病了，没有参加会议。<br><br>复合句：那个昨天生病的人没有参加会议。<br></code></pre></td></tr></table></figure><p>（3）同样一个意思，尽量使用肯定句表达，不使用否定句表达。</p><figure class="highlight plaintext"><figcaption><span>Text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Plain">错误：请确认没有接通装置的电源。<br><br>正确：请确认装置的电源已关闭。<br></code></pre></td></tr></table></figure><p>（4）避免使用双重否定句。</p><figure class="highlight plaintext"><figcaption><span>Text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Plain">错误：没有删除权限的用户，不能删除此文件。<br><br>正确：用户必须拥有删除权限，才能删除此文件。<br></code></pre></td></tr></table></figure><h2 id="写作风格"><a href="#写作风格" class="headerlink" title="写作风格"></a>写作风格</h2><p>（1）尽量不使用被动语态，改为使用主动语态。</p><figure class="highlight plaintext"><figcaption><span>Text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Plain">错误：假如此软件尚未被安装，<br><br>正确：假如尚未安装这个软件，<br></code></pre></td></tr></table></figure><p>（2）不使用非正式的语言风格。</p><figure class="highlight plaintext"><figcaption><span>Text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Plain">错误：Lady Gaga 的演唱会真是酷毙了，从没看过这么给力的表演！！！<br><br>正确：无法参加本次活动，我深感遗憾。<br></code></pre></td></tr></table></figure><p>（3）不使用冷僻、生造或者文言文的词语，而要使用现代汉语的常用表达方式。</p><figure class="highlight plaintext"><figcaption><span>Text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Plain">错误：这是唯二的快速启动的方法。<br><br>正确：这是仅有的两种快速启动的方法。<br></code></pre></td></tr></table></figure><p>（4）用对“的”、“地”、“得”。</p><figure class="highlight plaintext"><figcaption><span>Text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs Plain">她露出了开心的笑容。<br>（形容词＋的＋名词）<br><br>她开心地笑了。<br>（副词＋地＋动词）<br><br>她笑得很开心。<br>（动词＋得＋副词）<br></code></pre></td></tr></table></figure><p>（5）使用代词时（比如“其”、“该”、“此”、“这”等词），必须明确指代的内容，保证只有一个含义。</p><figure class="highlight plaintext"><figcaption><span>Text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Plain">错误：从管理系统可以监视中继系统和受其直接控制的分配系统。<br><br>正确：从管理系统可以监视两个系统：中继系统和受中继系统直接控制的分配系统。<br></code></pre></td></tr></table></figure><p>（6）名词前不要使用过多的形容词。</p><figure class="highlight plaintext"><figcaption><span>Text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Plain">错误：此设备的使用必须在接受过本公司举办的正式的设备培训的技师的指导下进行。<br><br>正确：此设备必须在技师的指导下使用，且指导技师必须接受过由本公司举办的正式设备培训。<br></code></pre></td></tr></table></figure><h2 id="英文处理"><a href="#英文处理" class="headerlink" title="英文处理"></a>英文处理</h2><p>（1）英文原文如果使用了复数形式，翻译成中文时，应该将其还原为单数形式。</p><figure class="highlight plaintext"><figcaption><span>Text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Plain">英文：...information stored in random access memory (RAMs)...<br><br>中文：⋯⋯存储在随机存取存储器（RAM）里的信息⋯⋯<br></code></pre></td></tr></table></figure><p>（2）外文缩写可以使用半角圆点(<code>.</code>)表示缩写。</p><figure class="highlight plaintext"><figcaption><span>Text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Plain">U.S.A.<br>Apple, Inc.<br></code></pre></td></tr></table></figure><p>（3）表示中文时，英文省略号（<code>...</code>）应改为中文省略号（<code>⋯⋯</code>）。</p><figure class="highlight plaintext"><figcaption><span>Text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Plain">英文：5 minutes later...<br><br>中文：5 分钟过去了⋯⋯<br></code></pre></td></tr></table></figure><p>（4）英文书名或电影名改用中文表达时，双引号应改为书名号。</p><figure class="highlight plaintext"><figcaption><span>Text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Plain">英文：He published an article entitled &quot;The Future of the Aviation&quot;.<br><br>中文：他发表了一篇名为《航空业的未来》的文章。<br></code></pre></td></tr></table></figure><p>（5）第一次出现英文词汇时，在括号中给出中文标注。此后再次出现时，直接使用英文缩写即可。</p><figure class="highlight plaintext"><figcaption><span>Text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Plain">IOC（International Olympic Committee，国际奥林匹克委员会）。这样定义后，便可以直接使用“IOC”了。<br></code></pre></td></tr></table></figure><p>（6）专有名词中每个词第一个字母均应大写，非专有名词则不需要大写。</p><figure class="highlight plaintext"><figcaption><span>Text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Plain">“American Association of Physicists in Medicine”（美国医学物理学家协会）是专有名词，需要大写。<br><br>“online transaction processing”（在线事务处理）不是专有名词，不应大写。<br></code></pre></td></tr></table></figure><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://github.com/ruanyf/document-style-guide">中文技术文档的写作规范</a>，by 阮一峰</li></ul>]]></content>
    
    
    <categories>
      
      <category>写作标准</category>
      
    </categories>
    
    
    <tags>
      
      <tag>写作</tag>
      
      <tag>规范</tag>
      
      <tag>文本</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>段落规范</title>
    <link href="/2023/02/23/writing-standard/paragraph/"/>
    <url>/2023/02/23/writing-standard/paragraph/</url>
    
    <content type="html"><![CDATA[<h2 id="原则"><a href="#原则" class="headerlink" title="原则"></a>原则</h2><ul><li>一个段落只能有一个主题，或一个中心句子。</li><li>段落的中心句子放在段首，对全段内容进行概述。后面陈述的句子为中心句子服务。</li><li>一个段落的长度不能超过七行，最佳段落长度小于等于四行。</li><li>段落的句子语气要使用陈述和肯定语气，避免使用感叹语气。</li><li>段落之间使用一个空行隔开。</li><li>段落开头不要留出空白字符。</li></ul><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p>引用第三方内容时，应注明出处。</p><figure class="highlight plaintext"><figcaption><span>Text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Plain">One man’s constant is another man’s variable. — Alan Perlis<br></code></pre></td></tr></table></figure><p>如果是全篇转载，请在全文开头显著位置注明作者和出处，并链接至原文。</p><figure class="highlight plaintext"><figcaption><span>Text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Plain">本文转载自 WikiQuote<br></code></pre></td></tr></table></figure><p>使用外部图片时，必须在图片下方或文末标明来源。</p><figure class="highlight plaintext"><figcaption><span>Text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Plain">本文部分图片来自 Wikipedia<br></code></pre></td></tr></table></figure><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://github.com/ruanyf/document-style-guide">中文技术文档的写作规范</a>，by 阮一峰</li></ul>]]></content>
    
    
    <categories>
      
      <category>写作标准</category>
      
    </categories>
    
    
    <tags>
      
      <tag>写作</tag>
      
      <tag>规范</tag>
      
      <tag>段落</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>标题规范</title>
    <link href="/2023/02/23/writing-standard/title/"/>
    <url>/2023/02/23/writing-standard/title/</url>
    
    <content type="html"><![CDATA[<h2 id="层级"><a href="#层级" class="headerlink" title="层级"></a>层级</h2><p>标题分为四级。</p><ul><li>一级标题：文章的标题</li><li>二级标题：文章主要部分的大标题</li><li>三级标题：二级标题下面一级的小标题</li><li>四级标题：三级标题下面某一方面的小标题</li></ul><p>下面是示例。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-section"># 一级标题</span><br><br><span class="hljs-section">## 二级标题</span><br><br><span class="hljs-section">### 三级标题</span><br><br><span class="hljs-section">#### 四级标题</span><br></code></pre></td></tr></table></figure><h2 id="原则"><a href="#原则" class="headerlink" title="原则"></a>原则</h2><p>（1）一级标题下，不能直接出现三级标题。</p><p>示例：下面的文章结构，缺少二级标题。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-section"># 一级标题</span><br><br><span class="hljs-section">### 三级标题</span><br></code></pre></td></tr></table></figure><p>（2）标题要避免孤立编号（即同级标题只有一个）。</p><p>示例：下面的文章结构，<code>二级标题 A</code>只包含一个三级标题，完全可以省略<code>三级标题 A</code>。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-section">## 二级标题 A</span><br><br><span class="hljs-section">### 三级标题 A</span><br><br><span class="hljs-section">## 二级标题 B</span><br></code></pre></td></tr></table></figure><p>（3）下级标题不重复上一级标题的名字。</p><p>示例：下面的文章结构，二级标题与下属的三级标题同名，建议避免。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-section">## 概述</span><br><br><span class="hljs-section">### 概述</span><br></code></pre></td></tr></table></figure><p>（4）谨慎使用四级标题，尽量避免出现，保持层级的简单，防止出现过于复杂的章节。</p><p>如果三级标题下有并列性的内容，建议只使用项目列表（Item list）。</p><p>示例：下面的结构二要好于结构一。结构一适用的场景，主要是较长篇幅的内容。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs markdown">结构一<br><br><span class="hljs-section">### 三级标题</span><br><br><span class="hljs-section">#### 四级标题 A</span><br><br><span class="hljs-section">#### 四级标题 B</span><br><br><span class="hljs-section">#### 四级标题 C</span><br><br>结构二<br><br><span class="hljs-section">### 三级标题</span><br><br><span class="hljs-strong">**（1）A**</span><br><br><span class="hljs-strong">**（2）B**</span><br><br><span class="hljs-strong">**（3）C**</span><br></code></pre></td></tr></table></figure><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://github.com/ruanyf/document-style-guide">中文技术文档的写作规范</a>，by 阮一峰</li></ul>]]></content>
    
    
    <categories>
      
      <category>写作标准</category>
      
    </categories>
    
    
    <tags>
      
      <tag>写作</tag>
      
      <tag>规范</tag>
      
      <tag>标题</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
